/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'prod_test_531.axf'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct bd_addr;
struct co_list_hdr;
struct hci_cmd_desc_tag;
struct prf_env;

/* 2 */
typedef unsigned __int16 uint16_t;

/* 3 */
typedef unsigned __int8 uint8_t;

/* 1 */
struct nvds_data_struct
{
  uint16_t lpclk_drift;
  uint8_t bd_address[6];
  uint16_t ble_ca_timer_dur;
  uint8_t ble_cra_timer_dur;
  uint8_t ble_ca_min_rssi;
  uint8_t ble_ca_nb_pkt;
  uint8_t ble_ca_nb_bad_pkt;
};

/* 4 */
struct rom_nvds_cfg_t
{
  const nvds_data_struct *nvds_data_storage;
  bd_addr *dev_bdaddr;
};

/* 5 */
struct bd_addr
{
  uint8_t addr[6];
};

/* 6 */
typedef uint8_t nvds_tag_len_t;

/* 7 */
enum NVDS_STATUS : __int8
{
  NVDS_OK = 0x0,
  NVDS_FAIL = 0x1,
  NVDS_TAG_NOT_DEFINED = 0x2,
  NVDS_NO_SPACE_AVAILABLE = 0x3,
  NVDS_LENGTH_OUT_OF_RANGE = 0x4,
  NVDS_PARAM_LOCKED = 0x5,
  NVDS_CORRUPT = 0x6,
};

/* 8 */
enum NVDS_TAG : __int8
{
  NVDS_TAG_BD_ADDRESS = 0x1,
  NVDS_TAG_DEVICE_NAME = 0x2,
  NVDS_TAG_LPCLK_DRIFT = 0x7,
  NVDS_TAG_LPCLK_JITTER = 0x8,
  NVDS_TAG_RADIO_CLASS = 0x9,
  NVDS_TAG_BJ_TXCNTL1 = 0xA,
  NVDS_TAG_APP_BLE_ADV_DATA = 0xB,
  NVDS_TAG_APP_BLE_SCAN_RESP_DATA = 0xC,
  NVDS_TAG_EXT_WAKEUP_TIME = 0xD,
  NVDS_TAG_OSC_WAKEUP_TIME = 0xE,
  NVDS_TAG_RM_WAKEUP_TIME = 0xF,
  NVDS_TAG_UART_BAUDRATE = 0x10,
  NVDS_TAG_SLEEP_ENABLE = 0x11,
  NVDS_TAG_EXT_WAKEUP_ENABLE = 0x12,
  NVDS_TAG_SP_PRIVATE_KEY = 0x13,
  NVDS_TAG_SP_PUBLIC_KEY = 0x14,
  NVDS_TAG_ERRATA_ADOPTED = 0x15,
  NVDS_TAG_BASIC_THRESHOLD = 0x16,
  NVDS_TAG_EDR_THRESHOLD = 0x17,
  NVDS_TAG_BASIC_ALGORITHM = 0x18,
  NVDS_TAG_EDR_ALGORITHM = 0x19,
  NVDS_TAG_BASIC_PACKET_LUT = 0x2A,
  NVDS_TAG_EDR_PACKET_LUT = 0x2B,
  NVDS_TAG_SYNC_CONFIG = 0x2C,
  NVDS_TAG_PCM_SETTINGS = 0x2D,
  NVDS_TAG_HCI_SYNC_BUF_SIZE = 0x2E,
  NVDS_TAG_DIAG_BT_HW = 0x30,
  NVDS_TAG_DIAG_BLE_HW = 0x31,
  NVDS_TAG_DIAG_SW = 0x32,
  NVDS_TAG_DIAG_PLF = 0x34,
  NVDS_TAG_MOUSE_SAMPLE_RATE = 0x38,
  NVDS_TAG_PERIPH_BONDED = 0x39,
  NVDS_TAG_MOUSE_NTF_CFG = 0x3A,
  NVDS_TAG_MOUSE_TIMEOUT = 0x3B,
  NVDS_TAG_PEER_BD_ADDRESS = 0x3C,
  NVDS_TAG_MOUSE_ENERGY_SAFE = 0x3D,
  NVDS_TAG_LTK = 0x3E,
  NVDS_TAG_PAIRING = 0x3F,
  NVDS_TAG_BLE_CA_TIMER_DUR = 0x40,
  NVDS_TAG_BLE_CRA_TIMER_DUR = 0x41,
  NVDS_TAG_BLE_CA_MIN_RSSI = 0x42,
  NVDS_TAG_BLE_CA_NB_PKT = 0x43,
  NVDS_TAG_BLE_CA_NB_BAD_PKT = 0x44,
  NVDS_TAG_AFH_REASS_NBCH = 0x51,
  NVDS_TAG_AFH_WINLGTH = 0x52,
  NVDS_TAG_AFH_RSSIMIN = 0x53,
  NVDS_TAG_AFH_PERTHRESBAD = 0x54,
  NVDS_TAG_AFH_REASS_INT = 0x55,
  NVDS_TAG_AFH_NMIN = 0x56,
  NVDS_TAG_AFH_MAXADAPT = 0x57,
  NVDS_TAG_AFH_THSMIN = 0x58,
  NVDS_TAG_BT_LINK_KEY_FIRST = 0x60,
  NVDS_TAG_BT_LINK_KEY_LAST = 0x67,
  NVDS_TAG_BLE_LINK_KEY_FIRST = 0x70,
  NVDS_TAG_BLE_LINK_KEY_LAST = 0x7F,
};

/* 9 */
enum NVDS_LEN : __int8
{
  NVDS_LEN_BD_ADDRESS = 0x6,
  NVDS_LEN_DEVICE_NAME = 0xF8,
  NVDS_LEN_LPCLK_DRIFT = 0x2,
  NVDS_LEN_LPCLK_JITTER = 0x1,
  NVDS_LEN_RADIO_CLASS = 0x1,
  NVDS_LEN_BJ_TXCNTL1 = 0x4,
  NVDS_LEN_APP_BLE_ADV_DATA = 0x20,
  NVDS_LEN_APP_BLE_SCAN_RESP_DATA = 0x20,
  NVDS_LEN_EXT_WAKEUP_TIME = 0x2,
  NVDS_LEN_OSC_WAKEUP_TIME = 0x2,
  NVDS_LEN_RM_WAKEUP_TIME = 0x2,
  NVDS_LEN_UART_BAUDRATE = 0x4,
  NVDS_LEN_SLEEP_ENABLE = 0x1,
  NVDS_LEN_EXT_WAKEUP_ENABLE = 0x1,
  NVDS_LEN_SP_PRIVATE_KEY = 0x18,
  NVDS_LEN_SP_PUBLIC_KEY = 0x30,
  NVDS_LEN_ERRATA_ADOPTED = 0x1,
  NVDS_LEN_BASIC_THRESHOLD = 0x46,
  NVDS_LEN_EDR_THRESHOLD = 0x46,
  NVDS_LEN_BASIC_ALGORITHM = 0x15,
  NVDS_LEN_EDR_ALGORITHM = 0x15,
  NVDS_LEN_BASIC_PACKET_LUT = 0x10,
  NVDS_LEN_EDR_PACKET_LUT = 0x10,
  NVDS_LEN_SYNC_CONFIG = 0x2,
  NVDS_LEN_PCM_SETTINGS = 0x4,
  NVDS_LEN_HCI_SYNC_BUF_SIZE = 0x1,
  NVDS_LEN_DIAG_BT_HW = 0x4,
  NVDS_LEN_DIAG_BLE_HW = 0x4,
  NVDS_LEN_DIAG_SW = 0x4,
  NVDS_LEN_DIAG_PLF = 0x4,
  NVDS_LEN_MOUSE_SAMPLE_RATE = 0x1,
  NVDS_LEN_PERIPH_BONDED = 0x1,
  NVDS_LEN_MOUSE_NTF_CFG = 0x2,
  NVDS_LEN_MOUSE_TIMEOUT = 0x2,
  NVDS_LEN_PEER_BD_ADDRESS = 0x7,
  NVDS_LEN_MOUSE_SAFE_ENERGY = 0x2,
  NVDS_LEN_LTK = 0x1C,
  NVDS_LEN_PAIRING = 0x36,
  NVDS_LEN_BLE_CA_TIMER_DUR = 0x2,
  NVDS_LEN_BLE_CRA_TIMER_DUR = 0x1,
  NVDS_LEN_BLE_CA_MIN_RSSI = 0x1,
  NVDS_LEN_BLE_CA_NB_PKT = 0x1,
  NVDS_LEN_BLE_CA_NB_BAD_PKT = 0x1,
  NVDS_LEN_AFH_REASS_NBCH = 0x1,
  NVDS_LEN_AFH_WINLGTH = 0x1,
  NVDS_LEN_AFH_RSSIMIN = 0x1,
  NVDS_LEN_AFH_PERTHRESBAD = 0x1,
  NVDS_LEN_AFH_REASS_INT = 0x1,
  NVDS_LEN_AFH_NMIN = 0x1,
  NVDS_LEN_AFH_MAXADAPT = 0x1,
  NVDS_LEN_AFH_THSMIN = 0x1,
  NVDS_LEN_BT_LINK_KEY = 0x16,
  NVDS_LEN_BLE_LINK_KEY = 0x30,
};

/* 10 */
enum $64EF1C0260FDB43DDD46CEE588C0655A : __int8
{
  TX_PW_LVL_CURRENT = 0x0,
  TX_PW_LVL_MAX = 0x1,
  TX_PW_LVL_END = 0x2,
};

/* 11 */
enum $11C0AA21CEFD687ED13822AF5210ECB5 : __int8
{
  FLOW_CTRL_OFF = 0x0,
  FLOW_CTRL_ON_ACL_OFF_SYNC = 0x1,
  FLOW_CTRL_OFF_ACL_ON_SYNC = 0x2,
  FLOW_CTRL_ON_ACL_ON_SYNC = 0x3,
  FLOW_CTRL_END = 0x4,
};

/* 12 */
enum $93D2BF4121A0F734D8A01F49598EA0D3 : __int8
{
  LE_SUPP_HOST_DIS = 0x0,
  LE_SUPP_HOST_EN = 0x1,
  LE_SUPP_HOST_END = 0x2,
};

/* 13 */
enum $83EC13F8298927C5041B2CF98C5DFF9F : __int8
{
  SIMULT_LE_HOST_DIS = 0x0,
  SIMULT_LE_HOST_EN = 0x1,
  SIMULT_LE_HOST_END = 0x2,
};

/* 14 */
enum $7970F4CA1DC8F5BFE7C3BEC2A8A2C17F : __int8
{
  ADV_CONN_UNDIR = 0x0,
  ADV_CONN_DIR = 0x1,
  ADV_DISC_UNDIR = 0x2,
  ADV_NONCONN_UNDIR = 0x3,
  ADV_CONN_DIR_LDC = 0x4,
  ADV_END = 0x5,
};

/* 15 */
enum $61366D9583798F6C1ADCFA5B331F8744 : __int8
{
  SCAN_REQ = 0x0,
  SCAN_RSP = 0x1,
  SCAN_LEN = 0x2,
};

/* 16 */
enum $453C94C73C4D578963A7C0FC08097F30 : __int8
{
  ADDR_PUBLIC = 0x0,
  ADDR_RAND = 0x1,
  ADDR_RPA_PUBLIC = 0x2,
  ADDR_RPA_RAND = 0x3,
  ADDR_END = 0x4,
};

/* 17 */
enum adv_channel_map : __int8
{
  ADV_CHNL_37_EN = 0x1,
  ADV_CHNL_38_EN = 0x2,
  ADV_CHNL_39_EN = 0x4,
  ADV_ALL_CHNLS_EN = 0x7,
  ADV_CHNL_END = 0x8,
};

/* 18 */
enum adv_filter_policy : __int8
{
  ADV_ALLOW_SCAN_ANY_CON_ANY = 0x0,
  ADV_ALLOW_SCAN_WLST_CON_ANY = 0x1,
  ADV_ALLOW_SCAN_ANY_CON_WLST = 0x2,
  ADV_ALLOW_SCAN_WLST_CON_WLST = 0x3,
  ADV_ALLOW_SCAN_END = 0x4,
};

/* 19 */
enum $2535413AEA402B4580644B2DD1A3E949 : __int8
{
  ADV_DIS = 0x0,
  ADV_EN = 0x1,
  ADV_EN_END = 0x2,
};

/* 20 */
enum $7DFC3423E6C6A13FF1D598E37E62ACCE : __int8
{
  SCAN_PASSIVE = 0x0,
  SCAN_ACTIVE = 0x1,
  SCAN_END = 0x2,
};

/* 21 */
enum scan_filter_policy : __int8
{
  SCAN_ALLOW_ADV_ALL = 0x0,
  SCAN_ALLOW_ADV_WLST = 0x1,
  SCAN_ALLOW_ADV_ALL_RPA = 0x2,
  SCAN_ALLOW_ADV_WLST_RPA = 0x3,
  SCAN_ALLOW_ADV_END = 0x4,
};

/* 22 */
enum $A59E6CEF3B1453262DEF5E6C12BD82BD : __int8
{
  SCAN_DIS = 0x0,
  SCAN_EN = 0x1,
  SCAN_EN_END = 0x2,
};

/* 23 */
enum scan_dup_filter_policy : __int8
{
  SCAN_FILT_DUPLIC_DIS = 0x0,
  SCAN_FILT_DUPLIC_EN = 0x1,
  SCAN_FILT_DUPLIC_END = 0x2,
};

/* 24 */
enum $F196B912D6572A3555380DE2B2BE7CF5 : __int8
{
  INIT_FILT_IGNORE_WLST = 0x0,
  INIT_FILT_USE_WLST = 0x1,
  INIT_FILT_END = 0x2,
};

/* 25 */
enum $DBB45BCB4AF23B14A9E531AE384B56F8 : __int8
{
  PAYL_PSEUDO_RAND_9 = 0x0,
  PAYL_11110000 = 0x1,
  PAYL_10101010 = 0x2,
  PAYL_PSEUDO_RAND_15 = 0x3,
  PAYL_ALL_1 = 0x4,
  PAYL_ALL_0 = 0x5,
  PAYL_00001111 = 0x6,
  PAYL_01010101 = 0x7,
  PAYL_END = 0x8,
};

/* 26 */
enum $783CAD725BF63869D68CC644E0755292 : __int8
{
  ROLE_MASTER = 0x0,
  ROLE_SLAVE = 0x1,
  ROLE_END = 0x2,
};

/* 27 */
enum $1833033FF6D14D5E30ACDDB1606BC44A : __int8
{
  SCA_500PPM = 0x0,
  SCA_250PPM = 0x1,
  SCA_150PPM = 0x2,
  SCA_100PPM = 0x3,
  SCA_75PPM = 0x4,
  SCA_50PPM = 0x5,
  SCA_30PPM = 0x6,
  SCA_20PPM = 0x7,
};

/* 28 */
enum $3E4099CCF2729DDD1E92E93DA0A586DD : __int8
{
  FC_OFF = 0x0,
  FC_DATA_ON_SYNC_OFF = 0x1,
  FC_DATA_OFF_SYNC_ON = 0x2,
  FC_ON = 0x3,
};

/* 29 */
enum $51E876DBC243058FBD56724422499162 : __int8
{
  LL_ADV_CONN_UNDIR = 0x0,
  LL_ADV_CONN_DIR = 0x1,
  LL_ADV_NONCONN_UNDIR = 0x2,
  LL_SCAN_REQ = 0x3,
  LL_SCAN_RSP = 0x4,
  LL_CONNECT_REQ = 0x5,
  LL_ADV_DISC_UNDIR = 0x6,
  LL_ADV_END = 0x7,
};

/* 30 */
enum $121221939EC782E091E501271BA80649 : __int8
{
  LL_CONNECTION_UPDATE_REQ = 0x0,
  LL_CHANNEL_MAP_REQ = 0x1,
  LL_TERMINATE_IND = 0x2,
  LL_ENC_REQ = 0x3,
  LL_ENC_RSP = 0x4,
  LL_START_ENC_REQ = 0x5,
  LL_START_ENC_RSP = 0x6,
  LL_UNKNOWN_RSP = 0x7,
  LL_FEATURE_REQ = 0x8,
  LL_FEATURE_RSP = 0x9,
  LL_PAUSE_ENC_REQ = 0xA,
  LL_PAUSE_ENC_RSP = 0xB,
  LL_VERSION_IND = 0xC,
  LL_REJECT_IND = 0xD,
  LL_SLAVE_FEATURE_REQ = 0xE,
  LL_CONNECTION_PARAM_REQ = 0xF,
  LL_CONNECTION_PARAM_RSP = 0x10,
  LL_REJECT_IND_EXT = 0x11,
  LL_PING_REQ = 0x12,
  LL_PING_RSP = 0x13,
  LL_LENGTH_REQ = 0x14,
  LL_LENGTH_RSP = 0x15,
  LL_OPCODE_MAX = 0x16,
  LL_IDLE = 0x17,
};

/* 31 */
enum $45E9BD372BD7ED53FECFC5963DDFB6EE : __int8
{
  LLID_RFU = 0x0,
  LLID_CONTINUE = 0x1,
  LLID_START = 0x2,
  LLID_CNTL = 0x3,
  LLID_END = 0x4,
};

/* 32 */
struct bd_name
{
  uint8_t namelen;
  uint8_t name[248];
};

/* 33 */
struct device_name
{
  uint8_t name[248];
};

/* 34 */
struct name_vect
{
  uint8_t vect[14];
};

/* 35 */
struct lap
{
  uint8_t A[3];
};

/* 36 */
struct devclass
{
  uint8_t A[3];
};

/* 37 */
struct eir
{
  uint8_t data[240];
};

/* 38 */
struct evt_mask
{
  uint8_t mask[8];
};

/* 39 */
struct host_cmpl_pkts
{
  uint16_t con_hdl;
  uint16_t nb_cmpl_pkts;
};

/* 40 */
struct access_addr
{
  uint8_t addr[4];
};

/* 41 */
struct adv_data
{
  uint8_t data[31];
};

/* 42 */
struct scan_rsp_data
{
  uint8_t data[31];
};

/* 43 */
struct chnl_map
{
  uint8_t map[10];
};

/* 44 */
struct le_chnl_map
{
  uint8_t map[5];
};

/* 45 */
struct ltk
{
  uint8_t ltk[16];
};

/* 46 */
struct bd_addr_plus_key
{
  bd_addr bd_addr;
  ltk link_key;
};

/* 47 */
struct rand_nb
{
  uint8_t nb[8];
};

/* 48 */
struct adv_report
{
  uint8_t evt_type;
  uint8_t adv_addr_type;
  bd_addr adv_addr;
  uint8_t data_len;
  uint8_t data[31];
  uint8_t rssi;
};

/* 49 */
struct direct_adv_report
{
  uint8_t evt_type;
  uint8_t adv_addr_type;
  bd_addr adv_addr;
  uint8_t direct_adv_addr_type;
  bd_addr direct_adv_addr;
  uint8_t rssi;
};

/* 50 */
struct le_features
{
  uint8_t feats[8];
};

/* 51 */
struct hash
{
  uint8_t C[16];
};

/* 52 */
struct randomizer
{
  uint8_t R[16];
};

/* 53 */
struct pin_code
{
  uint8_t pin[16];
};

/* 54 */
struct sres_nb
{
  uint8_t nb[4];
};

/* 55 */
struct aco
{
  uint8_t a[12];
};

/* 56 */
struct byte16
{
  uint8_t A[16];
};

/* 57 */
struct nb_cmpl_pk
{
  uint16_t con_hdl;
  uint16_t nb_hc_cmpl_pkts;
};

/* 58 */
struct features
{
  uint8_t feats[8];
};

/* 59 */
struct supp_cmds
{
  uint8_t cmds[64];
};

/* 60 */
struct lmp_features
{
  uint8_t feats[8];
};

/* 61 */
struct io_capability
{
  uint8_t io_cap;
  uint8_t oob_data;
  uint8_t aut_req;
};

/* 62 */
struct pub_key
{
  uint8_t p_key[24];
};

/* 63 */
struct sp_pub_key
{
  pub_key X;
  pub_key Y;
};

/* 64 */
struct le_states
{
  uint8_t supp_states[8];
};

/* 65 */
struct white_list
{
  bd_addr wl_bdaddr;
  uint8_t wl_bdaddr_type;
};

/* 66 */
struct crc_init
{
  uint8_t crc[3];
};

/* 67 */
struct sess_k_div_x
{
  uint8_t skdiv[8];
};

/* 68 */
struct sess_k_div
{
  uint8_t skd[16];
};

/* 69 */
struct init_vect
{
  uint8_t iv[4];
};

/* 70 */
struct ec_point
{
  uint8_t x[32];
  uint8_t y[32];
};

/* 71 */
struct ecdh_key_pair
{
  uint8_t private_key[32];
  ec_point public_key;
};

/* 72 */
typedef __int64 long_long;

/* 73 */
typedef char int8_t;

/* 74 */
typedef __int16 int16_t;

/* 75 */
typedef int int32_t;

/* 76 */
typedef long_long int64_t;

/* 77 */
typedef unsigned int uint32_t;

/* 78 */
typedef unsigned __int64 uint64_t;

/* 79 */
typedef char int_least8_t;

/* 80 */
typedef __int16 int_least16_t;

/* 81 */
typedef int int_least32_t;

/* 82 */
typedef long_long int_least64_t;

/* 83 */
typedef unsigned __int8 uint_least8_t;

/* 84 */
typedef unsigned __int16 uint_least16_t;

/* 85 */
typedef unsigned int uint_least32_t;

/* 86 */
typedef unsigned __int64 uint_least64_t;

/* 87 */
typedef int int_fast8_t;

/* 88 */
typedef int int_fast16_t;

/* 89 */
typedef int int_fast32_t;

/* 90 */
typedef long_long int_fast64_t;

/* 91 */
typedef unsigned int uint_fast8_t;

/* 92 */
typedef unsigned int uint_fast16_t;

/* 93 */
typedef unsigned int uint_fast32_t;

/* 94 */
typedef unsigned __int64 uint_fast64_t;

/* 95 */
typedef int intptr_t;

/* 96 */
typedef unsigned int uintptr_t;

/* 97 */
typedef long_long intmax_t;

/* 98 */
typedef unsigned __int64 uintmax_t;

/* 99 */
struct co_list
{
  co_list_hdr *first;
  co_list_hdr *last;
  uint32_t cnt;
  uint32_t maxcnt;
  uint32_t mincnt;
};

/* 100 */
struct co_list_hdr
{
  co_list_hdr *next;
};

/* 101 */
enum $790BDE7F4D8226B626B50C98AFF97163 : __int8
{
  POOL_LINKED_LIST = 0x0,
  RING_LINKED_LIST = 0x1,
  LINK_TYPE_END = 0x2,
};

/* 103 */
typedef uint16_t ke_msg_id_t;

/* 104 */
typedef uint16_t ke_task_id_t;

/* 102 */
struct ke_msg
{
  struct co_list_hdr hdr;
  uint32_t saved;
  ke_msg_id_t id;
  ke_task_id_t dest_id;
  ke_task_id_t src_id;
  uint16_t param_len;
  uint32_t param[1];
};

/* 105 */
typedef uint8_t ke_state_t;

/* 106 */
enum ke_msg_status_tag : __int8
{
  KE_MSG_CONSUMED = 0x0,
  KE_MSG_NO_FREE = 0x1,
  KE_MSG_SAVED = 0x2,
};

/* 107 */
struct co_buf_rx_desc
{
  uint16_t rxptr;
  uint16_t rxstatus;
  uint16_t rxheader;
  uint16_t rxchass;
  uint16_t rxdataptr;
};

/* 108 */
struct co_buf_tx_desc
{
  uint16_t txptr;
  uint16_t txheader;
  uint16_t txdataptr;
};

/* 109 */
struct __attribute__((aligned(4))) co_buf_tx_node
{
  co_list_hdr hdr;
  uint16_t idx;
};

/* 110 */
struct __attribute__((aligned(4))) co_buf_env_tag
{
  co_list tx_free;
  co_buf_tx_node tx_node[15];
  co_buf_tx_desc *tx_desc;
  co_buf_rx_desc *rx_desc;
  uint8_t rx_current;
};

/* 111 */
typedef int (*ke_msg_func_t)(const ke_msg_id_t, const void *, const ke_task_id_t, const ke_task_id_t);

/* 112 */
struct custom_msg_handler
{
  ke_task_id_t task_id;
  ke_msg_id_t id;
  ke_msg_func_t func;
};

/* 113 */
struct ke_msg_handler
{
  ke_msg_id_t id;
  ke_msg_func_t func;
};

/* 114 */
struct ke_state_handler
{
  const struct ke_msg_handler *msg_table;
  uint16_t msg_cnt;
};

/* 115 */
struct ke_task_desc
{
  const struct ke_state_handler *state_handler;
  const struct ke_state_handler *default_handler;
  ke_state_t *state;
  uint16_t state_max;
  uint16_t idx_max;
};

/* 116 */
enum KE_TASK_STATUS
{
  KE_TASK_OK = 0x0,
  KE_TASK_FAIL = 0x1,
  KE_TASK_UNKNOWN = 0x2,
  KE_TASK_CAPA_EXCEEDED = 0x3,
  KE_TASK_ALREADY_EXISTS = 0x4,
};

/* 117 */
enum sleep_mode_t : __int8
{
  mode_active = 0x0,
  mode_idle = 0x1,
  mode_ext_sleep = 0x2,
  mode_ext_sleep_otp_copy = 0x3,
  mode_sleeping = 0x4,
};

/* 118 */
enum boost_overhead_st : __int8
{
  NOT_MEASURED = 0x0,
  APPLY_OVERHEAD = 0x1,
  NO_OVERHEAD = 0x2,
};

/* 119 */
enum drift_value_in_ppm : __int16
{
  DRIFT_20PPM = 0x14,
  DRIFT_30PPM = 0x1E,
  DRIFT_50PPM = 0x32,
  DRIFT_75PPM = 0x4B,
  DRIFT_100PPM = 0x64,
  DRIFT_150PPM = 0x96,
  DRIFT_250PPM = 0xFA,
  DRIFT_500PPM = 0x1F4,
};

/* 120 */
struct mem_usage_log
{
  uint16_t max_used_sz;
  uint16_t used_sz;
  uint16_t max_used_other_sz;
  uint16_t used_other_sz;
};

/* 121 */
struct __attribute__((aligned(4))) ea_interval_tag
{
  co_list_hdr hdr;
  uint16_t interval_used;
  uint16_t offset_used;
  uint16_t bandwidth_used;
  uint16_t conhdl_used;
  uint16_t role_used;
  bool odd_offset;
  uint16_t linkid;
};

/* 122 */
struct ea_param_input
{
  uint16_t interval_min;
  uint16_t interval_max;
  uint16_t duration_min;
  uint16_t duration_max;
  uint8_t pref_period;
  uint16_t offset;
  uint8_t action;
  uint16_t conhdl;
  uint16_t role;
  bool odd_offset;
  uint16_t linkid;
};

/* 123 */
struct ea_param_output
{
  uint16_t interval;
  uint16_t duration;
  uint16_t offset;
};

/* 124 */
enum ea_error : __int8
{
  EA_ERROR_OK = 0x0,
  EA_ERROR_PROG = 0x1,
  EA_ERROR_REJECTED = 0x2,
  EA_ERROR_CANCELED = 0x3,
  EA_ERROR_NOT_FOUND = 0x4,
  EA_ERROR_ALREADY_FREE = 0x5,
  EA_ERROR_BW_FULL = 0x6,
};

/* 125 */
enum ea_param_req_action : __int8
{
  EA_PARAM_REQ_GET = 0x0,
  EA_PARAM_REQ_CHECK = 0x1,
};

/* 126 */
enum ea_elt_asap_type : __int8
{
  EA_FLAG_NO_ASAP = 0x0,
  EA_FLAG_ASAP_NO_LIMIT = 0x1,
  EA_FLAG_ASAP_LIMIT = 0x2,
  EA_FLAG_MAX = 0x3,
};

/* 127 */
enum ea_elt_asap_parity : __int8
{
  EA_EVEN_SLOT = 0x0,
  EA_ODD_SLOT = 0x1,
};

/* 128 */
struct ea_elt_tag
{
  co_list_hdr hdr;
  ea_elt_tag *linked_element;
  uint32_t timestamp;
  uint32_t asap_field;
  uint16_t duration_min;
  uint8_t current_prio;
  uint8_t prev_stop_thr1;
  uint8_t prev_stop_thr2;
  uint8_t prev_start_thr;
  void (*ea_cb_prevent_start)(ea_elt_tag *);
  void (*ea_cb_prevent_stop)(ea_elt_tag *);
  void (*ea_cb_cancel)(ea_elt_tag *);
  void *env;
};

/* 129 */
enum GPIO_PUPD : __int16
{
  INPUT = 0x0,
  INPUT_PULLUP = 0x100,
  INPUT_PULLDOWN = 0x200,
  OUTPUT = 0x300,
};

/* 130 */
enum GPIO_POWER_RAIL : __int8
{
  GPIO_POWER_RAIL_3V = 0x0,
  GPIO_POWER_RAIL_1V = 0x1,
};

/* 131 */
enum GPIO_PORT : __int8
{
  GPIO_PORT_0 = 0x0,
};

/* 132 */
enum GPIO_PIN : __int8
{
  GPIO_PIN_0 = 0x0,
  GPIO_PIN_1 = 0x1,
  GPIO_PIN_2 = 0x2,
  GPIO_PIN_3 = 0x3,
  GPIO_PIN_4 = 0x4,
  GPIO_PIN_5 = 0x5,
  GPIO_PIN_6 = 0x6,
  GPIO_PIN_7 = 0x7,
  GPIO_PIN_8 = 0x8,
  GPIO_PIN_9 = 0x9,
  GPIO_PIN_10 = 0xA,
  GPIO_PIN_11 = 0xB,
};

/* 133 */
enum GPIO_FUNCTION : __int8
{
  PID_GPIO = 0x0,
  PID_UART1_RX = 0x1,
  PID_UART1_TX = 0x2,
  PID_UART2_RX = 0x3,
  PID_UART2_TX = 0x4,
  PID_SYS_CLK = 0x5,
  PID_LP_CLK = 0x6,
  PID_I2C_SCL = 0x9,
  PID_I2C_SDA = 0xA,
  PID_PWM5 = 0xB,
  PID_PWM6 = 0xC,
  PID_PWM7 = 0xD,
  PID_ADC = 0xF,
  PID_PWM0 = 0x10,
  PID_PWM1 = 0x11,
  PID_BLE_DIAG = 0x12,
  PID_UART1_CTSN = 0x13,
  PID_UART1_RTSN = 0x14,
  PID_PWM2 = 0x17,
  PID_PWM3 = 0x18,
  PID_PWM4 = 0x19,
  PID_SPI_DI = 0x1A,
  PID_SPI_DO = 0x1B,
  PID_SPI_CLK = 0x1C,
  PID_SPI_EN = 0x1D,
  PID_SPI_EN1 = 0x1E,
};

/* 134 */
enum GPIO_IRQ_INPUT_LEVEL : __int8
{
  GPIO_IRQ_INPUT_LEVEL_HIGH = 0x0,
  GPIO_IRQ_INPUT_LEVEL_LOW = 0x1,
};

/* 135 */
enum GPIO_POR_PIN_POLARITY : __int8
{
  GPIO_POR_PIN_POLARITY_LOW = 0x0,
  GPIO_POR_PIN_POLARITY_HIGH = 0x1,
};

/* 136 */
typedef void (*GPIO_handler_function_t)(void);

/* 137 */
struct hci_evt_desc_tag
{
  uint8_t code;
  uint8_t dest_field;
  uint8_t special_pack;
  void *par_fmt;
};

/* 138 */
typedef uint16_t (*hci_pkupk_func_t)(uint8_t *, uint8_t *, uint16_t *, uint16_t);

/* 139 */
struct hci_env_tag
{
  evt_mask evt_msk;
  evt_mask evt_msk_page_2;
};

/* 140 */
enum HCI_MSG_DEST_LL : __int8
{
  MNG = 0x0,
  CTRL = 0x1,
  BLE_MNG = 0x2,
  BLE_CTRL = 0x3,
  BT_MNG = 0x4,
  BT_CTRL_CONHDL = 0x5,
  BT_CTRL_BD_ADDR = 0x6,
  DBG = 0x7,
  LL_UNDEF = 0x8,
};

/* 141 */
enum HCI_MSG_DEST_HL : __int8
{
  HL_MNG = 0x0,
  HL_CTRL = 0x1,
  HL_DATA = 0x2,
  HL_UNDEF = 0x3,
};

/* 142 */
enum HCI_PACK_STATUS : __int8
{
  HCI_PACK_OK = 0x0,
  HCI_PACK_IN_BUF_OVFLW = 0x1,
  HCI_PACK_OUT_BUF_OVFLW = 0x2,
  HCI_PACK_WRONG_FORMAT = 0x3,
  HCI_PACK_ERROR = 0x4,
};

/* 143 */
struct hci_cmd_desc_tab_ref
{
  uint8_t ogf;
  uint16_t nb_cmds;
  const hci_cmd_desc_tag *cmd_desc_tab;
};

/* 144 */
struct hci_cmd_desc_tag
{
  uint16_t opcode;
  uint8_t dest_field;
  uint8_t special_pack_settings;
  void *par_fmt;
  void *ret_par_fmt;
};

/* 145 */
enum $D073F28688CDD1AD0B94E71FCC43657A : __int16
{
  HCI_VS1_USER_CMD_OPCODE = 0xFD00,
  HCI_VS2_USER_CMD_OPCODE = 0xFD01,
  HCI_VS_LAST_USER_CMD_OPCODE = 0xFD02,
};

/* 146 */
struct hci_vs1_user_cmd
{
  uint8_t inputData;
};

/* 147 */
struct hci_vs1_user_cmd_cmp_evt
{
  uint8_t status;
  uint8_t returnData;
};

/* 148 */
struct hci_vs2_user_cmd
{
  uint8_t inputData;
};

/* 149 */
struct hci_vs2_user_cmd_cmp_evt
{
  uint8_t status;
  uint8_t returnData;
  uint8_t mycode;
};

/* 150 */
enum IRQn : __int8
{
  NonMaskableInt_IRQn = 0xF2,
  HardFault_IRQn = 0xF3,
  SVCall_IRQn = 0xFB,
  PendSV_IRQn = 0xFE,
  SysTick_IRQn = 0xFF,
  BLE_WAKEUP_LP_IRQn = 0x0,
  BLE_GEN_IRQn = 0x1,
  UART_IRQn = 0x2,
  UART2_IRQn = 0x3,
  I2C_IRQn = 0x4,
  SPI_IRQn = 0x5,
  ADC_IRQn = 0x6,
  KEYBRD_IRQn = 0x7,
  BLE_RF_DIAG_IRQn = 0x8,
  RF_CAL_IRQn = 0x9,
  GPIO0_IRQn = 0xA,
  GPIO1_IRQn = 0xB,
  GPIO2_IRQn = 0xC,
  GPIO3_IRQn = 0xD,
  GPIO4_IRQn = 0xE,
  SWTIM_IRQn = 0xF,
  WKUP_QUADEC_IRQn = 0x10,
  SWTIM1_IRQn = 0x11,
  RTC_IRQn = 0x12,
  DMA_IRQn = 0x13,
  XTAL32M_RDY_IRQn = 0x14,
  RESERVED21_IRQn = 0x15,
  RESERVED22_IRQn = 0x16,
  RESERVED23_IRQn = 0x17,
};

/* 151 */
typedef IRQn IRQn_Type;

/* 152 */
struct __CLK_REF_SEL_REG
{
  unsigned __int16 BITFLD_REF_CLK_SEL : 2;
  unsigned __int16 BITFLD_REF_CAL_START : 1;
  unsigned __int16 BITFLD_EXT_CNT_EN_SEL : 1;
};

/* 153 */
struct __CLK_REF_CNT_REG
{
  unsigned __int16 BITFLD_REF_CNT_VAL : 16;
};

/* 154 */
struct __CLK_REF_VAL_L_REG
{
  unsigned __int16 BITFLD_XTAL_CNT_VAL : 16;
};

/* 155 */
struct __CLK_REF_VAL_H_REG
{
  unsigned __int16 BITFLD_XTAL_CNT_VAL : 16;
};

/* 156 */
struct __MBIST_SRAM12_ADDR_REG
{
  unsigned __int16 BITFLD_MBIST_ADDR : 1;
};

/* 157 */
struct __MBIST_SRAM12_STATE_REG
{
  unsigned __int16 BITFLD_MBIST_STATE : 1;
};

/* 158 */
struct __MBIST_SRAM12_RD_MSB_REG
{
  unsigned __int16 BITFLD_MBIST_MSB_DATA : 1;
};

/* 159 */
struct __MBIST_SRAM12_RD_LSB_REG
{
  unsigned __int16 BITFLD_MBIST_LSB_DATA : 1;
};

/* 160 */
struct __MBIST_SRAM3_ADDR_REG
{
  unsigned __int16 BITFLD_MBIST_ADDR : 1;
};

/* 161 */
struct __MBIST_SRAM3_STATE_REG
{
  unsigned __int16 BITFLD_MBIST_STATE : 1;
};

/* 162 */
struct __MBIST_SRAM3_RD_MSB_REG
{
  unsigned __int16 BITFLD_MBIST_MSB_DATA : 1;
};

/* 163 */
struct __MBIST_SRAM3_RD_LSB_REG
{
  unsigned __int16 BITFLD_MBIST_LSB_DATA : 1;
};

/* 164 */
struct __BLE_RWBLECNTL_REG
{
  unsigned __int32 BITFLD_SYNCERR : 3;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_RXWINSZDEF : 4;
  unsigned __int32 BITFLD_RWBLE_EN : 1;
  unsigned __int32 BITFLD_ADVERTFILT_EN : 1;
  unsigned __int32 _anon_1 : 2;
  unsigned __int32 _anon_2 : 2;
  unsigned __int32 _anon_3 : 2;
  unsigned __int32 BITFLD_HOP_REMAP_DSB : 1;
  unsigned __int32 BITFLD_CRC_DSB : 1;
  unsigned __int32 BITFLD_WHIT_DSB : 1;
  unsigned __int32 BITFLD_CRYPT_DSB : 1;
  unsigned __int32 BITFLD_NESN_DSB : 1;
  unsigned __int32 BITFLD_SN_DSB : 1;
  unsigned __int32 BITFLD_MD_DSB : 1;
  unsigned __int32 _anon_4 : 1;
  unsigned __int32 BITFLD_SCAN_ABORT : 1;
  unsigned __int32 BITFLD_ADVERT_ABORT : 1;
  unsigned __int32 BITFLD_RFTEST_ABORT : 1;
  unsigned __int32 _anon_5 : 1;
  unsigned __int32 BITFLD_SWINT_REQ : 1;
  unsigned __int32 BITFLD_REG_SOFT_RST : 1;
  unsigned __int32 BITFLD_MASTER_TGSOFT_RST : 1;
  unsigned __int32 BITFLD_MASTER_SOFT_RST : 1;
};

/* 165 */
struct __BLE_VERSION_REG
{
  unsigned __int32 BITFLD_BUILD : 8;
  unsigned __int32 BITFLD_UPG : 8;
  unsigned __int32 BITFLD_REL : 8;
  unsigned __int32 BITFLD_TYP : 8;
};

/* 166 */
struct __BLE_RWBLECONF_REG
{
  unsigned __int32 BITFLD_BUSWIDTH : 1;
  unsigned __int32 BITFLD_USECRYPT : 1;
  unsigned __int32 BITFLD_USEDBG : 1;
  unsigned __int32 BITFLD_COEX : 1;
  unsigned __int32 BITFLD_INTMODE : 1;
  unsigned __int32 BITFLD_DMMODE : 1;
  unsigned __int32 BITFLD_DECIPHER : 1;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_CLK_SEL : 6;
  unsigned __int32 _anon_1 : 2;
  unsigned __int32 BITFLD_RFIF : 7;
  unsigned __int32 _anon_2 : 1;
  unsigned __int32 BITFLD_ADD_WIDTH : 6;
};

/* 167 */
struct __BLE_INTCNTL_REG
{
  unsigned __int32 BITFLD_CSCNTINTMSK : 1;
  unsigned __int32 BITFLD_RXINTMSK : 1;
  unsigned __int32 BITFLD_SLPINTMSK : 1;
  unsigned __int32 BITFLD_EVENTINTMSK : 1;
  unsigned __int32 BITFLD_CRYPTINTMSK : 1;
  unsigned __int32 BITFLD_ERRORINTMSK : 1;
  unsigned __int32 BITFLD_GROSSTGTIMINTMSK : 1;
  unsigned __int32 BITFLD_FINETGTIMINTMSK : 1;
  unsigned __int32 BITFLD_EVENTAPFAINTMSK : 1;
  unsigned __int32 BITFLD_SWINTMSK : 1;
  unsigned __int32 _anon_0 : 5;
  unsigned __int32 BITFLD_CSCNTDEVMSK : 1;
};

/* 168 */
struct __BLE_INTSTAT_REG
{
  unsigned __int32 BITFLD_CSCNTINTSTAT : 1;
  unsigned __int32 BITFLD_RXINTSTAT : 1;
  unsigned __int32 BITFLD_SLPINTSTAT : 1;
  unsigned __int32 BITFLD_EVENTINTSTAT : 1;
  unsigned __int32 BITFLD_CRYPTINTSTAT : 1;
  unsigned __int32 BITFLD_ERRORINTSTAT : 1;
  unsigned __int32 BITFLD_GROSSTGTIMINTSTAT : 1;
  unsigned __int32 BITFLD_FINETGTIMINTSTAT : 1;
  unsigned __int32 BITFLD_EVENTAPFAINTSTAT : 1;
  unsigned __int32 BITFLD_SWINTSTAT : 1;
};

/* 169 */
struct __BLE_INTRAWSTAT_REG
{
  unsigned __int32 BITFLD_CSCNTINTRAWSTAT : 1;
  unsigned __int32 BITFLD_RXINTRAWSTAT : 1;
  unsigned __int32 BITFLD_SLPINTRAWSTAT : 1;
  unsigned __int32 BITFLD_EVENTINTRAWSTAT : 1;
  unsigned __int32 BITFLD_CRYPTINTRAWSTAT : 1;
  unsigned __int32 BITFLD_ERRORINTRAWSTAT : 1;
  unsigned __int32 BITFLD_GROSSTGTIMINTRAWSTAT : 1;
  unsigned __int32 BITFLD_FINETGTIMINTRAWSTAT : 1;
  unsigned __int32 BITFLD_EVENTAPFAINTRAWSTAT : 1;
  unsigned __int32 BITFLD_SWINTRAWSTAT : 1;
};

/* 170 */
struct __BLE_INTACK_REG
{
  unsigned __int32 BITFLD_CSCNTINTACK : 1;
  unsigned __int32 BITFLD_RXINTACK : 1;
  unsigned __int32 BITFLD_SLPINTACK : 1;
  unsigned __int32 BITFLD_EVENTINTACK : 1;
  unsigned __int32 BITFLD_CRYPTINTACK : 1;
  unsigned __int32 BITFLD_ERRORINTACK : 1;
  unsigned __int32 BITFLD_GROSSTGTIMINTACK : 1;
  unsigned __int32 BITFLD_FINETGTIMINTACK : 1;
  unsigned __int32 BITFLD_EVENTAPFAINTACK : 1;
  unsigned __int32 BITFLD_SWINTACK : 1;
};

/* 171 */
struct __BLE_BASETIMECNT_REG
{
  unsigned __int32 BITFLD_BASETIMECNT : 27;
};

/* 172 */
struct __BLE_FINETIMECNT_REG
{
  unsigned __int32 BITFLD_FINECNT : 10;
};

/* 173 */
struct __BLE_BDADDRL_REG
{
  unsigned __int32 BITFLD_BDADDRL : 32;
};

/* 174 */
struct __BLE_BDADDRU_REG
{
  unsigned __int32 BITFLD_BDADDRU : 16;
  unsigned __int32 BITFLD_PRIV_NPUB : 1;
};

/* 175 */
struct __BLE_CURRENTRXDESCPTR_REG
{
  unsigned __int32 BITFLD_CURRENTRXDESCPTR : 15;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_ETPTR : 16;
};

/* 176 */
struct __BLE_DEEPSLCNTL_REG
{
  unsigned __int32 BITFLD_DEEP_SLEEP_IRQ_EN : 2;
  unsigned __int32 BITFLD_DEEP_SLEEP_ON : 1;
  unsigned __int32 BITFLD_DEEP_SLEEP_CORR_EN : 1;
  unsigned __int32 BITFLD_SOFT_WAKEUP_REQ : 1;
  unsigned __int32 _anon_0 : 10;
  unsigned __int32 BITFLD_DEEP_SLEEP_STAT : 1;
  unsigned __int32 _anon_1 : 15;
  unsigned __int32 BITFLD_EXTWKUPDSB : 1;
};

/* 177 */
struct __BLE_DEEPSLWKUP_REG
{
  unsigned __int32 BITFLD_DEEPSLTIME : 32;
};

/* 178 */
struct __BLE_DEEPSLSTAT_REG
{
  unsigned __int32 BITFLD_DEEPSLDUR : 32;
};

/* 179 */
struct __BLE_ENBPRESET_REG
{
  unsigned __int32 BITFLD_TWIRQ_RESET : 10;
  unsigned __int32 BITFLD_TWIRQ_SET : 11;
  unsigned __int32 BITFLD_TWEXT : 11;
};

/* 180 */
struct __BLE_FINECNTCORR_REG
{
  unsigned __int32 BITFLD_FINECNTCORR : 10;
};

/* 181 */
struct __BLE_BASETIMECNTCORR_REG
{
  unsigned __int32 BITFLD_BASETIMECNTCORR : 27;
};

/* 182 */
struct __BLE_DIAGCNTL_REG
{
  unsigned __int32 BITFLD_DIAG0 : 6;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_DIAG0_EN : 1;
  unsigned __int32 BITFLD_DIAG1 : 6;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_DIAG1_EN : 1;
  unsigned __int32 BITFLD_DIAG2 : 6;
  unsigned __int32 _anon_2 : 1;
  unsigned __int32 BITFLD_DIAG2_EN : 1;
  unsigned __int32 BITFLD_DIAG3 : 6;
  unsigned __int32 _anon_3 : 1;
  unsigned __int32 BITFLD_DIAG3_EN : 1;
};

/* 183 */
struct __BLE_DIAGSTAT_REG
{
  unsigned __int32 BITFLD_DIAG0STAT : 8;
  unsigned __int32 BITFLD_DIAG1STAT : 8;
  unsigned __int32 BITFLD_DIAG2STAT : 8;
  unsigned __int32 BITFLD_DIAG3STAT : 8;
};

/* 184 */
struct __BLE_DEBUGADDMAX_REG
{
  unsigned __int32 BITFLD_EM_ADDMAX : 16;
  unsigned __int32 BITFLD_REG_ADDMAX : 16;
};

/* 185 */
struct __BLE_DEBUGADDMIN_REG
{
  unsigned __int32 BITFLD_EM_ADDMIN : 16;
  unsigned __int32 BITFLD_REG_ADDMIN : 16;
};

/* 186 */
struct __BLE_ERRORTYPESTAT_REG
{
  unsigned __int32 BITFLD_TXCRYPT_ERROR : 1;
  unsigned __int32 BITFLD_RXCRYPT_ERROR : 1;
  unsigned __int32 BITFLD_PKTCNTL_EMACC_ERROR : 1;
  unsigned __int32 BITFLD_RADIO_EMACC_ERROR : 1;
  unsigned __int32 BITFLD_EVT_SCHDL_EMACC_ERROR : 1;
  unsigned __int32 BITFLD_EVT_SCHDL_ENTRY_ERROR : 1;
  unsigned __int32 BITFLD_EVT_SCHDL_APFM_ERROR : 1;
  unsigned __int32 BITFLD_EVT_CNTL_APFM_ERROR : 1;
  unsigned __int32 BITFLD_WHITELIST_ERROR : 1;
  unsigned __int32 BITFLD_IFS_UNDERRUN : 1;
  unsigned __int32 BITFLD_ADV_UNDERRUN : 1;
  unsigned __int32 BITFLD_LLCHMAP_ERROR : 1;
  unsigned __int32 BITFLD_CSFORMAT_ERROR : 1;
  unsigned __int32 BITFLD_TXDESC_EMPTY_ERROR : 1;
  unsigned __int32 BITFLD_RXDESC_EMPTY_ERROR : 1;
  unsigned __int32 BITFLD_TXDATA_PTR_ERROR : 1;
  unsigned __int32 BITFLD_RXDATA_PTR_ERROR : 1;
  unsigned __int32 BITFLD_CONCEVTIRQ_ERROR : 1;
};

/* 187 */
struct __BLE_SWPROFILING_REG
{
  unsigned __int32 BITFLD_SWPROFVAL : 32;
};

/* 188 */
struct __BLE_RADIOCNTL1_REG
{
  unsigned __int32 _anon_0 : 16;
  unsigned __int32 BITFLD_XRFSEL : 5;
};

/* 189 */
struct __BLE_RADIOPWRUPDN_REG
{
  unsigned __int32 BITFLD_TXPWRUP : 8;
  unsigned __int32 BITFLD_TXPWRDN : 4;
  unsigned __int32 _anon_0 : 4;
  unsigned __int32 BITFLD_RXPWRUP : 8;
  unsigned __int32 BITFLD_RTRIP_DELAY : 7;
};

/* 190 */
struct __BLE_ADVTIM_REG
{
  unsigned __int32 BITFLD_ADVINT : 14;
};

/* 191 */
struct __BLE_ACTSCANSTAT_REG
{
  unsigned __int32 BITFLD_UPPERLIMIT : 9;
  unsigned __int32 _anon_0 : 7;
  unsigned __int32 BITFLD_BACKOFF : 9;
};

/* 192 */
struct __BLE_WLPUBADDPTR_REG
{
  unsigned __int32 BITFLD_WLPUBADDPTR : 16;
};

/* 193 */
struct __BLE_WLPRIVADDPTR_REG
{
  unsigned __int32 BITFLD_WLPRIVADDPTR : 16;
};

/* 194 */
struct __BLE_WLNBDEV_REG
{
  unsigned __int32 BITFLD_NBPUBDEV : 8;
  unsigned __int32 BITFLD_NBPRIVDEV : 8;
};

/* 195 */
struct __BLE_AESCNTL_REG
{
  unsigned __int32 BITFLD_AES_START : 1;
  unsigned __int32 BITFLD_AES_MODE : 1;
};

/* 196 */
struct __BLE_AESKEY31_0_REG
{
  unsigned __int32 BITFLD_AESKEY31_0 : 32;
};

/* 197 */
struct __BLE_AESKEY63_32_REG
{
  unsigned __int32 BITFLD_AESKEY63_32 : 32;
};

/* 198 */
struct __BLE_AESKEY95_64_REG
{
  unsigned __int32 BITFLD_AESKEY95_64 : 32;
};

/* 199 */
struct __BLE_AESKEY127_96_REG
{
  unsigned __int32 BITFLD_AESKEY127_96 : 32;
};

/* 200 */
struct __BLE_AESPTR_REG
{
  unsigned __int32 BITFLD_AESPTR : 16;
};

/* 201 */
struct __BLE_TXMICVAL_REG
{
  unsigned __int32 BITFLD_TXMICVAL : 32;
};

/* 202 */
struct __BLE_RXMICVAL_REG
{
  unsigned __int32 BITFLD_RXMICVAL : 32;
};

/* 203 */
struct __BLE_RFTESTCNTL_REG
{
  unsigned __int32 BITFLD_TXLENGTH : 9;
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_TXPKTCNTEN : 1;
  unsigned __int32 BITFLD_TXPLDSRC : 1;
  unsigned __int32 BITFLD_PRBSTYPE : 1;
  unsigned __int32 BITFLD_TXLENGTHSRC : 1;
  unsigned __int32 BITFLD_INFINITETX : 1;
  unsigned __int32 _anon_1 : 11;
  unsigned __int32 BITFLD_RXPKTCNTEN : 1;
  unsigned __int32 _anon_2 : 3;
  unsigned __int32 BITFLD_INFINITERX : 1;
};

/* 204 */
struct __BLE_RFTESTTXSTAT_REG
{
  unsigned __int32 BITFLD_TXPKTCNT : 32;
};

/* 205 */
struct __BLE_RFTESTRXSTAT_REG
{
  unsigned __int32 BITFLD_RXPKTCNT : 32;
};

/* 206 */
struct __BLE_TIMGENCNTL_REG
{
  unsigned __int32 BITFLD_PREFETCH_TIME : 9;
  unsigned __int32 _anon_0 : 7;
  unsigned __int32 BITFLD_PREFETCHABORT_TIME : 10;
  unsigned __int32 _anon_1 : 5;
  unsigned __int32 BITFLD_APFM_EN : 1;
};

/* 207 */
struct __BLE_GROSSTIMTGT_REG
{
  unsigned __int32 BITFLD_GROSSTARGET : 23;
};

/* 208 */
struct __BLE_FINETIMTGT_REG
{
  unsigned __int32 BITFLD_FINETARGET : 27;
};

/* 209 */
struct __BLE_SAMPLECLK_REG
{
  unsigned __int32 BITFLD_SAMP : 1;
};

/* 210 */
struct __BLE_COEXIFCNTL0_REG
{
  unsigned __int32 BITFLD_COEX_EN : 1;
  unsigned __int32 BITFLD_SYNCGEN_EN : 1;
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_WLANRXMSK : 2;
  unsigned __int32 BITFLD_WLANTXMSK : 2;
  unsigned __int32 _anon_1 : 8;
  unsigned __int32 BITFLD_WLCTXPRIOMODE : 2;
  unsigned __int32 _anon_2 : 2;
  unsigned __int32 BITFLD_WLCRXPRIOMODE : 2;
};

/* 211 */
struct __BLE_COEXIFCNTL1_REG
{
  unsigned __int32 BITFLD_WLCPDELAY : 7;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_WLCPDURATION : 7;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_WLCPTXTHR : 5;
  unsigned __int32 _anon_2 : 3;
  unsigned __int32 BITFLD_WLCPRXTHR : 5;
};

/* 212 */
struct __BLE_BLEMPRIO0_REG
{
  unsigned __int32 BITFLD_BLEM0 : 4;
  unsigned __int32 BITFLD_BLEM1 : 4;
  unsigned __int32 BITFLD_BLEM2 : 4;
  unsigned __int32 BITFLD_BLEM3 : 4;
  unsigned __int32 BITFLD_BLEM4 : 4;
  unsigned __int32 BITFLD_BLEM5 : 4;
  unsigned __int32 BITFLD_BLEM6 : 4;
  unsigned __int32 BITFLD_BLEM7 : 4;
};

/* 213 */
struct __BLE_BLEMPRIO1_REG
{
  unsigned __int32 _anon_0 : 28;
  unsigned __int32 BITFLD_BLEMDEFAULT : 4;
};

/* 214 */
struct __BLE_CNTL2_REG
{
  unsigned __int32 BITFLD_EMACCERRSTAT : 1;
  unsigned __int32 BITFLD_EMACCERRACK : 1;
  unsigned __int32 BITFLD_EMACCERRMSK : 1;
  unsigned __int32 BITFLD_BLE_DIAG_OVR : 1;
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_BLE_CLK_STAT : 1;
  unsigned __int32 BITFLD_MON_LP_CLK : 1;
  unsigned __int32 BITFLD_RADIO_PWRDN_ALLOW : 1;
  unsigned __int32 BITFLD_BLE_CLK_SEL : 6;
  unsigned __int32 _anon_1 : 2;
  unsigned __int32 BITFLD_BLE_PTI_SOURCE_SEL : 1;
  unsigned __int32 BITFLD_BB_ONLY : 1;
  unsigned __int32 BITFLD_SW_RPL_SPI : 1;
  unsigned __int32 BITFLD_WAKEUPLPSTAT : 1;
  unsigned __int32 BITFLD_BLE_RSSI_SEL : 1;
  unsigned __int32 BITFLD_BLE_ARP_PHY_ERR_STAT : 1;
  unsigned __int32 BITFLD_BLE_ARP_ERR_MSK_N : 1;
  unsigned __int32 BITFLD_BLE_PHY_ERR_MSK_N : 1;
};

/* 215 */
struct __BLE_EM_BASE_REG
{
  unsigned __int32 _anon_0 : 10;
  unsigned __int32 BITFLD_BLE_EM_BASE_16_10 : 7;
};

/* 216 */
struct __BLE_DIAGCNTL2_REG
{
  unsigned __int32 BITFLD_DIAG4 : 6;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_DIAG4_EN : 1;
  unsigned __int32 BITFLD_DIAG5 : 6;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_DIAG5_EN : 1;
  unsigned __int32 BITFLD_DIAG6 : 6;
  unsigned __int32 _anon_2 : 1;
  unsigned __int32 BITFLD_DIAG6_EN : 1;
  unsigned __int32 BITFLD_DIAG7 : 6;
  unsigned __int32 _anon_3 : 1;
  unsigned __int32 BITFLD_DIAG7_EN : 1;
};

/* 217 */
struct __BLE_DIAGCNTL3_REG
{
  unsigned __int32 BITFLD_DIAG0_BIT : 3;
  unsigned __int32 BITFLD_DIAG0_INV : 1;
  unsigned __int32 BITFLD_DIAG1_BIT : 3;
  unsigned __int32 BITFLD_DIAG1_INV : 1;
  unsigned __int32 BITFLD_DIAG2_BIT : 3;
  unsigned __int32 BITFLD_DIAG2_INV : 1;
  unsigned __int32 BITFLD_DIAG3_BIT : 3;
  unsigned __int32 BITFLD_DIAG3_INV : 1;
  unsigned __int32 BITFLD_DIAG4_BIT : 3;
  unsigned __int32 BITFLD_DIAG4_INV : 1;
  unsigned __int32 BITFLD_DIAG5_BIT : 3;
  unsigned __int32 BITFLD_DIAG5_INV : 1;
  unsigned __int32 BITFLD_DIAG6_BIT : 3;
  unsigned __int32 BITFLD_DIAG6_INV : 1;
  unsigned __int32 BITFLD_DIAG7_BIT : 3;
  unsigned __int32 BITFLD_DIAG7_INV : 1;
};

/* 218 */
struct __CLK_AMBA_REG
{
  unsigned __int16 BITFLD_HCLK_DIV : 2;
  unsigned __int16 _anon_0 : 2;
  unsigned __int16 BITFLD_PCLK_DIV : 2;
  unsigned __int16 _anon_1 : 1;
  unsigned __int16 BITFLD_OTP_ENABLE : 1;
};

/* 219 */
struct __CLK_FREQ_TRIM_REG
{
  unsigned __int16 BITFLD_XTAL32M_TRIM : 8;
};

/* 220 */
struct __CLK_PER_REG
{
  unsigned __int16 BITFLD_TMR_DIV : 2;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 BITFLD_TMR_ENABLE : 1;
  unsigned __int16 BITFLD_WAKEUPCT_ENABLE : 1;
  unsigned __int16 BITFLD_I2C_ENABLE : 1;
  unsigned __int16 BITFLD_UART2_ENABLE : 1;
  unsigned __int16 BITFLD_UART1_ENABLE : 1;
  unsigned __int16 _anon_1 : 2;
  unsigned __int16 BITFLD_SPI_ENABLE : 1;
  unsigned __int16 BITFLD_QUAD_ENABLE : 1;
};

/* 221 */
struct __CLK_RADIO_REG
{
  unsigned __int16 _anon_0 : 2;
  unsigned __int16 _anon_1 : 1;
  unsigned __int16 BITFLD_RFCU_ENABLE : 1;
  unsigned __int16 BITFLD_BLE_DIV : 2;
  unsigned __int16 BITFLD_BLE_LP_RESET : 1;
  unsigned __int16 BITFLD_BLE_ENABLE : 1;
};

/* 222 */
struct __CLK_CTRL_REG
{
  unsigned __int16 BITFLD_SYS_CLK_SEL : 2;
  unsigned __int16 BITFLD_XTAL32M_DISABLE : 1;
  unsigned __int16 BITFLD_LP_CLK_SEL : 2;
  unsigned __int16 BITFLD_RUNNING_AT_LP_CLK : 1;
  unsigned __int16 BITFLD_RUNNING_AT_RC32M : 1;
  unsigned __int16 BITFLD_RUNNING_AT_XTAL32M : 1;
};

/* 223 */
struct __PMU_CTRL_REG
{
  unsigned __int16 BITFLD_RESET_ON_WAKEUP : 1;
  unsigned __int16 BITFLD_TIM_SLEEP : 1;
  unsigned __int16 BITFLD_RADIO_SLEEP : 1;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 BITFLD_OTP_COPY_DIV : 2;
  unsigned __int16 BITFLD_MAP_BANDGAP_EN : 1;
};

/* 224 */
struct __SYS_CTRL_REG
{
  unsigned __int16 BITFLD_REMAP_ADR0 : 2;
  unsigned __int16 BITFLD_DEV_PHASE : 1;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 BITFLD_OTP_COPY : 1;
  unsigned __int16 _anon_1 : 1;
  unsigned __int16 BITFLD_OTPC_RESET_REQ : 1;
  unsigned __int16 BITFLD_DEBUGGER_ENABLE : 2;
  unsigned __int16 _anon_2 : 1;
  unsigned __int16 BITFLD_TIMEOUT_DISABLE : 1;
  unsigned __int16 _anon_3 : 4;
  unsigned __int16 BITFLD_SW_RESET : 1;
};

/* 225 */
struct __SYS_STAT_REG
{
  unsigned __int16 BITFLD_RAD_IS_DOWN : 1;
  unsigned __int16 BITFLD_RAD_IS_UP : 1;
  unsigned __int16 BITFLD_TIM_IS_DOWN : 1;
  unsigned __int16 BITFLD_TIM_IS_UP : 1;
  unsigned __int16 BITFLD_DBG_IS_UP : 1;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 BITFLD_XTAL32M_TRIM_READY : 1;
  unsigned __int16 BITFLD_XTAL32M_SETTLED : 1;
};

/* 226 */
struct __TRIM_CTRL_REG
{
  unsigned __int16 BITFLD_XTAL_COUNT_N : 6;
  unsigned __int16 BITFLD_XTAL_TRIM_SELECT : 2;
  unsigned __int16 BITFLD_XTAL_SETTLE_N : 6;
};

/* 227 */
struct __RAM_PWR_CTRL_REG
{
  unsigned __int16 BITFLD_RAM1_PWR_CTRL : 2;
  unsigned __int16 BITFLD_RAM2_PWR_CTRL : 2;
  unsigned __int16 BITFLD_RAM3_PWR_CTRL : 2;
};

/* 228 */
struct __CLK_RC32K_REG
{
  unsigned __int16 BITFLD_RC32K_DISABLE : 1;
  unsigned __int16 BITFLD_RC32K_TRIM : 4;
};

/* 229 */
struct __CLK_RC32M_REG
{
  unsigned __int16 BITFLD_RC32M_DISABLE : 1;
  unsigned __int16 BITFLD_RC32M_BIAS : 4;
  unsigned __int16 BITFLD_RC32M_RANGE : 2;
  unsigned __int16 BITFLD_RC32M_COSC : 4;
};

/* 230 */
struct __CLK_RCX_REG
{
  unsigned __int16 BITFLD_RCX_ENABLE : 1;
  unsigned __int16 BITFLD_RCX_RADJUST : 1;
  unsigned __int16 BITFLD_RCX_CADJUST : 5;
  unsigned __int16 BITFLD_RCX_C0 : 1;
  unsigned __int16 BITFLD_RCX_BIAS : 4;
};

/* 231 */
struct __BANDGAP_REG
{
  unsigned __int16 BITFLD_BGR_TRIM : 5;
  unsigned __int16 BITFLD_BGR_ITRIM : 5;
};

/* 232 */
struct __XTAL32M_START_REG
{
  unsigned __int16 BITFLD_XTAL32M_START : 8;
  unsigned __int16 BITFLD_XTAL32M_RAMP : 8;
};

/* 233 */
struct __XTAL32M_TRSTAT_REG
{
  unsigned __int16 BITFLD_XTAL32M_TRSTAT : 8;
};

/* 234 */
struct __XTALRDY_CTRL_REG
{
  unsigned __int16 BITFLD_XTALRDY_CNT : 8;
};

/* 235 */
struct __POR_PIN_REG
{
  unsigned __int16 BITFLD_POR_PIN_SELECT : 4;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_POR_PIN_POLARITY : 1;
};

/* 236 */
struct __POR_TIMER_REG
{
  unsigned __int16 BITFLD_POR_TIME : 7;
};

/* 237 */
struct __PMU_SLEEP_REG
{
  unsigned __int16 BITFLD_BG_REFRESH_INTERVAL : 12;
};

/* 238 */
struct __POWER_CTRL_REG
{
  unsigned __int16 BITFLD_CMP_VBAT_HIGH_NOK_ENABLE : 1;
  unsigned __int16 BITFLD_CMP_VBAT_HIGH_OK_ENABLE : 1;
  unsigned __int16 BITFLD_VBAT_HL_CONNECT : 1;
  unsigned __int16 BITFLD_LDO_CORE_RET_ENABLE : 1;
  unsigned __int16 BITFLD_LDO_CORE_DISABLE : 1;
  unsigned __int16 BITFLD_LDO_LOW_CTRL_REG : 2;
  unsigned __int16 BITFLD_LDO_VREF_HOLD_FORCE : 1;
  unsigned __int16 BITFLD_CP_DISABLE : 1;
  unsigned __int16 BITFLD_POR_VBAT_LOW_DISABLE : 1;
  unsigned __int16 BITFLD_POR_VBAT_LOW_HYST_SEL : 1;
  unsigned __int16 BITFLD_POR_VBAT_LOW_HYST_DIS : 1;
  unsigned __int16 BITFLD_POR_VBAT_HIGH_DISABLE : 1;
  unsigned __int16 BITFLD_POR_VBAT_HIGH_HYST_SEL : 1;
  unsigned __int16 BITFLD_POR_VBAT_HIGH_HYST_DIS : 1;
  unsigned __int16 BITFLD_VBAT_HL_CONNECT_MODE : 1;
};

/* 239 */
struct __DCDC_CTRL_REG
{
  unsigned __int16 BITFLD_DCDC_ENABLE : 1;
  unsigned __int16 BITFLD_DCDC_CLK_DIV : 2;
  unsigned __int16 BITFLD_DCDC_TIMEOUT : 3;
  unsigned __int16 BITFLD_DCDC_OK_CLR_CNT : 2;
  unsigned __int16 BITFLD_DCDC_ILIM_MIN : 4;
  unsigned __int16 BITFLD_DCDC_ILIM_MAX : 4;
};

/* 240 */
struct __HWR_CTRL_REG
{
  unsigned __int16 BITFLD_DISABLE_HWR : 1;
};

/* 241 */
struct __RESET_STAT_REG
{
  unsigned __int16 BITFLD_PORESET_STAT : 1;
  unsigned __int16 BITFLD_HWRESET_STAT : 1;
  unsigned __int16 BITFLD_SWRESET_STAT : 1;
  unsigned __int16 BITFLD_WDOGRESET_STAT : 1;
};

/* 242 */
struct __RAM_LPMX_REG
{
  unsigned __int16 BITFLD_RAMx_LPMX : 3;
};

/* 243 */
struct __PAD_LATCH_REG
{
  unsigned __int16 BITFLD_PAD_LATCH_EN : 1;
};

/* 244 */
struct __HIBERN_CTRL_REG
{
  unsigned __int16 BITFLD_HIBERNATION_ENABLE : 1;
  unsigned __int16 BITFLD_HIBERN_WKUP_POLARITY : 1;
  unsigned __int16 BITFLD_HIBERN_WKUP_MASK : 5;
};

/* 245 */
struct __DMA0_A_STARTL_REG
{
  unsigned __int16 BITFLD_DMA0_A_STARTL : 16;
};

/* 246 */
struct __DMA0_A_STARTH_REG
{
  unsigned __int16 BITFLD_DMA0_A_STARTH : 16;
};

/* 247 */
struct __DMA0_B_STARTL_REG
{
  unsigned __int16 BITFLD_DMA0_B_STARTL : 16;
};

/* 248 */
struct __DMA0_B_STARTH_REG
{
  unsigned __int16 BITFLD_DMA0_B_STARTH : 16;
};

/* 249 */
struct __DMA0_INT_REG
{
  unsigned __int16 BITFLD_DMA0_INT : 16;
};

/* 250 */
struct __DMA0_LEN_REG
{
  unsigned __int16 BITFLD_DMA0_LEN : 16;
};

/* 251 */
struct __DMA0_CTRL_REG
{
  unsigned __int16 BITFLD_DMA_ON : 1;
  unsigned __int16 BITFLD_BW : 2;
  unsigned __int16 BITFLD_IRQ_ENABLE : 1;
  unsigned __int16 BITFLD_DREQ_MODE : 1;
  unsigned __int16 BITFLD_BINC : 1;
  unsigned __int16 BITFLD_AINC : 1;
  unsigned __int16 BITFLD_CIRCULAR : 1;
  unsigned __int16 BITFLD_DMA_PRIO : 3;
  unsigned __int16 BITFLD_DMA_IDLE : 1;
  unsigned __int16 BITFLD_DMA_INIT : 1;
  unsigned __int16 BITFLD_REQ_SENSE : 1;
};

/* 252 */
struct __DMA0_IDX_REG
{
  unsigned __int16 BITFLD_DMA0_IDX : 16;
};

/* 253 */
struct __DMA1_A_STARTL_REG
{
  unsigned __int16 BITFLD_DMA1_A_STARTL : 16;
};

/* 254 */
struct __DMA1_A_STARTH_REG
{
  unsigned __int16 BITFLD_DMA1_A_STARTH : 16;
};

/* 255 */
struct __DMA1_B_STARTL_REG
{
  unsigned __int16 BITFLD_DMA1_B_STARTL : 16;
};

/* 256 */
struct __DMA1_B_STARTH_REG
{
  unsigned __int16 BITFLD_DMA1_B_STARTH : 16;
};

/* 257 */
struct __DMA1_INT_REG
{
  unsigned __int16 BITFLD_DMA1_INT : 16;
};

/* 258 */
struct __DMA1_LEN_REG
{
  unsigned __int16 BITFLD_DMA1_LEN : 16;
};

/* 259 */
struct __DMA1_CTRL_REG
{
  unsigned __int16 BITFLD_DMA_ON : 1;
  unsigned __int16 BITFLD_BW : 2;
  unsigned __int16 BITFLD_IRQ_ENABLE : 1;
  unsigned __int16 BITFLD_DREQ_MODE : 1;
  unsigned __int16 BITFLD_BINC : 1;
  unsigned __int16 BITFLD_AINC : 1;
  unsigned __int16 BITFLD_CIRCULAR : 1;
  unsigned __int16 BITFLD_DMA_PRIO : 3;
  unsigned __int16 BITFLD_DMA_IDLE : 1;
  unsigned __int16 BITFLD_DMA_INIT : 1;
  unsigned __int16 BITFLD_REQ_SENSE : 1;
};

/* 260 */
struct __DMA1_IDX_REG
{
  unsigned __int16 BITFLD_DMA1_IDX : 16;
};

/* 261 */
struct __DMA2_A_STARTL_REG
{
  unsigned __int16 BITFLD_DMA2_A_STARTL : 16;
};

/* 262 */
struct __DMA2_A_STARTH_REG
{
  unsigned __int16 BITFLD_DMA2_A_STARTH : 16;
};

/* 263 */
struct __DMA2_B_STARTL_REG
{
  unsigned __int16 BITFLD_DMA2_B_STARTL : 16;
};

/* 264 */
struct __DMA2_B_STARTH_REG
{
  unsigned __int16 BITFLD_DMA2_B_STARTH : 16;
};

/* 265 */
struct __DMA2_INT_REG
{
  unsigned __int16 BITFLD_DMA2_INT : 16;
};

/* 266 */
struct __DMA2_LEN_REG
{
  unsigned __int16 BITFLD_DMA2_LEN : 16;
};

/* 267 */
struct __DMA2_CTRL_REG
{
  unsigned __int16 BITFLD_DMA_ON : 1;
  unsigned __int16 BITFLD_BW : 2;
  unsigned __int16 BITFLD_IRQ_ENABLE : 1;
  unsigned __int16 BITFLD_DREQ_MODE : 1;
  unsigned __int16 BITFLD_BINC : 1;
  unsigned __int16 BITFLD_AINC : 1;
  unsigned __int16 BITFLD_CIRCULAR : 1;
  unsigned __int16 BITFLD_DMA_PRIO : 3;
  unsigned __int16 BITFLD_DMA_IDLE : 1;
  unsigned __int16 BITFLD_DMA_INIT : 1;
  unsigned __int16 BITFLD_REQ_SENSE : 1;
};

/* 268 */
struct __DMA2_IDX_REG
{
  unsigned __int16 BITFLD_DMA2_IDX : 16;
};

/* 269 */
struct __DMA3_A_STARTL_REG
{
  unsigned __int16 BITFLD_DMA3_A_STARTL : 16;
};

/* 270 */
struct __DMA3_A_STARTH_REG
{
  unsigned __int16 BITFLD_DMA3_A_STARTH : 16;
};

/* 271 */
struct __DMA3_B_STARTL_REG
{
  unsigned __int16 BITFLD_DMA3_B_STARTL : 16;
};

/* 272 */
struct __DMA3_B_STARTH_REG
{
  unsigned __int16 BITFLD_DMA3_B_STARTH : 16;
};

/* 273 */
struct __DMA3_INT_REG
{
  unsigned __int16 BITFLD_DMA3_INT : 16;
};

/* 274 */
struct __DMA3_LEN_REG
{
  unsigned __int16 BITFLD_DMA3_LEN : 16;
};

/* 275 */
struct __DMA3_CTRL_REG
{
  unsigned __int16 BITFLD_DMA_ON : 1;
  unsigned __int16 BITFLD_BW : 2;
  unsigned __int16 BITFLD_IRQ_ENABLE : 1;
  unsigned __int16 BITFLD_DREQ_MODE : 1;
  unsigned __int16 BITFLD_BINC : 1;
  unsigned __int16 BITFLD_AINC : 1;
  unsigned __int16 BITFLD_CIRCULAR : 1;
  unsigned __int16 BITFLD_DMA_PRIO : 3;
  unsigned __int16 BITFLD_DMA_IDLE : 1;
  unsigned __int16 BITFLD_DMA_INIT : 1;
  unsigned __int16 BITFLD_REQ_SENSE : 1;
};

/* 276 */
struct __DMA3_IDX_REG
{
  unsigned __int16 BITFLD_DMA3_IDX : 16;
};

/* 277 */
struct __DMA_REQ_MUX_REG
{
  unsigned __int16 BITFLD_DMA01_SEL : 4;
  unsigned __int16 BITFLD_DMA23_SEL : 4;
  unsigned __int16 _anon_0 : 4;
};

/* 278 */
struct __DMA_INT_STATUS_REG
{
  unsigned __int16 BITFLD_DMA_IRQ_CH0 : 1;
  unsigned __int16 BITFLD_DMA_IRQ_CH1 : 1;
  unsigned __int16 BITFLD_DMA_IRQ_CH2 : 1;
  unsigned __int16 BITFLD_DMA_IRQ_CH3 : 1;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 _anon_1 : 1;
  unsigned __int16 _anon_2 : 1;
  unsigned __int16 _anon_3 : 1;
};

/* 279 */
struct __DMA_CLEAR_INT_REG
{
  unsigned __int16 BITFLD_DMA_RST_IRQ_CH0 : 1;
  unsigned __int16 BITFLD_DMA_RST_IRQ_CH1 : 1;
  unsigned __int16 BITFLD_DMA_RST_IRQ_CH2 : 1;
  unsigned __int16 BITFLD_DMA_RST_IRQ_CH3 : 1;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 _anon_1 : 1;
  unsigned __int16 _anon_2 : 1;
  unsigned __int16 _anon_3 : 1;
};

/* 280 */
struct __GP_ADC_CTRL2_REG
{
  unsigned __int16 BITFLD_GP_ADC_ATTN : 2;
  unsigned __int16 BITFLD_GP_ADC_I20U : 1;
  unsigned __int16 BITFLD_GP_ADC_OFFS_SH_EN : 1;
  unsigned __int16 BITFLD_GP_ADC_OFFS_SH_CM : 2;
  unsigned __int16 BITFLD_GP_ADC_CONV_NRS : 3;
  unsigned __int16 BITFLD_GP_ADC_SMPL_TIME : 4;
  unsigned __int16 BITFLD_GP_ADC_STORE_DEL : 3;
};

/* 281 */
struct __GP_ADC_CTRL3_REG
{
  unsigned __int16 BITFLD_GP_ADC_EN_DEL : 8;
  unsigned __int16 BITFLD_GP_ADC_INTERVAL : 8;
};

/* 282 */
struct __GP_ADC_OFFP_REG
{
  unsigned __int16 BITFLD_GP_ADC_OFFP : 10;
};

/* 283 */
struct __GP_ADC_OFFN_REG
{
  unsigned __int16 BITFLD_GP_ADC_OFFN : 10;
};

/* 284 */
struct __GP_ADC_TRIM_REG
{
  unsigned __int16 BITFLD_GP_ADC_OFFS_SH_VREF : 4;
  unsigned __int16 BITFLD_GP_ADC_LDO_LEVEL : 3;
};

/* 285 */
struct __GP_ADC_CLEAR_INT_REG
{
  unsigned __int16 BITFLD_GP_ADC_CLR_INT : 16;
};

/* 286 */
struct __GP_ADC_RESULT_REG
{
  unsigned __int16 BITFLD_GP_ADC_VAL : 16;
};

/* 287 */
struct __P0_DATA_REG
{
  unsigned __int16 BITFLD_P0_DATA : 12;
};

/* 288 */
struct __P0_SET_DATA_REG
{
  unsigned __int16 BITFLD_P0_SET : 12;
};

/* 289 */
struct __P0_RESET_DATA_REG
{
  unsigned __int16 BITFLD_P0_RESET : 12;
};

/* 290 */
struct __P00_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 291 */
struct __P01_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 292 */
struct __P02_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 293 */
struct __P03_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 294 */
struct __P04_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 295 */
struct __P05_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 296 */
struct __P06_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 297 */
struct __P07_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 298 */
struct __P08_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 299 */
struct __P09_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 300 */
struct __P010_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 301 */
struct __P011_MODE_REG
{
  unsigned __int16 BITFLD_PID : 5;
  unsigned __int16 _anon_0 : 3;
  unsigned __int16 BITFLD_PUPD : 2;
};

/* 302 */
struct __PAD_WEAK_CTRL_REG
{
  unsigned __int16 BITFLD_PAD_LOW_DRV : 12;
};

/* 303 */
struct __SET_FREEZE_REG
{
  unsigned __int16 BITFLD_FRZ_WKUPTIM : 1;
  unsigned __int16 BITFLD_FRZ_SWTIM : 1;
  unsigned __int16 BITFLD_FRZ_BLETIM : 1;
  unsigned __int16 BITFLD_FRZ_WDOG : 1;
  unsigned __int16 BITFLD_FRZ_DMA : 1;
};

/* 304 */
struct __RESET_FREEZE_REG
{
  unsigned __int16 BITFLD_FRZ_WKUPTIM : 1;
  unsigned __int16 BITFLD_FRZ_SWTIM : 1;
  unsigned __int16 BITFLD_FRZ_BLETIM : 1;
  unsigned __int16 BITFLD_FRZ_WDOG : 1;
  unsigned __int16 BITFLD_FRZ_DMA : 1;
};

/* 305 */
struct __DEBUG_REG
{
  unsigned __int16 BITFLD_DEBUGS_FREEZE_EN : 1;
};

/* 306 */
struct __GP_STATUS_REG
{
  unsigned __int16 BITFLD_CAL_PHASE : 1;
  unsigned __int16 _anon_0 : 1;
};

/* 307 */
struct __GP_CONTROL_REG
{
  unsigned __int16 BITFLD_BLE_WAKEUP_REQ : 1;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 BITFLD_BLE_WAKEUP_LP_IRQ : 1;
  unsigned __int16 _anon_1 : 1;
  unsigned __int16 BITFLD_CPU_DMA_BUS_PRIO : 1;
  unsigned __int16 BITFLD_BLE_TIMER_DATA_CTRL : 2;
};

/* 308 */
struct __BLE_TIMER_REG
{
  unsigned __int16 BITFLD_BLE_TIMER_DATA : 10;
};

/* 309 */
struct __I2C_CON_REG
{
  unsigned __int16 BITFLD_I2C_MASTER_MODE : 1;
  unsigned __int16 BITFLD_I2C_SPEED : 2;
  unsigned __int16 BITFLD_I2C_10BITADDR_SLAVE : 1;
  unsigned __int16 BITFLD_I2C_10BITADDR_MASTER : 1;
  unsigned __int16 BITFLD_I2C_RESTART_EN : 1;
  unsigned __int16 BITFLD_I2C_SLAVE_DISABLE : 1;
};

/* 310 */
struct __I2C_TAR_REG
{
  unsigned __int16 BITFLD_IC_TAR : 10;
  unsigned __int16 BITFLD_GC_OR_START : 1;
  unsigned __int16 BITFLD_SPECIAL : 1;
};

/* 311 */
struct __I2C_SAR_REG
{
  unsigned __int16 BITFLD_IC_SAR : 10;
};

/* 312 */
struct __I2C_DATA_CMD_REG
{
  unsigned __int16 BITFLD_DAT : 8;
  unsigned __int16 BITFLD_I2C_CMD : 1;
  unsigned __int16 BITFLD_I2C_STOP : 1;
  unsigned __int16 BITFLD_I2C_RESTART : 1;
};

/* 313 */
struct __I2C_SS_SCL_HCNT_REG
{
  unsigned __int16 BITFLD_IC_SS_SCL_HCNT : 16;
};

/* 314 */
struct __I2C_SS_SCL_LCNT_REG
{
  unsigned __int16 BITFLD_IC_SS_SCL_LCNT : 16;
};

/* 315 */
struct __I2C_FS_SCL_HCNT_REG
{
  unsigned __int16 BITFLD_IC_FS_SCL_HCNT : 16;
};

/* 316 */
struct __I2C_FS_SCL_LCNT_REG
{
  unsigned __int16 BITFLD_IC_FS_SCL_LCNT : 16;
};

/* 317 */
struct __I2C_INTR_STAT_REG
{
  unsigned __int16 BITFLD_R_RX_UNDER : 1;
  unsigned __int16 BITFLD_R_RX_OVER : 1;
  unsigned __int16 BITFLD_R_RX_FULL : 1;
  unsigned __int16 BITFLD_R_TX_OVER : 1;
  unsigned __int16 BITFLD_R_TX_EMPTY : 1;
  unsigned __int16 BITFLD_R_RD_REQ : 1;
  unsigned __int16 BITFLD_R_TX_ABRT : 1;
  unsigned __int16 BITFLD_R_RX_DONE : 1;
  unsigned __int16 BITFLD_R_ACTIVITY : 1;
  unsigned __int16 BITFLD_R_STOP_DET : 1;
  unsigned __int16 BITFLD_R_START_DET : 1;
  unsigned __int16 BITFLD_R_GEN_CALL : 1;
};

/* 318 */
struct __I2C_INTR_MASK_REG
{
  unsigned __int16 BITFLD_M_RX_UNDER : 1;
  unsigned __int16 BITFLD_M_RX_OVER : 1;
  unsigned __int16 BITFLD_M_RX_FULL : 1;
  unsigned __int16 BITFLD_M_TX_OVER : 1;
  unsigned __int16 BITFLD_M_TX_EMPTY : 1;
  unsigned __int16 BITFLD_M_RD_REQ : 1;
  unsigned __int16 BITFLD_M_TX_ABRT : 1;
  unsigned __int16 BITFLD_M_RX_DONE : 1;
  unsigned __int16 BITFLD_M_ACTIVITY : 1;
  unsigned __int16 BITFLD_M_STOP_DET : 1;
  unsigned __int16 BITFLD_M_START_DET : 1;
  unsigned __int16 BITFLD_M_GEN_CALL : 1;
};

/* 319 */
struct __I2C_RAW_INTR_STAT_REG
{
  unsigned __int16 BITFLD_RX_UNDER : 1;
  unsigned __int16 BITFLD_RX_OVER : 1;
  unsigned __int16 BITFLD_RX_FULL : 1;
  unsigned __int16 BITFLD_TX_OVER : 1;
  unsigned __int16 BITFLD_TX_EMPTY : 1;
  unsigned __int16 BITFLD_RD_REQ : 1;
  unsigned __int16 BITFLD_TX_ABRT : 1;
  unsigned __int16 BITFLD_RX_DONE : 1;
  unsigned __int16 BITFLD_ACTIVITY : 1;
  unsigned __int16 BITFLD_STOP_DET : 1;
  unsigned __int16 BITFLD_START_DET : 1;
  unsigned __int16 BITFLD_GEN_CALL : 1;
};

/* 320 */
struct __I2C_RX_TL_REG
{
  unsigned __int16 BITFLD_RX_TL : 5;
};

/* 321 */
struct __I2C_TX_TL_REG
{
  unsigned __int16 BITFLD_RX_TL : 5;
};

/* 322 */
struct __I2C_CLR_INTR_REG
{
  unsigned __int16 BITFLD_CLR_INTR : 1;
};

/* 323 */
struct __I2C_CLR_RX_UNDER_REG
{
  unsigned __int16 BITFLD_CLR_RX_UNDER : 1;
};

/* 324 */
struct __I2C_CLR_RX_OVER_REG
{
  unsigned __int16 BITFLD_CLR_RX_OVER : 1;
};

/* 325 */
struct __I2C_CLR_TX_OVER_REG
{
  unsigned __int16 BITFLD_CLR_TX_OVER : 1;
};

/* 326 */
struct __I2C_CLR_RD_REQ_REG
{
  unsigned __int16 BITFLD_CLR_RD_REQ : 1;
};

/* 327 */
struct __I2C_CLR_TX_ABRT_REG
{
  unsigned __int16 BITFLD_CLR_TX_ABRT : 1;
};

/* 328 */
struct __I2C_CLR_RX_DONE_REG
{
  unsigned __int16 BITFLD_CLR_RX_DONE : 1;
};

/* 329 */
struct __I2C_CLR_ACTIVITY_REG
{
  unsigned __int16 BITFLD_CLR_ACTIVITY : 1;
};

/* 330 */
struct __I2C_CLR_STOP_DET_REG
{
  unsigned __int16 BITFLD_CLR_STOP_DET : 1;
};

/* 331 */
struct __I2C_CLR_START_DET_REG
{
  unsigned __int16 BITFLD_CLR_START_DET : 1;
};

/* 332 */
struct __I2C_CLR_GEN_CALL_REG
{
  unsigned __int16 BITFLD_CLR_GEN_CALL : 1;
};

/* 333 */
struct __I2C_ENABLE_REG
{
  unsigned __int16 BITFLD_CTRL_ENABLE : 1;
  unsigned __int16 BITFLD_I2C_ABORT : 1;
};

/* 334 */
struct __I2C_STATUS_REG
{
  unsigned __int16 BITFLD_I2C_ACTIVITY : 1;
  unsigned __int16 BITFLD_TFNF : 1;
  unsigned __int16 BITFLD_TFE : 1;
  unsigned __int16 BITFLD_RFNE : 1;
  unsigned __int16 BITFLD_RFF : 1;
  unsigned __int16 BITFLD_MST_ACTIVITY : 1;
  unsigned __int16 BITFLD_SLV_ACTIVITY : 1;
};

/* 335 */
struct __I2C_TXFLR_REG
{
  unsigned __int16 BITFLD_TXFLR : 6;
};

/* 336 */
struct __I2C_RXFLR_REG
{
  unsigned __int16 BITFLD_RXFLR : 6;
};

/* 337 */
struct __I2C_SDA_HOLD_REG
{
  unsigned __int16 BITFLD_IC_SDA_HOLD : 16;
};

/* 338 */
struct __I2C_TX_ABRT_SOURCE_REG
{
  unsigned __int16 BITFLD_ABRT_7B_ADDR_NOACK : 1;
  unsigned __int16 BITFLD_ABRT_10ADDR1_NOACK : 1;
  unsigned __int16 BITFLD_ABRT_10ADDR2_NOACK : 1;
  unsigned __int16 BITFLD_ABRT_TXDATA_NOACK : 1;
  unsigned __int16 BITFLD_ABRT_GCALL_NOACK : 1;
  unsigned __int16 BITFLD_ABRT_GCALL_READ : 1;
  unsigned __int16 BITFLD_ABRT_HS_ACKDET : 1;
  unsigned __int16 BITFLD_ABRT_SBYTE_ACKDET : 1;
  unsigned __int16 BITFLD_ABRT_HS_NORSTRT : 1;
  unsigned __int16 BITFLD_ABRT_SBYTE_NORSTRT : 1;
  unsigned __int16 BITFLD_ABRT_10B_RD_NORSTRT : 1;
  unsigned __int16 BITFLD_ABRT_MASTER_DIS : 1;
  unsigned __int16 BITFLD_ARB_LOST : 1;
  unsigned __int16 BITFLD_ABRT_SLVFLUSH_TXFIFO : 1;
  unsigned __int16 BITFLD_ABRT_SLV_ARBLOST : 1;
  unsigned __int16 BITFLD_ABRT_SLVRD_INTX : 1;
};

/* 339 */
struct __I2C_DMA_CR_REG
{
  unsigned __int16 BITFLD_RDMAE : 1;
  unsigned __int16 BITFLD_TDMAE : 1;
};

/* 340 */
struct __I2C_DMA_TDLR_REG
{
  unsigned __int16 BITFLD_DMATDL : 5;
};

/* 341 */
struct __I2C_DMA_RDLR_REG
{
  unsigned __int16 BITFLD_DMARDL : 5;
};

/* 342 */
struct __I2C_SDA_SETUP_REG
{
  unsigned __int16 BITFLD_SDA_SETUP : 8;
};

/* 343 */
struct __I2C_ACK_GENERAL_CALL_REG
{
  unsigned __int16 BITFLD_ACK_GEN_CALL : 1;
};

/* 344 */
struct __I2C_ENABLE_STATUS_REG
{
  unsigned __int16 BITFLD_IC_EN : 1;
  unsigned __int16 BITFLD_SLV_DISABLED_WHILE_BUSY : 1;
  unsigned __int16 BITFLD_SLV_RX_DATA_LOST : 1;
};

/* 345 */
struct __I2C_IC_FS_SPKLEN_REG
{
  unsigned __int16 BITFLD_IC_FS_SPKLEN : 8;
};

/* 346 */
struct __I2C_COMP_PARAM1_REG
{
  unsigned __int16 BITFLD_IC_COMP_PARAM1 : 16;
};

/* 347 */
struct __I2C_COMP_PARAM2_REG
{
  unsigned __int16 BITFLD_IC_COMP_PARAM2 : 16;
};

/* 348 */
struct __I2C_COMP_VERSION_REG
{
  unsigned __int16 BITFLD_IC_COMP_VERSION : 16;
};

/* 349 */
struct __I2C_COMP2_VERSION
{
  unsigned __int16 BITFLD_IC_COMP2_VERSION : 16;
};

/* 350 */
struct __I2C_COMP_TYPE_REG
{
  unsigned __int16 BITFLD_IC_COMP_TYPE : 16;
};

/* 351 */
struct __I2C_COMP_TYPE2_REG
{
  unsigned __int16 BITFLD_IC_COMP2_TYPE : 16;
};

/* 352 */
struct __GPIO_IRQ0_IN_SEL_REG
{
  unsigned __int16 BITFLD_KBRD_IRQ0_SEL : 4;
  unsigned __int16 _anon_0 : 2;
};

/* 353 */
struct __GPIO_IRQ1_IN_SEL_REG
{
  unsigned __int16 BITFLD_KBRD_IRQ1_SEL : 4;
  unsigned __int16 _anon_0 : 2;
};

/* 354 */
struct __GPIO_IRQ2_IN_SEL_REG
{
  unsigned __int16 BITFLD_KBRD_IRQ2_SEL : 4;
  unsigned __int16 _anon_0 : 2;
};

/* 355 */
struct __GPIO_IRQ3_IN_SEL_REG
{
  unsigned __int16 BITFLD_KBRD_IRQ3_SEL : 4;
  unsigned __int16 _anon_0 : 2;
};

/* 356 */
struct __GPIO_IRQ4_IN_SEL_REG
{
  unsigned __int16 BITFLD_KBRD_IRQ4_SEL : 4;
  unsigned __int16 _anon_0 : 2;
};

/* 357 */
struct __GPIO_DEBOUNCE_REG
{
  unsigned __int16 BITFLD_DEB_VALUE : 6;
  unsigned __int16 BITFLD_DEB_ENABLE0 : 1;
  unsigned __int16 BITFLD_DEB_ENABLE1 : 1;
  unsigned __int16 BITFLD_DEB_ENABLE2 : 1;
  unsigned __int16 BITFLD_DEB_ENABLE3 : 1;
  unsigned __int16 BITFLD_DEB_ENABLE4 : 1;
  unsigned __int16 BITFLD_DEB_ENABLE_KBRD : 1;
};

/* 358 */
struct __GPIO_RESET_IRQ_REG
{
  unsigned __int16 BITFLD_RESET_GPIO0_IRQ : 1;
  unsigned __int16 BITFLD_RESET_GPIO1_IRQ : 1;
  unsigned __int16 BITFLD_RESET_GPIO2_IRQ : 1;
  unsigned __int16 BITFLD_RESET_GPIO3_IRQ : 1;
  unsigned __int16 BITFLD_RESET_GPIO4_IRQ : 1;
  unsigned __int16 BITFLD_RESET_KBRD_IRQ : 1;
};

/* 359 */
struct __GPIO_INT_LEVEL_CTRL_REG
{
  unsigned __int16 BITFLD_INPUT_LEVEL0 : 1;
  unsigned __int16 BITFLD_INPUT_LEVEL1 : 1;
  unsigned __int16 BITFLD_INPUT_LEVEL2 : 1;
  unsigned __int16 BITFLD_INPUT_LEVEL3 : 1;
  unsigned __int16 BITFLD_INPUT_LEVEL4 : 1;
  unsigned __int16 BITFLD_EDGE_LEVELn0 : 1;
  unsigned __int16 BITFLD_EDGE_LEVELn1 : 1;
  unsigned __int16 BITFLD_EDGE_LEVELn2 : 1;
  unsigned __int16 BITFLD_EDGE_LEVELn3 : 1;
  unsigned __int16 BITFLD_EDGE_LEVELn4 : 1;
};

/* 360 */
struct __KBRD_IRQ_IN_SEL0_REG
{
  unsigned __int16 BITFLD_KBRD_P00_EN : 1;
  unsigned __int16 BITFLD_KBRD_P01_EN : 1;
  unsigned __int16 BITFLD_KBRD_P02_EN : 1;
  unsigned __int16 BITFLD_KBRD_P03_EN : 1;
  unsigned __int16 BITFLD_KBRD_P04_EN : 1;
  unsigned __int16 BITFLD_KBRD_P05_EN : 1;
  unsigned __int16 BITFLD_KBRD_P06_EN : 1;
  unsigned __int16 BITFLD_KBRD_P07_EN : 1;
  unsigned __int16 BITFLD_KBRD_P08_EN : 1;
  unsigned __int16 BITFLD_KBRD_P09_EN : 1;
  unsigned __int16 BITFLD_KBRD_P10_EN : 1;
  unsigned __int16 BITFLD_KBRD_P11_EN : 1;
};

/* 361 */
struct __KBRD_CTRL_REG
{
  unsigned __int16 BITFLD_KEY_REPEAT : 6;
  unsigned __int16 BITFLD_KBRD_LEVEL : 1;
  unsigned __int16 BITFLD_KBRD_REL : 1;
};

/* 362 */
struct __OTPC_MODE_REG
{
  unsigned __int32 BITFLD_OTPC_MODE_MODE : 3;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_OTPC_MODE_USE_TST_ROW : 1;
  unsigned __int32 BITFLD_OTPC_MODE_HT_MARG_EN : 1;
  unsigned __int32 BITFLD_OTPC_MODE_PRG_SEL : 2;
};

/* 363 */
struct __OTPC_STAT_REG
{
  unsigned __int32 BITFLD_OTPC_STAT_PRDY : 1;
  unsigned __int32 BITFLD_OTPC_STAT_PBUF_EMPTY : 1;
  unsigned __int32 BITFLD_OTPC_STAT_MRDY : 1;
};

/* 364 */
struct __OTPC_PADDR_REG
{
  unsigned __int32 BITFLD_OTPC_PADDR : 13;
};

/* 365 */
struct __OTPC_PWORD_REG
{
  unsigned __int32 BITFLD_OTPC_PWORD : 32;
};

/* 366 */
struct __OTPC_TIM1_REG
{
  unsigned __int32 BITFLD_OTPC_TIM1_CC_T_1US : 7;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_OTPC_TIM1_CC_T_20NS : 2;
  unsigned __int32 _anon_1 : 2;
  unsigned __int32 BITFLD_OTPC_TIM1_CC_T_RD : 3;
  unsigned __int32 _anon_2 : 1;
  unsigned __int32 BITFLD_OTPC_TIM1_US_T_PL : 4;
  unsigned __int32 BITFLD_OTPC_TIM1_US_T_CS : 4;
  unsigned __int32 BITFLD_OTPC_TIM1_US_T_CSP : 7;
};

/* 367 */
struct __OTPC_TIM2_REG
{
  unsigned __int32 BITFLD_OTPC_TIM2_US_T_PW : 5;
  unsigned __int32 BITFLD_OTPC_TIM2_US_T_PWI : 3;
  unsigned __int32 BITFLD_OTPC_TIM2_US_T_PPR : 7;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_OTPC_TIM2_US_T_PPS : 5;
  unsigned __int32 BITFLD_OTPC_TIM2_US_T_VDS : 3;
  unsigned __int32 BITFLD_OTPC_TIM2_US_T_PPH : 5;
  unsigned __int32 BITFLD_OTPC_TIM2_US_T_SAS : 2;
  unsigned __int32 BITFLD_OTPC_TIM2_US_ADD_CC_EN : 1;
};

/* 368 */
struct __OTPC_AHBADR_REG
{
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_OTPC_AHBADR : 14;
};

/* 369 */
struct __OTPC_CELADR_REG
{
  unsigned __int32 BITFLD_OTPC_CELADR : 13;
};

/* 370 */
struct __OTPC_NWORDS_REG
{
  unsigned __int32 BITFLD_OTPC_NWORDS : 13;
};

/* 371 */
struct __QDEC_CTRL_REG
{
  unsigned __int16 BITFLD_QDEC_IRQ_ENABLE : 1;
  unsigned __int16 BITFLD_QDEC_EVENT_CNT_CLR : 1;
  unsigned __int16 BITFLD_QDEC_IRQ_STATUS : 1;
  unsigned __int16 BITFLD_QDEC_IRQ_THRES : 8;
};

/* 372 */
struct __QDEC_XCNT_REG
{
  unsigned __int16 BITFLD_QDEC_X_CNT : 16;
};

/* 373 */
struct __QDEC_YCNT_REG
{
  unsigned __int16 BITFLD_QDEC_Y_CNT : 16;
};

/* 374 */
struct __QDEC_CLOCKDIV_REG
{
  unsigned __int16 BITFLD_QDEC_CLOCKDIV : 10;
  unsigned __int16 BITFLD_QDEC_PRESCALER_EN : 1;
};

/* 375 */
struct __QDEC_CTRL2_REG
{
  unsigned __int16 BITFLD_QDEC_CHX_PORT_SEL : 3;
  unsigned __int16 BITFLD_QDEC_CHY_PORT_SEL : 3;
  unsigned __int16 BITFLD_QDEC_CHZ_PORT_SEL : 3;
  unsigned __int16 BITFLD_QDEC_CHX_EVENT_MODE : 1;
  unsigned __int16 BITFLD_QDEC_CHY_EVENT_MODE : 1;
  unsigned __int16 BITFLD_QDEC_CHZ_EVENT_MODE : 1;
};

/* 376 */
struct __QDEC_ZCNT_REG
{
  unsigned __int16 BITFLD_QDEC_Z_CNT : 16;
};

/* 377 */
struct __QDEC_EVENT_CNT_REG
{
  unsigned __int16 BITFLD_QDEC_EVENT_CNT : 8;
};

/* 378 */
struct __RTC_CONTROL_REG
{
  unsigned __int32 BITFLD_RTC_TIME_DISABLE : 1;
  unsigned __int32 BITFLD_RTC_CAL_DISABLE : 1;
};

/* 379 */
struct __RTC_HOUR_MODE_REG
{
  unsigned __int32 BITFLD_RTC_HMS : 1;
};

/* 380 */
struct __RTC_TIME_REG
{
  unsigned __int32 BITFLD_RTC_TIME_H_U : 4;
  unsigned __int32 BITFLD_RTC_TIME_H_T : 4;
  unsigned __int32 BITFLD_RTC_TIME_S_U : 4;
  unsigned __int32 BITFLD_RTC_TIME_S_T : 3;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_RTC_TIME_M_U : 4;
  unsigned __int32 BITFLD_RTC_TIME_M_T : 3;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_RTC_TIME_HR_U : 4;
  unsigned __int32 BITFLD_RTC_TIME_HR_T : 2;
  unsigned __int32 BITFLD_RTC_TIME_PM : 1;
  unsigned __int32 BITFLD_RTC_TIME_CH : 1;
};

/* 381 */
struct __RTC_CALENDAR_REG
{
  unsigned __int32 BITFLD_RTC_DAY : 3;
  unsigned __int32 BITFLD_RTC_CAL_M_U : 4;
  unsigned __int32 BITFLD_RTC_CAL_M_T : 1;
  unsigned __int32 BITFLD_RTC_CAL_D_U : 4;
  unsigned __int32 BITFLD_RTC_CAL_D_T : 2;
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_RTC_CAL_Y_U : 4;
  unsigned __int32 BITFLD_RTC_CAL_Y_T : 4;
  unsigned __int32 BITFLD_RTC_CAL_C_U : 4;
  unsigned __int32 BITFLD_RTC_CAL_C_T : 2;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_RTC_CAL_CH : 1;
};

/* 382 */
struct __RTC_TIME_ALARM_REG
{
  unsigned __int32 BITFLD_RTC_TIME_H_U : 4;
  unsigned __int32 BITFLD_RTC_TIME_H_T : 4;
  unsigned __int32 BITFLD_RTC_TIME_S_U : 4;
  unsigned __int32 BITFLD_RTC_TIME_S_T : 3;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_RTC_TIME_M_U : 4;
  unsigned __int32 BITFLD_RTC_TIME_M_T : 3;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_RTC_TIME_HR_U : 4;
  unsigned __int32 BITFLD_RTC_TIME_HR_T : 2;
  unsigned __int32 BITFLD_RTC_TIME_PM : 1;
};

/* 383 */
struct __RTC_CALENDAR_ALARM_REG
{
  unsigned __int32 _anon_0 : 3;
  unsigned __int32 BITFLD_RTC_CAL_M_U : 4;
  unsigned __int32 BITFLD_RTC_CAL_M_T : 1;
  unsigned __int32 BITFLD_RTC_CAL_D_U : 4;
  unsigned __int32 BITFLD_RTC_CAL_D_T : 2;
};

/* 384 */
struct __RTC_ALARM_ENABLE_REG
{
  unsigned __int32 BITFLD_RTC_ALARM_HOS_EN : 1;
  unsigned __int32 BITFLD_RTC_ALARM_SEC_EN : 1;
  unsigned __int32 BITFLD_RTC_ALARM_MIN_EN : 1;
  unsigned __int32 BITFLD_RTC_ALARM_HOUR_EN : 1;
  unsigned __int32 BITFLD_RTC_ALARM_DATE_EN : 1;
  unsigned __int32 BITFLD_RTC_ALARM_MNTH_EN : 1;
};

/* 385 */
struct __RTC_EVENT_FLAGS_REG
{
  unsigned __int32 BITFLD_RTC_EVENT_HOS : 1;
  unsigned __int32 BITFLD_RTC_EVENT_SEC : 1;
  unsigned __int32 BITFLD_RTC_EVENT_MIN : 1;
  unsigned __int32 BITFLD_RTC_EVENT_HOUR : 1;
  unsigned __int32 BITFLD_RTC_EVENT_DATE : 1;
  unsigned __int32 BITFLD_RTC_EVENT_MNTH : 1;
  unsigned __int32 BITFLD_RTC_EVENT_ALRM : 1;
};

/* 386 */
struct __RTC_INTERRUPT_ENABLE_REG
{
  unsigned __int32 BITFLD_RTC_HOS_INT_EN : 1;
  unsigned __int32 BITFLD_RTC_SEC_INT_EN : 1;
  unsigned __int32 BITFLD_RTC_MIN_INT_EN : 1;
  unsigned __int32 BITFLD_RTC_HOUR_INT_EN : 1;
  unsigned __int32 BITFLD_RTC_DATE_INT_EN : 1;
  unsigned __int32 BITFLD_RTC_MNTH_INT_EN : 1;
  unsigned __int32 BITFLD_RTC_ALRM_INT_EN : 1;
};

/* 387 */
struct __RTC_INTERRUPT_DISABLE_REG
{
  unsigned __int32 BITFLD_RTC_HOS_INT_DIS : 1;
  unsigned __int32 BITFLD_RTC_SEC_INT_DIS : 1;
  unsigned __int32 BITFLD_RTC_MIN_INT_DIS : 1;
  unsigned __int32 BITFLD_RTC_HOUR_INT_DIS : 1;
  unsigned __int32 BITFLD_RTC_DATE_INT_DIS : 1;
  unsigned __int32 BITFLD_RTC_MNTH_INT_DIS : 1;
  unsigned __int32 BITFLD_RTC_ALRM_INT_DIS : 1;
};

/* 388 */
struct __RTC_INTERRUPT_MASK_REG
{
  unsigned __int32 BITFLD_RTC_HOS_INT_MSK : 1;
  unsigned __int32 BITFLD_RTC_SEC_INT_MSK : 1;
  unsigned __int32 BITFLD_RTC_MIN_INT_MSK : 1;
  unsigned __int32 BITFLD_RTC_HOUR_INT_MSK : 1;
  unsigned __int32 BITFLD_RTC_DATE_INT_MSK : 1;
  unsigned __int32 BITFLD_RTC_MNTH_INT_MSK : 1;
  unsigned __int32 BITFLD_RTC_ALRM_INT_MSK : 1;
};

/* 389 */
struct __RTC_STATUS_REG
{
  unsigned __int32 BITFLD_RTC_VALID_TIME : 1;
  unsigned __int32 BITFLD_RTC_VALID_CAL : 1;
  unsigned __int32 BITFLD_RTC_VALID_TIME_ALM : 1;
  unsigned __int32 BITFLD_RTC_VALID_CAL_ALM : 1;
};

/* 390 */
struct __RTC_KEEP_RTC_REG
{
  unsigned __int32 BITFLD_RTC_KEEP : 1;
};

/* 391 */
struct __SPI_CTRL_REG
{
  unsigned __int16 BITFLD_SPI_EN : 1;
  unsigned __int16 BITFLD_SPI_TX_EN : 1;
  unsigned __int16 BITFLD_SPI_RX_EN : 1;
  unsigned __int16 BITFLD_SPI_DMA_TX_EN : 1;
  unsigned __int16 BITFLD_SPI_DMA_RX_EN : 1;
  unsigned __int16 BITFLD_SPI_FIFO_RESET : 1;
  unsigned __int16 BITFLD_SPI_CAPTURE_AT_NEXT_EDGE : 1;
  unsigned __int16 BITFLD_SPI_SWAP_BYTES : 1;
};

/* 392 */
struct __SPI_CONFIG_REG
{
  unsigned __int16 BITFLD_SPI_MODE : 2;
  unsigned __int16 BITFLD_SPI_WORD_LENGTH : 5;
  unsigned __int16 BITFLD_SPI_SLAVE_EN : 1;
};

/* 393 */
struct __SPI_CLOCK_REG
{
  unsigned __int16 BITFLD_SPI_CLK_DIV : 7;
  unsigned __int16 BITFLD_SPI_MASTER_CLK_MODE : 1;
};

/* 394 */
struct __SPI_FIFO_CONFIG_REG
{
  unsigned __int16 BITFLD_SPI_TX_TL : 4;
  unsigned __int16 BITFLD_SPI_RX_TL : 4;
};

/* 395 */
struct __SPI_IRQ_MASK_REG
{
  unsigned __int16 BITFLD_SPI_IRQ_MASK_TX_EMPTY : 1;
  unsigned __int16 BITFLD_SPI_IRQ_MASK_RX_FULL : 1;
};

/* 396 */
struct __SPI_STATUS_REG
{
  unsigned __int16 BITFLD_SPI_STATUS_TX_EMPTY : 1;
  unsigned __int16 BITFLD_SPI_STATUS_RX_FULL : 1;
};

/* 397 */
struct __SPI_FIFO_STATUS_REG
{
  unsigned __int16 BITFLD_SPI_RX_FIFO_LEVEL : 6;
  unsigned __int16 BITFLD_SPI_TX_FIFO_LEVEL : 6;
  unsigned __int16 BITFLD_SPI_STATUS_RX_EMPTY : 1;
  unsigned __int16 BITFLD_SPI_STATUS_TX_FULL : 1;
  unsigned __int16 BITFLD_SPI_RX_FIFO_OVFL : 1;
  unsigned __int16 BITFLD_SPI_TRANSACTION_ACTIVE : 1;
};

/* 398 */
struct __SPI_FIFO_READ_REG
{
  unsigned __int16 BITFLD_SPI_FIFO_READ : 16;
};

/* 399 */
struct __SPI_FIFO_WRITE_REG
{
  unsigned __int16 BITFLD_SPI_FIFO_WRITE : 16;
};

/* 400 */
struct __SPI_CS_CONFIG_REG
{
  unsigned __int16 BITFLD_SPI_CS_SELECT : 3;
};

/* 401 */
struct __SPI_FIFO_HIGH_REG
{
  unsigned __int16 BITFLD_SPI_FIFO_HIGH : 16;
};

/* 402 */
struct __SPI_TXBUFFER_FORCE_L_REG
{
  unsigned __int16 BITFLD_SPI_TXBUFFER_FORCE_L : 16;
};

/* 403 */
struct __SPI_TXBUFFER_FORCE_H_REG
{
  unsigned __int16 BITFLD_SPI_TXBUFFER_FORCE_H : 16;
};

/* 404 */
struct __TIMER0_CTRL_REG
{
  unsigned __int16 BITFLD_TIM0_CTRL : 1;
  unsigned __int16 BITFLD_TIM0_CLK_SEL : 1;
  unsigned __int16 BITFLD_TIM0_CLK_DIV : 1;
  unsigned __int16 BITFLD_PWM_MODE : 1;
};

/* 405 */
struct __TIMER0_ON_REG
{
  unsigned __int16 BITFLD_TIM0_ON : 16;
};

/* 406 */
struct __TIMER0_RELOAD_M_REG
{
  unsigned __int16 BITFLD_TIM0_M : 16;
};

/* 407 */
struct __TIMER0_RELOAD_N_REG
{
  unsigned __int16 BITFLD_TIM0_N : 16;
};

/* 408 */
struct __TRIPLE_PWM_FREQUENCY
{
  unsigned __int16 BITFLD_PWM_FREQ : 14;
};

/* 409 */
struct __PWM2_START_CYCLE
{
  unsigned __int16 BITFLD_START_CYCLE : 14;
};

/* 410 */
struct __PWM3_START_CYCLE
{
  unsigned __int16 BITFLD_START_CYCLE : 14;
};

/* 411 */
struct __PWM4_START_CYCLE
{
  unsigned __int16 BITFLD_START_CYCLE : 14;
};

/* 412 */
struct __PWM5_START_CYCLE
{
  unsigned __int16 BITFLD_START_CYCLE : 14;
};

/* 413 */
struct __PWM6_START_CYCLE
{
  unsigned __int16 BITFLD_START_CYCLE : 14;
};

/* 414 */
struct __PWM7_START_CYCLE
{
  unsigned __int16 BITFLD_START_CYCLE : 14;
};

/* 415 */
struct __PWM2_END_CYCLE
{
  unsigned __int16 BITFLD_END_CYCLE : 14;
};

/* 416 */
struct __PWM3_END_CYCLE
{
  unsigned __int16 BITFLD_END_CYCLE : 14;
};

/* 417 */
struct __PWM4_END_CYCLE
{
  unsigned __int16 BITFLD_END_CYCLE : 14;
};

/* 418 */
struct __PWM5_END_CYCLE
{
  unsigned __int16 BITFLD_END_CYCLE : 14;
};

/* 419 */
struct __PWM6_END_CYCLE
{
  unsigned __int16 BITFLD_END_CYCLE : 14;
};

/* 420 */
struct __PWM7_END_CYCLE
{
  unsigned __int16 BITFLD_END_CYCLE : 14;
};

/* 421 */
struct __TRIPLE_PWM_CTRL_REG
{
  unsigned __int16 BITFLD_TRIPLE_PWM_ENABLE : 1;
  unsigned __int16 BITFLD_SW_PAUSE_EN : 1;
  unsigned __int16 BITFLD_HW_PAUSE_EN : 1;
  unsigned __int16 BITFLD_TRIPLE_PWM_CLK_SEL : 1;
};

/* 422 */
struct __TIMER1_CTRL_REG
{
  unsigned __int32 BITFLD_TIMER1_RELOAD : 11;
  unsigned __int32 BITFLD_TIMER1_ENABLE : 1;
  unsigned __int32 BITFLD_TIMER1_COUNT_DOWN_EN : 1;
  unsigned __int32 BITFLD_TIMER1_IRQ_EN : 1;
  unsigned __int32 BITFLD_TIMER1_FREE_RUN_MODE_EN : 1;
  unsigned __int32 BITFLD_TIMER1_USE_SYS_CLK : 1;
  unsigned __int32 BITFLD_TIMER1_CLK_EN : 1;
};

/* 423 */
struct __TIMER1_CAPTURE_REG
{
  unsigned __int32 BITFLD_TIMER1_GPIO1_CONF : 4;
  unsigned __int32 BITFLD_TIMER1_IN1_EVENT_FALL_EN : 1;
  unsigned __int32 BITFLD_TIMER1_IN1_COUNT_EN : 1;
  unsigned __int32 BITFLD_TIMER1_IN1_IRQ_EN : 1;
  unsigned __int32 BITFLD_TIMER1_IN1_PERIOD_MAX : 6;
  unsigned __int32 BITFLD_TIMER1_IN1_STAMP_TYPE : 1;
  unsigned __int32 BITFLD_TIMER1_GPIO2_CONF : 4;
  unsigned __int32 BITFLD_TIMER1_IN2_EVENT_FALL_EN : 1;
  unsigned __int32 BITFLD_TIMER1_IN2_COUNT_EN : 1;
  unsigned __int32 BITFLD_TIMER1_IN2_IRQ_EN : 1;
  unsigned __int32 BITFLD_TIMER1_IN2_PERIOD_MAX : 6;
  unsigned __int32 BITFLD_TIMER1_IN2_STAMP_TYPE : 1;
};

/* 424 */
struct __TIMER1_STATUS_REG
{
  unsigned __int32 BITFLD_TIMER1_TIMER_VALUE : 11;
  unsigned __int32 BITFLD_TIMER1_TIMER_EVENT : 1;
  unsigned __int32 BITFLD_TIMER1_IN1_EVENT : 1;
  unsigned __int32 BITFLD_TIMER1_IN2_EVENT : 1;
  unsigned __int32 BITFLD_TIMER1_IN1_OVRFLW : 1;
  unsigned __int32 BITFLD_TIMER1_IN2_OVRFLW : 1;
};

/* 425 */
struct __TIMER1_CAPCNT1_VALUE_REG
{
  unsigned __int32 BITFLD_TIMER1_CAPCNT1_VALUE : 11;
  unsigned __int32 BITFLD_TIMER1_CAPCNT1_RTC_HIGH : 11;
};

/* 426 */
struct __TIMER1_CAPCNT2_VALUE_REG
{
  unsigned __int32 BITFLD_TIMER1_CAPCNT2_VALUE : 11;
  unsigned __int32 BITFLD_TIMER1_CAPCNT2_RTC_HIGH : 11;
};

/* 427 */
struct __TIMER1_CLR_EVENT_REG
{
  unsigned __int32 BITFLD_TIMER1_CLR_TIMER_EVENT : 1;
  unsigned __int32 BITFLD_TIMER1_CLR_IN1_EVENT : 1;
  unsigned __int32 BITFLD_TIMER1_CLR_IN2_EVENT : 1;
};

/* 428 */
struct __UART_RBR_THR_DLL_REG
{
  unsigned __int16 BITFLD_RBR_THR_DLL : 8;
};

/* 429 */
struct __UART_IER_DLH_REG
{
  unsigned __int16 BITFLD_ERBFI_dlh0 : 1;
  unsigned __int16 BITFLD_ETBEI_dlh1 : 1;
  unsigned __int16 BITFLD_ELSI_dhl2 : 1;
  unsigned __int16 BITFLD_EDSSI_dlh3 : 1;
  unsigned __int16 BITFLD_dlh6_4 : 3;
  unsigned __int16 BITFLD_PTIME_dlh7 : 1;
};

/* 430 */
struct __UART_IIR_FCR_REG
{
  unsigned __int16 BITFLD_UART_IID0_FIFOE : 1;
  unsigned __int16 BITFLD_UART_IID1_RFIFOE : 1;
  unsigned __int16 BITFLD_UART_IID2_XFIFOR : 1;
  unsigned __int16 BITFLD_UART_IID3_DMAM : 1;
  unsigned __int16 BITFLD_UART_TET : 2;
  unsigned __int16 BITFLD_UART_FIFOSE_RT : 2;
};

/* 431 */
struct __UART_LCR_REG
{
  unsigned __int16 BITFLD_UART_DLS : 2;
  unsigned __int16 BITFLD_UART_STOP : 1;
  unsigned __int16 BITFLD_UART_PEN : 1;
  unsigned __int16 BITFLD_UART_EPS : 1;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 BITFLD_UART_BC : 1;
  unsigned __int16 BITFLD_UART_DLAB : 1;
};

/* 432 */
struct __UART_MCR_REG
{
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 BITFLD_UART_RTS : 1;
  unsigned __int16 _anon_1 : 1;
  unsigned __int16 _anon_2 : 1;
  unsigned __int16 BITFLD_UART_LB : 1;
  unsigned __int16 BITFLD_UART_AFCE : 1;
  unsigned __int16 _anon_3 : 1;
};

/* 433 */
struct __UART_LSR_REG
{
  unsigned __int16 BITFLD_UART_DR : 1;
  unsigned __int16 BITFLD_UART_OE : 1;
  unsigned __int16 BITFLD_UART_PE : 1;
  unsigned __int16 BITFLD_UART_FE : 1;
  unsigned __int16 BITFLD_UART_BI : 1;
  unsigned __int16 BITFLD_UART_THRE : 1;
  unsigned __int16 BITFLD_UART_TEMT : 1;
  unsigned __int16 BITFLD_UART_RFE : 1;
};

/* 434 */
struct __UART_MSR_REG
{
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 _anon_1 : 3;
  unsigned __int16 BITFLD_UART_CTS : 1;
};

/* 435 */
struct __UART_SCR_REG
{
  unsigned __int16 BITFLD_UART_SCRATCH_PAD : 8;
};

/* 436 */
struct __UART_SRBR_STHR0_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 437 */
struct __UART_SRBR_STHR1_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 438 */
struct __UART_SRBR_STHR2_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 439 */
struct __UART_SRBR_STHR3_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 440 */
struct __UART_SRBR_STHR4_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 441 */
struct __UART_SRBR_STHR5_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 442 */
struct __UART_SRBR_STHR6_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 443 */
struct __UART_SRBR_STHR7_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 444 */
struct __UART_SRBR_STHR8_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 445 */
struct __UART_SRBR_STHR9_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 446 */
struct __UART_SRBR_STHR10_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 447 */
struct __UART_SRBR_STHR11_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 448 */
struct __UART_SRBR_STHR12_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 449 */
struct __UART_SRBR_STHR13_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 450 */
struct __UART_SRBR_STHR14_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 451 */
struct __UART_SRBR_STHR15_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 452 */
struct __UART_FAR_REG
{
  unsigned __int16 BITFLD_UART_FAR : 1;
};

/* 453 */
struct __UART_USR_REG
{
  unsigned __int16 BITFLD_UART_BUSY : 1;
  unsigned __int16 BITFLD_UART_TFNF : 1;
  unsigned __int16 BITFLD_UART_TFE : 1;
  unsigned __int16 BITFLD_UART_RFNE : 1;
  unsigned __int16 BITFLD_UART_RFF : 1;
};

/* 454 */
struct __UART_TFL_REG
{
  unsigned __int16 BITFLD_UART_TRANSMIT_FIFO_LEVEL : 5;
};

/* 455 */
struct __UART_RFL_REG
{
  unsigned __int16 BITFLD_UART_RECEIVE_FIFO_LEVEL : 5;
};

/* 456 */
struct __UART_SRR_REG
{
  unsigned __int16 BITFLD_UART_UR : 1;
  unsigned __int16 BITFLD_UART_RFR : 1;
  unsigned __int16 BITFLD_UART_XFR : 1;
};

/* 457 */
struct __UART_SRTS_REG
{
  unsigned __int16 BITFLD_UART_SHADOW_REQUEST_TO_SEND : 1;
};

/* 458 */
struct __UART_SBCR_REG
{
  unsigned __int16 BITFLD_UART_SHADOW_BREAK_CONTROL : 1;
};

/* 459 */
struct __UART_SDMAM_REG
{
  unsigned __int16 BITFLD_UART_SHADOW_DMA_MODE : 1;
};

/* 460 */
struct __UART_SFE_REG
{
  unsigned __int16 BITFLD_UART_SHADOW_FIFO_ENABLE : 1;
};

/* 461 */
struct __UART_SRT_REG
{
  unsigned __int16 BITFLD_UART_SHADOW_RCVR_TRIGGER : 2;
};

/* 462 */
struct __UART_STET_REG
{
  unsigned __int16 BITFLD_UART_SHADOW_TX_EMPTY_TRIGGER : 2;
};

/* 463 */
struct __UART_HTX_REG
{
  unsigned __int16 BITFLD_UART_HALT_TX : 1;
};

/* 464 */
struct __UART_DMASA_REG
{
  unsigned __int16 BITFLD_DMASA : 1;
};

/* 465 */
struct __UART_DLF_REG
{
  unsigned __int16 BITFLD_UART_DLF : 4;
};

/* 466 */
struct __UART_UCV_REG
{
  unsigned __int16 BITFLD_UCV : 16;
};

/* 467 */
struct __UART_UCV_HIGH_REG
{
  unsigned __int16 BITFLD_UCV : 16;
};

/* 468 */
struct __UART_CTR_REG
{
  unsigned __int16 BITFLD_CTR : 16;
};

/* 469 */
struct __UART_CTR_HIGH_REG
{
  unsigned __int16 BITFLD_CTR : 16;
};

/* 470 */
struct __UART2_RBR_THR_DLL_REG
{
  unsigned __int16 BITFLD_RBR_THR_DLL : 8;
};

/* 471 */
struct __UART2_IER_DLH_REG
{
  unsigned __int16 BITFLD_ERBFI_dlh0 : 1;
  unsigned __int16 BITFLD_ETBEI_dlh1 : 1;
  unsigned __int16 BITFLD_ELSI_dhl2 : 1;
  unsigned __int16 BITFLD_EDSSI_dlh3 : 1;
  unsigned __int16 BITFLD_dlh6_4 : 3;
  unsigned __int16 BITFLD_PTIME_dlh7 : 1;
};

/* 472 */
struct __UART2_IIR_FCR_REG
{
  unsigned __int16 BITFLD_UART_IID0_FIFOE : 1;
  unsigned __int16 BITFLD_UART_IID1_RFIFOE : 1;
  unsigned __int16 BITFLD_UART_IID2_XFIFOR : 1;
  unsigned __int16 BITFLD_UART_IID3_DMAM : 1;
  unsigned __int16 BITFLD_UART_TET : 2;
  unsigned __int16 BITFLD_UART_FIFOSE_RT : 2;
};

/* 473 */
struct __UART2_LCR_REG
{
  unsigned __int16 BITFLD_UART_DLS : 2;
  unsigned __int16 BITFLD_UART_STOP : 1;
  unsigned __int16 BITFLD_UART_PEN : 1;
  unsigned __int16 BITFLD_UART_EPS : 1;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 BITFLD_UART_BC : 1;
  unsigned __int16 BITFLD_UART_DLAB : 1;
};

/* 474 */
struct __UART2_MCR_REG
{
  unsigned __int16 _anon_0 : 4;
  unsigned __int16 BITFLD_UART_LB : 1;
};

/* 475 */
struct __UART2_LSR_REG
{
  unsigned __int16 BITFLD_UART_DR : 1;
  unsigned __int16 BITFLD_UART_OE : 1;
  unsigned __int16 BITFLD_UART_PE : 1;
  unsigned __int16 BITFLD_UART_FE : 1;
  unsigned __int16 BITFLD_UART_BI : 1;
  unsigned __int16 BITFLD_UART_THRE : 1;
  unsigned __int16 BITFLD_UART_TEMT : 1;
  unsigned __int16 BITFLD_UART_RFE : 1;
};

/* 476 */
struct __UART2_SCR_REG
{
  unsigned __int16 BITFLD_UART_SCRATCH_PAD : 8;
};

/* 477 */
struct __UART2_SRBR_STHR0_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 478 */
struct __UART2_SRBR_STHR1_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 479 */
struct __UART2_SRBR_STHR2_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 480 */
struct __UART2_SRBR_STHR3_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 481 */
struct __UART2_SRBR_STHR4_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 482 */
struct __UART2_SRBR_STHR5_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 483 */
struct __UART2_SRBR_STHR6_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 484 */
struct __UART2_SRBR_STHR7_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 485 */
struct __UART2_SRBR_STHR8_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 486 */
struct __UART2_SRBR_STHR9_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 487 */
struct __UART2_SRBR_STHR10_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 488 */
struct __UART2_SRBR_STHR11_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 489 */
struct __UART2_SRBR_STHR12_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 490 */
struct __UART2_SRBR_STHR13_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 491 */
struct __UART2_SRBR_STHR14_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 492 */
struct __UART2_SRBR_STHR15_REG
{
  unsigned __int16 BITFLD_SRBR_STHRx : 8;
};

/* 493 */
struct __UART2_FAR_REG
{
  unsigned __int16 BITFLD_UART_FAR : 1;
};

/* 494 */
struct __UART2_USR_REG
{
  unsigned __int16 BITFLD_UART_BUSY : 1;
  unsigned __int16 BITFLD_UART_TFNF : 1;
  unsigned __int16 BITFLD_UART_TFE : 1;
  unsigned __int16 BITFLD_UART_RFNE : 1;
  unsigned __int16 BITFLD_UART_RFF : 1;
};

/* 495 */
struct __UART2_TFL_REG
{
  unsigned __int16 BITFLD_UART_TRANSMIT_FIFO_LEVEL : 5;
};

/* 496 */
struct __UART2_RFL_REG
{
  unsigned __int16 BITFLD_UART_RECEIVE_FIFO_LEVEL : 5;
};

/* 497 */
struct __UART2_SRR_REG
{
  unsigned __int16 BITFLD_UART_UR : 1;
  unsigned __int16 BITFLD_UART_RFR : 1;
  unsigned __int16 BITFLD_UART_XFR : 1;
};

/* 498 */
struct __UART2_SBCR_REG
{
  unsigned __int16 BITFLD_UART_SHADOW_BREAK_CONTROL : 1;
};

/* 499 */
struct __UART2_SDMAM_REG
{
  unsigned __int16 BITFLD_UART_SHADOW_DMA_MODE : 1;
};

/* 500 */
struct __UART2_SFE_REG
{
  unsigned __int16 BITFLD_UART_SHADOW_FIFO_ENABLE : 1;
};

/* 501 */
struct __UART2_SRT_REG
{
  unsigned __int16 BITFLD_UART_SHADOW_RCVR_TRIGGER : 2;
};

/* 502 */
struct __UART2_STET_REG
{
  unsigned __int16 BITFLD_UART_SHADOW_TX_EMPTY_TRIGGER : 2;
};

/* 503 */
struct __UART2_HTX_REG
{
  unsigned __int16 BITFLD_UART_HALT_TX : 1;
};

/* 504 */
struct __UART2_DMASA_REG
{
  unsigned __int16 BITFLD_DMASA : 1;
};

/* 505 */
struct __UART2_DLF_REG
{
  unsigned __int16 BITFLD_UART_DLF : 4;
};

/* 506 */
struct __UART2_UCV_REG
{
  unsigned __int16 BITFLD_UCV : 16;
};

/* 507 */
struct __UART2_UCV_HIGH_REG
{
  unsigned __int16 BITFLD_UCV : 16;
};

/* 508 */
struct __UART2_CTR_REG
{
  unsigned __int16 BITFLD_CTR : 16;
};

/* 509 */
struct __UART2_CTR_HIGH_REG
{
  unsigned __int16 BITFLD_CTR : 16;
};

/* 510 */
struct __CHIP_ID1_REG
{
  unsigned __int16 BITFLD_CHIP_ID1 : 8;
};

/* 511 */
struct __CHIP_ID2_REG
{
  unsigned __int16 BITFLD_CHIP_ID2 : 8;
};

/* 512 */
struct __CHIP_ID3_REG
{
  unsigned __int16 BITFLD_CHIP_ID3 : 8;
};

/* 513 */
struct __CHIP_ID4_REG
{
  unsigned __int16 BITFLD_CHIP_ID4 : 8;
};

/* 514 */
struct __CHIP_SWC_REG
{
  unsigned __int16 BITFLD_CHIP_SWC : 4;
};

/* 515 */
struct __CHIP_REVISION_REG
{
  unsigned __int16 BITFLD_CHIP_REVISION : 8;
};

/* 516 */
struct __CHIP_TEST1_REG
{
  unsigned __int16 BITFLD_CHIP_LAYOUT_REVISION : 8;
};

/* 517 */
struct __CHIP_TEST2_REG
{
  unsigned __int16 BITFLD_CHIP_METAL_OPTION : 4;
};

/* 518 */
struct __WATCHDOG_REG
{
  unsigned __int16 BITFLD_WDOG_VAL : 8;
  unsigned __int16 BITFLD_WDOG_VAL_NEG : 1;
  unsigned __int16 BITFLD_WDOG_WEN : 7;
};

/* 519 */
struct __WATCHDOG_CTRL_REG
{
  unsigned __int16 BITFLD_NMI_RST : 1;
  unsigned __int16 _anon_0 : 1;
};

/* 520 */
struct __WKUP_CTRL_REG
{
  unsigned __int16 BITFLD_WKUP_DEB_VALUE : 6;
  unsigned __int16 BITFLD_WKUP_SFT_KEYHIT : 1;
  unsigned __int16 BITFLD_WKUP_ENABLE_IRQ : 1;
  unsigned __int16 BITFLD_WKUP2_ENABLE_IRQ : 1;
};

/* 521 */
struct __WKUP_COMPARE_REG
{
  unsigned __int16 BITFLD_WKUP_COMPARE : 8;
};

/* 522 */
struct __WKUP_IRQ_STATUS_REG
{
  unsigned __int16 BITFLD_WKUP_IRQ_STATUS : 1;
  unsigned __int16 BITFLD_WKUP2_IRQ_STATUS : 1;
  unsigned __int16 BITFLD_WKUP_CNTR_RST : 1;
  unsigned __int16 BITFLD_WKUP2_CNTR_RST : 1;
};

/* 523 */
struct __WKUP_COUNTER_REG
{
  unsigned __int16 BITFLD_EVENT_VALUE : 8;
  unsigned __int16 BITFLD_EVENT2_VALUE : 8;
};

/* 524 */
struct __WKUP_SELECT_GPIO_REG
{
  unsigned __int16 BITFLD_WKUP_SELECT_GPIO : 12;
};

/* 525 */
struct __WKUP2_SELECT_GPIO_REG
{
  unsigned __int16 BITFLD_WKUP2_SELECT_GPIO : 12;
};

/* 526 */
struct __WKUP_POL_GPIO_REG
{
  unsigned __int16 BITFLD_WKUP_POL_GPIO : 12;
};

/* 527 */
struct __WKUP2_POL_GPIO_REG
{
  unsigned __int16 BITFLD_WKUP2_POL_GPIO : 12;
};

/* 528 */
struct __BLE_ADVCHMAP_REG
{
  unsigned __int32 BITFLD_ADVCHMAP : 3;
};

/* 529 */
struct __RF_ATTR_REG
{
  unsigned __int32 _anon_0 : 3;
  unsigned __int32 BITFLD_IFF_POLARITY : 1;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 _anon_2 : 1;
  unsigned __int32 _anon_3 : 2;
  unsigned __int32 BITFLD_RF_BIAS : 4;
  unsigned __int32 BITFLD_TIA_BIAS : 1;
  unsigned __int32 _anon_4 : 11;
  unsigned __int32 BITFLD_PA_POWER_SETTING : 4;
};

/* 530 */
struct __RF_RADIO_INIT_REG
{
  unsigned __int32 BITFLD_RADIO_LDO_EN : 1;
  unsigned __int32 BITFLD_RADIO_LDO_EN_SEL : 1;
  unsigned __int32 BITFLD_RADIO_LDO_EN_WR : 1;
  unsigned __int32 BITFLD_ADPLLDIG_PWR_SW1_EN : 1;
  unsigned __int32 BITFLD_ADPLLDIG_LDO_EN_SEL : 1;
  unsigned __int32 BITFLD_ADPLLDIG_LDO_EN_WR : 1;
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_ADPLLDIG_HRESET_N : 1;
  unsigned __int32 BITFLD_ADPLLDIG_HCLK_EN : 1;
  unsigned __int32 _anon_1 : 6;
  unsigned __int32 BITFLD_RADIO_REGS_RDY : 1;
  unsigned __int32 BITFLD_ADPLLDIG_HCLK_DIS : 1;
  unsigned __int32 _anon_2 : 6;
  unsigned __int32 BITFLD_RADIO_INIT_AUTOCLEAR : 1;
};

/* 531 */
struct __RF_LDO_STATUS_REG
{
  unsigned __int32 BITFLD_RADIO_LDO_EN_RD : 1;
  unsigned __int32 BITFLD_RADIO_LDO_ZERO_EN_RD : 1;
  unsigned __int32 BITFLD_ADPLLDIG_LDO_EN_RD : 1;
  unsigned __int32 BITFLD_ADPLLDIG_LDO_ZERO_EN_RD : 1;
  unsigned __int32 BITFLD_ldo_dco_en_rd : 1;
  unsigned __int32 BITFLD_ldo_dtc_en_rd : 1;
  unsigned __int32 BITFLD_ldo_radio_vref_hold_rd : 1;
  unsigned __int32 BITFLD_ldo_dco_vref_hold_rd : 1;
  unsigned __int32 BITFLD_ldo_dtc_vref_hold_rd : 1;
};

/* 532 */
struct __RF_ADPLLDIG_CTRL_REG
{
  unsigned __int32 BITFLD_OPENLOOP_RDY_SEL : 1;
  unsigned __int32 BITFLD_OPENLOOP_RDY_WR : 1;
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_PWR_SW_TIM_CTRL : 3;
};

/* 533 */
struct __RF_AGC_EXT_LUT_REG
{
  unsigned __int32 BITFLD_AGC_EXT_LUT : 10;
};

/* 534 */
struct __RF_CALSTATE_REG
{
  unsigned __int32 BITFLD_CALSTATE : 4;
};

/* 535 */
struct __RF_CAL_CTRL_REG
{
  unsigned __int32 BITFLD_SO_CAL : 1;
  unsigned __int32 BITFLD_EO_CAL : 1;
  unsigned __int32 BITFLD_RF_CAL_CTRL_SPARE : 1;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_DC_OFFSET_CAL_DIS : 1;
};

/* 536 */
struct __RF_IRQ_CTRL_REG
{
  unsigned __int32 BITFLD_EO_CAL_CLEAR : 1;
};

/* 537 */
struct __RF_ADCI_DC_OFFSET_REG
{
  unsigned __int32 BITFLD_ADC_OFFP_I_RD : 9;
  unsigned __int32 BITFLD_ADC_OFFN_I_RD : 9;
};

/* 538 */
struct __RF_ADCQ_DC_OFFSET_REG
{
  unsigned __int32 BITFLD_ADC_OFFP_Q_RD : 9;
  unsigned __int32 BITFLD_ADC_OFFN_Q_RD : 9;
};

/* 539 */
struct __RF_SPARE_REG
{
  unsigned __int32 BITFLD_RF_SPARE_BITS : 16;
  unsigned __int32 BITFLD_RF_SPARE_BITS_HV : 8;
  unsigned __int32 BITFLD_RF_SPARE_IN : 4;
  unsigned __int32 BITFLD_RF_SPARE_IN_EN : 1;
};

/* 540 */
struct __RF_IFF_CTRL_REG
{
  unsigned __int32 BITFLD_IF_CAL_TRIM : 2;
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_IF_MUTE : 1;
  unsigned __int32 BITFLD_IFF_DCOC_DAC_DIS : 1;
  unsigned __int32 BITFLD_RF_IFF_CTRL_SPARE : 6;
  unsigned __int32 BITFLD_IFF_COMPLEX_DIS : 1;
  unsigned __int32 BITFLD_IFF_DCOC_DAC_REFCUR_CTRL : 2;
};

/* 541 */
struct __RF_ADC_CTRL1_REG
{
  unsigned __int32 BITFLD_ADC_DC_OFFSET_SEL : 1;
  unsigned __int32 _anon_0 : 12;
  unsigned __int32 BITFLD_ADC_MUTE : 1;
  unsigned __int32 BITFLD_ADC_SIGN : 1;
};

/* 542 */
struct __RF_ADC_CTRL2_REG
{
  unsigned __int32 BITFLD_ADC_OFFP_I_WR : 9;
  unsigned __int32 BITFLD_ADC_OFFN_I_WR : 9;
};

/* 543 */
struct __RF_ADC_CTRL3_REG
{
  unsigned __int32 BITFLD_ADC_OFFP_Q_WR : 9;
  unsigned __int32 BITFLD_ADC_OFFN_Q_WR : 9;
};

/* 544 */
struct __RF_PA_CTRL_REG
{
  unsigned __int32 BITFLD_TRIM_DUTY_POS : 3;
  unsigned __int32 BITFLD_TRIM_DUTY_NEG : 3;
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_PA_RAMP_STEP_SPEED : 2;
};

/* 545 */
struct __RF_LDO_VREF_SEL_REG
{
  unsigned __int32 BITFLD_RF_LDO_RADIO_VREF_SEL : 1;
  unsigned __int32 BITFLD_RF_LDO_DTC_VREF_SEL : 1;
  unsigned __int32 BITFLD_RF_LDO_DCO_VREF_SEL : 1;
};

/* 546 */
struct __RF_MIXER_CTRL1_REG
{
  unsigned __int32 BITFLD_MIXER_IP2_DAC_I_TRIM : 9;
  unsigned __int32 _anon_0 : 7;
  unsigned __int32 BITFLD_MIXER_IP2_DAC_Q_TRIM : 9;
};

/* 547 */
struct __RF_MIXER_CTRL2_REG
{
  unsigned __int32 BITFLD_MIX_CAL_CAP_WR_1M : 4;
  unsigned __int32 _anon_0 : 4;
  unsigned __int32 BITFLD_MIX_CAL_CAP_WR_2M : 4;
  unsigned __int32 _anon_1 : 4;
  unsigned __int32 BITFLD_MIX_CAL_SELECT : 1;
};

/* 548 */
struct __RF_IO_CTRL_REG
{
  unsigned __int32 BITFLD_RFIO_TUNE_CAP_TRIM_RX : 4;
  unsigned __int32 _anon_0 : 4;
  unsigned __int32 BITFLD_RFIO_TUNE_CAP_TRIM_TX : 4;
};

/* 549 */
struct __RF_LNA_CTRL1_REG
{
  unsigned __int32 BITFLD_LNA_TRIM_GAIN0_HP : 5;
  unsigned __int32 BITFLD_LNA_TRIM_GAIN1_HP : 5;
  unsigned __int32 BITFLD_LNA_TRIM_GAIN2_HP : 5;
  unsigned __int32 BITFLD_LNA_TRIM_GAIN3_HP : 5;
  unsigned __int32 BITFLD_LNA_TRIM_GAIN4_HP : 5;
};

/* 550 */
struct __RF_LNA_CTRL2_REG
{
  unsigned __int32 BITFLD_LNA_TRIM_GAIN0_LP : 5;
  unsigned __int32 BITFLD_LNA_TRIM_GAIN1_LP : 5;
  unsigned __int32 BITFLD_LNA_TRIM_GAIN2_LP : 5;
  unsigned __int32 BITFLD_LNA_TRIM_GAIN3_LP : 5;
  unsigned __int32 BITFLD_LNA_TRIM_GAIN4_LP : 5;
};

/* 551 */
struct __RF_LNA_CTRL3_REG
{
  unsigned __int32 BITFLD_LNA_TRIM_CASC : 3;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_LNA_MODE_GAIN0_LP : 2;
  unsigned __int32 _anon_1 : 2;
  unsigned __int32 BITFLD_LNA_MODE_GAIN1_LP : 2;
  unsigned __int32 _anon_2 : 2;
  unsigned __int32 BITFLD_LNA_MODE_GAIN2_LP : 2;
  unsigned __int32 _anon_3 : 2;
  unsigned __int32 BITFLD_LNA_MODE_GAIN3_LP : 2;
  unsigned __int32 _anon_4 : 2;
  unsigned __int32 BITFLD_LNA_MODE_GAIN4_LP : 2;
  unsigned __int32 _anon_5 : 2;
  unsigned __int32 BITFLD_LNA_SPARE : 2;
};

/* 552 */
struct __RF_ADPLLDIG_RFMON_CTRL_REG
{
  unsigned __int32 BITFLD_ADPLLDIG_SYNC_CLK_INV : 1;
  unsigned __int32 BITFLD_ADPLLDIG_RFMON_MUX_SEL : 3;
  unsigned __int32 BITFLD_ADPLLDIG_RFMON_SPARE : 4;
};

/* 553 */
struct __RF_RDP_CTRL_REG
{
  unsigned __int32 BITFLD_RDP_RFCU_SEL : 1;
  unsigned __int32 BITFLD_RDP_MOD_SEL1 : 1;
  unsigned __int32 BITFLD_RDP_MOD_SEL2 : 2;
  unsigned __int32 BITFLD_RDP_MOD_RATE : 2;
};

/* 554 */
struct __RF_RFCU_CTRL_REG
{
  unsigned __int32 BITFLD_RF_RFCU_CLK_DIV : 1;
};

/* 555 */
struct __RF_OVERRULE_REG
{
  unsigned __int32 BITFLD_TX_EN_OVR : 2;
  unsigned __int32 BITFLD_RX_EN_OVR : 2;
};

/* 556 */
struct __RF_DIAGIRQ_CTRL_REG
{
  unsigned __int32 BITFLD_DIAG_BUS0_IRQ_MASK : 1;
  unsigned __int32 BITFLD_DIAG_BUS0_SEL : 2;
  unsigned __int32 BITFLD_DIAG_BUS0_BIT_SEL : 3;
  unsigned __int32 BITFLD_DIAG_BUS0_EDGE_SEL : 1;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_DIAG_BUS1_IRQ_MASK : 1;
  unsigned __int32 BITFLD_DIAG_BUS1_SEL : 2;
  unsigned __int32 BITFLD_DIAG_BUS1_BIT_SEL : 3;
  unsigned __int32 BITFLD_DIAG_BUS1_EDGE_SEL : 1;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_DIAG_BUS2_IRQ_MASK : 1;
  unsigned __int32 BITFLD_DIAG_BUS2_SEL : 2;
  unsigned __int32 BITFLD_DIAG_BUS2_BIT_SEL : 3;
  unsigned __int32 BITFLD_DIAG_BUS2_EDGE_SEL : 1;
  unsigned __int32 _anon_2 : 1;
  unsigned __int32 BITFLD_DIAG_BUS3_IRQ_MASK : 1;
  unsigned __int32 BITFLD_DIAG_BUS3_SEL : 2;
  unsigned __int32 BITFLD_DIAG_BUS3_BIT_SEL : 3;
  unsigned __int32 BITFLD_DIAG_BUS3_EDGE_SEL : 1;
};

/* 557 */
struct __RF_DIAGIRQ_STAT_REG
{
  unsigned __int32 BITFLD_DIAGIRQ_STAT : 4;
};

/* 558 */
struct __RF_LDO_CTRL_REG
{
  unsigned __int32 BITFLD_LDO_RADIO_LEVEL : 3;
  unsigned __int32 BITFLD_LDO_RADIO_CONT_ENABLE : 1;
  unsigned __int32 BITFLD_LDO_DTC_LEVEL : 3;
  unsigned __int32 BITFLD_LDO_DTC_CONT_ENABLE : 1;
  unsigned __int32 BITFLD_LDO_DCO_LEVEL : 3;
  unsigned __int32 BITFLD_LDO_DCO_CONT_ENABLE : 1;
  unsigned __int32 _anon_0 : 4;
  unsigned __int32 BITFLD_LDO_VREF_SMPL_TIME : 5;
  unsigned __int32 _anon_1 : 3;
  unsigned __int32 BITFLD_LDO_RADIO_HOLD_OVR_VAL : 1;
  unsigned __int32 BITFLD_LDO_RADIO_HOLD_OVR_EN : 1;
  unsigned __int32 BITFLD_LDO_DTC_HOLD_OVR_VAL : 1;
  unsigned __int32 BITFLD_LDO_DTC_HOLD_OVR_EN : 1;
  unsigned __int32 BITFLD_LDO_DCO_HOLD_OVR_VAL : 1;
  unsigned __int32 BITFLD_LDO_DCO_HOLD_OVR_EN : 1;
};

/* 559 */
struct __RF_ENABLE_CONFIG0_REG
{
  unsigned __int32 BITFLD_RFIO_LDO_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_RFIO_LDO_EN_DCF_TX : 5;
};

/* 560 */
struct __RF_ENABLE_CONFIG1_REG
{
  unsigned __int32 BITFLD_PA_LDO_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_PA_LDO_EN_DCF_TX : 5;
};

/* 561 */
struct __RF_ENABLE_CONFIG2_REG
{
  unsigned __int32 BITFLD_LNA_LDO_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_LNA_LDO_EN_DCF_TX : 5;
};

/* 562 */
struct __RF_ENABLE_CONFIG3_REG
{
  unsigned __int32 BITFLD_MIX_LDO_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_MIX_LDO_EN_DCF_TX : 5;
};

/* 563 */
struct __RF_ENABLE_CONFIG4_REG
{
  unsigned __int32 BITFLD_IFF_LDO_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_IFF_LDO_EN_DCF_TX : 5;
};

/* 564 */
struct __RF_ENABLE_CONFIG5_REG
{
  unsigned __int32 BITFLD_IFFADC_LDO_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_IFFADC_LDO_EN_DCF_TX : 5;
};

/* 565 */
struct __RF_ENABLE_CONFIG6_REG
{
  unsigned __int32 BITFLD_ADPLL_TDC_LDO_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLL_TDC_LDO_EN_DCF_TX : 5;
};

/* 566 */
struct __RF_ENABLE_CONFIG7_REG
{
  unsigned __int32 BITFLD_ADPLL_DTC_LDO_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLL_DTC_LDO_EN_DCF_TX : 5;
};

/* 567 */
struct __RF_ENABLE_CONFIG8_REG
{
  unsigned __int32 BITFLD_ADPLL_DCO_LDO_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLL_DCO_LDO_EN_DCF_TX : 5;
};

/* 568 */
struct __RF_ENABLE_CONFIG9_REG
{
  unsigned __int32 BITFLD_LDO_ZERO_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_LDO_ZERO_EN_DCF_TX : 5;
};

/* 569 */
struct __RF_ENABLE_CONFIG10_REG
{
  unsigned __int32 BITFLD_LNA_LDO_ZERO_DCF_RX : 5;
  unsigned __int32 BITFLD_LNA_LDO_ZERO_DCF_TX : 5;
};

/* 570 */
struct __RF_ENABLE_CONFIG11_REG
{
  unsigned __int32 BITFLD_ADPLLDIG_LDO_ACTIVERDY_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLLDIG_LDO_ACTIVERDY_DCF_TX : 5;
};

/* 571 */
struct __RF_ENABLE_CONFIG12_REG
{
  unsigned __int32 BITFLD_ADPLLDIG_LDO_LP_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLLDIG_LDO_LP_DCF_TX : 5;
};

/* 572 */
struct __RF_ENABLE_CONFIG13_REG
{
  unsigned __int32 BITFLD_RFIO_RX_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_RFIO_RX_EN_DCF_TX : 5;
};

/* 573 */
struct __RF_ENABLE_CONFIG14_REG
{
  unsigned __int32 BITFLD_RFIO_TX_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_RFIO_TX_EN_DCF_TX : 5;
};

/* 574 */
struct __RF_ENABLE_CONFIG15_REG
{
  unsigned __int32 BITFLD_RFIO_TX_HARM_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_RFIO_TX_HARM_EN_DCF_TX : 5;
};

/* 575 */
struct __RF_ENABLE_CONFIG16_REG
{
  unsigned __int32 BITFLD_RFIO_BIAS_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_RFIO_BIAS_EN_DCF_TX : 5;
};

/* 576 */
struct __RF_ENABLE_CONFIG17_REG
{
  unsigned __int32 BITFLD_RFIO_BIAS_SH_OPEN_DCF_RX : 5;
  unsigned __int32 BITFLD_RFIO_BIAS_SH_OPEN_DCF_TX : 5;
};

/* 577 */
struct __RF_ENABLE_CONFIG18_REG
{
  unsigned __int32 BITFLD_PA_RAMP_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_PA_RAMP_EN_DCF_TX : 5;
};

/* 578 */
struct __RF_ENABLE_CONFIG19_REG
{
  unsigned __int32 BITFLD_PA_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_PA_EN_DCF_TX : 5;
};

/* 579 */
struct __RF_ENABLE_CONFIG20_REG
{
  unsigned __int32 BITFLD_LNA_CORE_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_LNA_CORE_EN_DCF_TX : 5;
};

/* 580 */
struct __RF_ENABLE_CONFIG21_REG
{
  unsigned __int32 BITFLD_LNA_CGM_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_LNA_CGM_EN_DCF_TX : 5;
};

/* 581 */
struct __RF_ENABLE_CONFIG22_REG
{
  unsigned __int32 BITFLD_MIX_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_MIX_EN_DCF_TX : 5;
};

/* 582 */
struct __RF_ENABLE_CONFIG23_REG
{
  unsigned __int32 BITFLD_MIX_BIAS_SH_OPEN_DCF_RX : 5;
  unsigned __int32 BITFLD_MIX_BIAS_SH_OPEN_DCF_TX : 5;
};

/* 583 */
struct __RF_ENABLE_CONFIG24_REG
{
  unsigned __int32 BITFLD_IFF_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_IFF_EN_DCF_TX : 5;
};

/* 584 */
struct __RF_ENABLE_CONFIG25_REG
{
  unsigned __int32 BITFLD_IFF_BIAS_SH_OPEN_DCF_RX : 5;
  unsigned __int32 BITFLD_IFF_BIAS_SH_OPEN_DCF_TX : 5;
};

/* 585 */
struct __RF_ENABLE_CONFIG26_REG
{
  unsigned __int32 BITFLD_ADC_CLK_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_ADC_CLK_EN_DCF_TX : 5;
};

/* 586 */
struct __RF_ENABLE_CONFIG27_REG
{
  unsigned __int32 BITFLD_ADC_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_ADC_EN_DCF_TX : 5;
};

/* 587 */
struct __RF_ENABLE_CONFIG28_REG
{
  unsigned __int32 BITFLD_ADPLL_DCO_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLL_DCO_EN_DCF_TX : 5;
};

/* 588 */
struct __RF_ENABLE_CONFIG29_REG
{
  unsigned __int32 BITFLD_ADPLL_CLK_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLL_CLK_EN_DCF_TX : 5;
};

/* 589 */
struct __RF_ENABLE_CONFIG30_REG
{
  unsigned __int32 BITFLD_ADPLLDIG_RST_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLLDIG_RST_DCF_TX : 5;
};

/* 590 */
struct __RF_ENABLE_CONFIG31_REG
{
  unsigned __int32 BITFLD_ADPLLDIG_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLLDIG_EN_DCF_TX : 5;
};

/* 591 */
struct __RF_ENABLE_CONFIG32_REG
{
  unsigned __int32 BITFLD_ADPLLDIG_RX_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLLDIG_RX_EN_DCF_TX : 5;
};

/* 592 */
struct __RF_ENABLE_CONFIG33_REG
{
  unsigned __int32 BITFLD_ADPLLDIG_PAIN_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLLDIG_PAIN_EN_DCF_TX : 5;
};

/* 593 */
struct __RF_ENABLE_CONFIG34_REG
{
  unsigned __int32 BITFLD_ADPLL_LOBUF_PA_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLL_LOBUF_PA_EN_DCF_TX : 5;
};

/* 594 */
struct __RF_ENABLE_CONFIG35_REG
{
  unsigned __int32 BITFLD_CAL_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_CAL_EN_DCF_TX : 5;
};

/* 595 */
struct __RF_ENABLE_CONFIG36_REG
{
  unsigned __int32 BITFLD_DEM_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_DEM_EN_DCF_TX : 5;
};

/* 596 */
struct __RF_ENABLE_CONFIG37_REG
{
  unsigned __int32 BITFLD_DEM_DC_PARCAL_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_SPARE_DEM_DC_PARCAL_DCF_TX : 5;
};

/* 597 */
struct __RF_ENABLE_CONFIG38_REG
{
  unsigned __int32 BITFLD_DEM_AGC_UNFREEZE_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_SPARE_DEM_AGC_UNFREEZE_EN_DCF_TX : 5;
};

/* 598 */
struct __RF_ENABLE_CONFIG39_REG
{
  unsigned __int32 BITFLD_DEM_SIGDETECT_EN_DCF_RX : 5;
  unsigned __int32 BITFLD_SPARE_DEM_SIGDETECT_EN_DCF_TX : 5;
};

/* 599 */
struct __RF_ENABLE_CONFIG40_REG
{
  unsigned __int32 BITFLD_PHY_RDY4BS_DCF_RX : 5;
  unsigned __int32 BITFLD_PHY_RDY4BS_DCF_TX : 5;
};

/* 600 */
struct __RF_ENABLE_CONFIG41_REG
{
  unsigned __int32 BITFLD_ADPLL_RDY_FOR_DIV_DCF_RX : 5;
  unsigned __int32 BITFLD_ADPLL_RDY_FOR_DIV_DCF_TX : 5;
};

/* 601 */
struct __RF_ENABLE_CONFIG42_REG
{
  unsigned __int32 BITFLD_SPARE1_DCF_RX : 5;
  unsigned __int32 BITFLD_SPARE1_DCF_TX : 5;
};

/* 602 */
struct __RF_ENABLE_CONFIG43_REG
{
  unsigned __int32 BITFLD_SPARE2_DCF_RX : 5;
  unsigned __int32 BITFLD_SPARE2_DCF_TX : 5;
};

/* 603 */
struct __RF_ENABLE_CONFIG44_REG
{
  unsigned __int32 BITFLD_SPARE3_DCF_RX : 5;
  unsigned __int32 BITFLD_SPARE3_DCF_TX : 5;
};

/* 604 */
struct __RF_ENABLE_CONFIG45_REG
{
  unsigned __int32 BITFLD_SPARE4_DCF_RX : 5;
  unsigned __int32 BITFLD_SPARE4_DCF_TX : 5;
};

/* 605 */
struct __RF_ENABLE_CONFIG46_REG
{
  unsigned __int32 BITFLD_SPARE5_DCF_RX : 5;
  unsigned __int32 BITFLD_SPARE5_DCF_TX : 5;
};

/* 606 */
struct __RF_CNTRL_TIMER_1_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 607 */
struct __RF_CNTRL_TIMER_2_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 608 */
struct __RF_CNTRL_TIMER_3_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 609 */
struct __RF_CNTRL_TIMER_4_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 610 */
struct __RF_CNTRL_TIMER_5_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 611 */
struct __RF_CNTRL_TIMER_6_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 612 */
struct __RF_CNTRL_TIMER_7_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 613 */
struct __RF_CNTRL_TIMER_8_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 614 */
struct __RF_CNTRL_TIMER_9_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 615 */
struct __RF_CNTRL_TIMER_10_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 616 */
struct __RF_CNTRL_TIMER_11_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 617 */
struct __RF_CNTRL_TIMER_12_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 618 */
struct __RF_CNTRL_TIMER_13_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 619 */
struct __RF_CNTRL_TIMER_14_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 620 */
struct __RF_CNTRL_TIMER_15_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 621 */
struct __RF_CNTRL_TIMER_16_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 622 */
struct __RF_CNTRL_TIMER_17_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 623 */
struct __RF_CNTRL_TIMER_18_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 624 */
struct __RF_CNTRL_TIMER_19_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 625 */
struct __RF_CNTRL_TIMER_20_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 626 */
struct __RF_CNTRL_TIMER_21_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 627 */
struct __RF_CNTRL_TIMER_22_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 628 */
struct __RF_CNTRL_TIMER_23_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 629 */
struct __RF_CNTRL_TIMER_24_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 630 */
struct __RF_CNTRL_TIMER_25_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 631 */
struct __RF_CNTRL_TIMER_26_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 632 */
struct __RF_CNTRL_TIMER_27_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 633 */
struct __RF_CNTRL_TIMER_28_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 634 */
struct __RF_CNTRL_TIMER_29_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 635 */
struct __RF_CNTRL_TIMER_30_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 636 */
struct __RF_CNTRL_TIMER_31_REG
{
  unsigned __int32 BITFLD_SET_OFFSET : 8;
  unsigned __int32 BITFLD_RESET_OFFSET : 8;
};

/* 637 */
struct __RF_ALWAYS_EN1_REG
{
  unsigned __int32 BITFLD_ALW_EN_RFIO_LDO_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_PA_LDO_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_LNA_LDO_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_MIX_LDO_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_IFF_LDO_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_IFFADC_LDO_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLL_TDC_LDO_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLL_DTC_LDO_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLL_DCO_LDO_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_LDO_ZERO_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_LNA_LDO_ZERO : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLLDIG_LDO_ACTIVERDY : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLLDIG_LDO_LP : 1;
  unsigned __int32 BITFLD_ALW_EN_RFIO_RX_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_RFIO_TX_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_RFIO_TX_HARM_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_RFIO_BIAS_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_RFIO_BIAS_SH_OPEN : 1;
  unsigned __int32 BITFLD_ALW_EN_PA_RAMP_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_PA_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_LNA_CORE_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_LNA_CGM_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_MIX_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_MIX_BIAS_SH_OPEN : 1;
  unsigned __int32 BITFLD_ALW_EN_IFF_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_IFF_BIAS_SH_OPEN : 1;
  unsigned __int32 BITFLD_ALW_EN_ADC_CLK_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_ADC_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLL_DCO_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLL_CLK_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLLDIG_RST : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLLDIG_EN : 1;
};

/* 638 */
struct __RF_ALWAYS_EN2_REG
{
  unsigned __int32 BITFLD_ALW_EN_ADPLLDIG_RX_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLL_PAIN_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLL_LOBUF_PA_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_CAL_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_DEM_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_DEM_DC_PARCAL_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_DEM_AGC_UNFREEZE_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_DEM_SIGDETECT_EN : 1;
  unsigned __int32 BITFLD_ALW_EN_PHY_RDY4BS : 1;
  unsigned __int32 BITFLD_ALW_EN_ADPLL_RDY_FOR_DIV : 1;
  unsigned __int32 BITFLD_ALW_EN_SPARE1 : 1;
  unsigned __int32 BITFLD_ALW_EN_SPARE2 : 1;
  unsigned __int32 BITFLD_ALW_EN_SPARE3 : 1;
  unsigned __int32 BITFLD_ALW_EN_SPARE4 : 1;
  unsigned __int32 BITFLD_ALW_EN_SPARE5 : 1;
};

/* 639 */
struct __RF_PORT_EN_REG
{
  unsigned __int32 BITFLD_RF_PORT0_RX : 1;
  unsigned __int32 BITFLD_RF_PORT0_TX : 1;
  unsigned __int32 BITFLD_RF_PORT1_RX : 1;
  unsigned __int32 BITFLD_RF_PORT1_TX : 1;
  unsigned __int32 BITFLD_RF_PORT2_RX : 1;
  unsigned __int32 BITFLD_RF_PORT2_TX : 1;
  unsigned __int32 BITFLD_RF_PORT3_RX : 1;
  unsigned __int32 BITFLD_RF_PORT3_TX : 1;
  unsigned __int32 BITFLD_RF_PORT4_RX : 1;
  unsigned __int32 BITFLD_RF_PORT4_TX : 1;
};

/* 640 */
struct __RF_PORT_POL_REG
{
  unsigned __int32 BITFLD_RF_PORT0_POL : 1;
  unsigned __int32 BITFLD_RF_PORT1_POL : 1;
  unsigned __int32 BITFLD_RF_PORT2_POL : 1;
  unsigned __int32 BITFLD_RF_PORT3_POL : 1;
  unsigned __int32 BITFLD_RF_PORT4_POL : 1;
};

/* 641 */
struct __RF_DEM_CTRL_REG
{
  unsigned __int32 BITFLD_EQUAL_EN : 1;
  unsigned __int32 BITFLD_BLE_DDC_EN : 1;
  unsigned __int32 BITFLD_IQCORR_EN : 1;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_AGC_USE_GPIO_IN : 1;
  unsigned __int32 BITFLD_IQ_TO_GPIO_EN : 1;
};

/* 642 */
struct __RF_AGC_LUT_0123_REG
{
  unsigned __int32 BITFLD_VGA2_GAIN0 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN0 : 3;
  unsigned __int32 BITFLD_LNA_GAIN0 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN1 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN1 : 3;
  unsigned __int32 BITFLD_LNA_GAIN1 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN2 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN2 : 3;
  unsigned __int32 BITFLD_LNA_GAIN2 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN3 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN3 : 3;
  unsigned __int32 BITFLD_LNA_GAIN3 : 3;
};

/* 643 */
struct __RF_AGC_LUT_4567_REG
{
  unsigned __int32 BITFLD_VGA2_GAIN4 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN4 : 3;
  unsigned __int32 BITFLD_LNA_GAIN4 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN5 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN5 : 3;
  unsigned __int32 BITFLD_LNA_GAIN5 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN6 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN6 : 3;
  unsigned __int32 BITFLD_LNA_GAIN6 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN7 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN7 : 3;
  unsigned __int32 BITFLD_LNA_GAIN7 : 3;
};

/* 644 */
struct __RF_AGC_LUT_89AB_REG
{
  unsigned __int32 BITFLD_VGA2_GAIN8 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN8 : 3;
  unsigned __int32 BITFLD_LNA_GAIN8 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN9 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN9 : 3;
  unsigned __int32 BITFLD_LNA_GAIN9 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN10 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN10 : 3;
  unsigned __int32 BITFLD_LNA_GAIN10 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN11 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN11 : 3;
  unsigned __int32 BITFLD_LNA_GAIN11 : 3;
};

/* 645 */
struct __RF_AGC_LUT_CDEF_REG
{
  unsigned __int32 BITFLD_VGA2_GAIN12 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN12 : 3;
  unsigned __int32 BITFLD_LNA_GAIN12 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN13 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN13 : 3;
  unsigned __int32 BITFLD_LNA_GAIN13 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN14 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN14 : 3;
  unsigned __int32 BITFLD_LNA_GAIN14 : 3;
  unsigned __int32 BITFLD_VGA2_GAIN15 : 2;
  unsigned __int32 BITFLD_VGA1_GAIN15 : 3;
  unsigned __int32 BITFLD_LNA_GAIN15 : 3;
};

/* 646 */
struct __RF_AGC_CTRL1_REG
{
  unsigned __int32 BITFLD_AGC_TH_LOW : 7;
  unsigned __int32 BITFLD_AGC_TH_HIGH : 7;
  unsigned __int32 BITFLD_AGC_TH2_HIGH : 7;
  unsigned __int32 BITFLD_AGC_MODE : 2;
};

/* 647 */
struct __RF_AGC_CTRL2_REG
{
  unsigned __int32 BITFLD_FASTAGC_EN : 1;
  unsigned __int32 BITFLD_FASTAGC_STEPS : 2;
  unsigned __int32 BITFLD_FASTAGC_WAIT : 2;
  unsigned __int32 BITFLD_AGCINC_WAIT : 2;
  unsigned __int32 BITFLD_AGCDEC_WAIT : 2;
  unsigned __int32 BITFLD_AGC_MAX_SETTING : 4;
  unsigned __int32 _anon_0 : 4;
  unsigned __int32 BITFLD_AGCSETTING_SEL : 1;
  unsigned __int32 BITFLD_AGCSETTING_WR : 4;
  unsigned __int32 BITFLD_EN_FRZ_GAIN : 1;
};

/* 648 */
struct __RF_AFC_CTRL_REG
{
  unsigned __int32 BITFLD_AFC_MODE : 4;
  unsigned __int32 BITFLD_PAD_MODE : 2;
  unsigned __int32 BITFLD_APD_MODE : 3;
  unsigned __int32 BITFLD_AFC_SYNCF_DIRECT : 1;
};

/* 649 */
struct __RF_DC_OFFSET_CTRL1_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_DCOFFSET_I_WR : 8;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_DCOFFSET_Q_WR : 8;
};

/* 650 */
struct __RF_DC_OFFSET_CTRL2_REG
{
  unsigned __int32 BITFLD_DCOFFSET_SEL : 1;
  unsigned __int32 BITFLD_DCPARCAL_EN : 1;
  unsigned __int32 BITFLD_DCNSTEP : 3;
  unsigned __int32 BITFLD_DCFULLNGAIN : 3;
  unsigned __int32 BITFLD_DCPARCAL_INIT : 2;
  unsigned __int32 BITFLD_DCVGA1SCALE_EN : 1;
  unsigned __int32 BITFLD_DCPARNGAIN : 3;
  unsigned __int32 BITFLD_DCPAR_MULT_STEPS_EN : 1;
  unsigned __int32 BITFLD_DCPAR_DCF_EN : 1;
  unsigned __int32 BITFLD_DCOC_RESULT_LNAGAIN0_LUT : 2;
  unsigned __int32 BITFLD_DCOC_RESULT_LNAGAIN1_LUT : 2;
  unsigned __int32 BITFLD_DCOC_RESULT_LNAGAIN2_LUT : 2;
  unsigned __int32 BITFLD_DCOC_RESULT_LNAGAIN345_LUT : 2;
};

/* 651 */
struct __RF_DC_OFFSET_CTRL3_REG
{
  unsigned __int32 BITFLD_DCBETA_I : 8;
  unsigned __int32 BITFLD_DCBETA_Q : 8;
};

/* 652 */
struct __RF_DC_OFFSET_CTRL4_REG
{
  unsigned __int32 BITFLD_DCAGCSETTING_FULL0 : 4;
  unsigned __int32 BITFLD_DCAGCSETTING_FULL1 : 4;
  unsigned __int32 BITFLD_DCAGCSETTING_FULL2 : 4;
  unsigned __int32 BITFLD_DCAGCSETTING_FULL3 : 4;
};

/* 653 */
struct __RF_AGC_RESULT_REG
{
  unsigned __int32 BITFLD_AFC_RD : 8;
  unsigned __int32 BITFLD_AGCSETTING_RD : 4;
};

/* 654 */
struct __RF_RSSI_RESULT_REG
{
  unsigned __int32 BITFLD_RSSI_LATCHED_RD : 10;
  unsigned __int32 BITFLD_RSSI_AVG_RD : 10;
};

/* 655 */
struct __RF_DEM_ATTR_REG
{
  unsigned __int32 BITFLD_AFC_POLE1 : 2;
  unsigned __int32 BITFLD_AFC_POLE2 : 2;
  unsigned __int32 BITFLD_RXDATA_INV : 1;
  unsigned __int32 BITFLD_DEM_HSI_POL : 1;
  unsigned __int32 BITFLD_MATCH0101_TH : 4;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_AGC_SPEED8M_EN : 1;
  unsigned __int32 BITFLD_DCOC_SPEED8M_EN : 1;
  unsigned __int32 BITFLD_DCPOLE : 2;
  unsigned __int32 BITFLD_RSSI_TH : 6;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_RFADC_CLK_PHASE : 2;
  unsigned __int32 BITFLD_ADDR_TIMEOUT_X2 : 1;
};

/* 656 */
struct __RF_RSSI_COMP_CTRL_REG
{
  unsigned __int32 BITFLD_RSSI_COMP0 : 4;
  unsigned __int32 BITFLD_RSSI_COMP1 : 4;
  unsigned __int32 BITFLD_RSSI_COMP2 : 4;
  unsigned __int32 BITFLD_RSSI_COMP3 : 4;
  unsigned __int32 BITFLD_RSSI_COMP4 : 4;
};

/* 657 */
struct __RF_DEM_TESTMODE_REG
{
  unsigned __int32 BITFLD_DEM_RFMON_SOURCE : 4;
  unsigned __int32 BITFLD_DEM_GPADC_MUX_SEL : 3;
  unsigned __int32 BITFLD_DEM_RFMON_TRIGGER : 2;
};

/* 658 */
struct __RF_DEM_IQCORRECT_REG
{
  unsigned __int32 BITFLD_IQCORR_BETA : 8;
  unsigned __int32 BITFLD_IQCORR_ALPHA : 8;
};

/* 659 */
struct __RF_PAD_CNT_CTRL_REG
{
  unsigned __int32 BITFLD_PAD_POS_LIMIT : 7;
  unsigned __int32 BITFLD_PAD_NEG_LIMIT : 7;
  unsigned __int32 BITFLD_PAD_CLEAR_COUNT : 1;
};

/* 660 */
struct __RF_PAD_CNT_RESULT_REG
{
  unsigned __int32 BITFLD_PAD_POS_CNT_RD : 8;
  unsigned __int32 BITFLD_PAD_NEG_CNT_RD : 8;
};

/* 661 */
struct __RF_DC_OFFSET_RESULT_REG
{
  unsigned __int32 BITFLD_DCOFFSET_I_RD : 9;
  unsigned __int32 BITFLD_DCOFFSET_Q_RD : 9;
};

/* 662 */
struct __RF_DC_OFFSET_FULL_RES_REG
{
  unsigned __int32 BITFLD_DCOFFSET_I_RD : 9;
  unsigned __int32 BITFLD_DCOFFSET_Q_RD : 9;
};

/* 663 */
struct __RF_DC_OFFSET_MPAR_RES0_REG
{
  unsigned __int32 BITFLD_DCOFFSET_I_RD : 9;
  unsigned __int32 BITFLD_DCOFFSET_Q_RD : 9;
};

/* 664 */
struct __RF_DC_OFFSET_MPAR_RES1_REG
{
  unsigned __int32 BITFLD_DCOFFSET_I_RD : 9;
  unsigned __int32 BITFLD_DCOFFSET_Q_RD : 9;
};

/* 665 */
struct __RF_DC_OFFSET_MPAR_RES2_REG
{
  unsigned __int32 BITFLD_DCOFFSET_I_RD : 9;
  unsigned __int32 BITFLD_DCOFFSET_Q_RD : 9;
};

/* 666 */
struct __RF_DC_OFFSET_MPAR_RES3_REG
{
  unsigned __int32 BITFLD_DCOFFSET_I_RD : 9;
  unsigned __int32 BITFLD_DCOFFSET_Q_RD : 9;
};

/* 667 */
struct __ADPLL_ATTR_CTRL_REG
{
  unsigned __int32 BITFLD_PWR_MODE_RX : 1;
  unsigned __int32 BITFLD_PWR_MODE_TX : 1;
};

/* 668 */
struct __ADPLL_CN_CTRL_REG
{
  unsigned __int32 BITFLD_CN : 7;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_CS : 1;
  unsigned __int32 _anon_1 : 6;
  unsigned __int32 BITFLD_SGN : 1;
  unsigned __int32 BITFLD_CH0 : 13;
};

/* 669 */
struct __ADPLL_FIF_CTRL1_REG
{
  unsigned __int32 BITFLD_FIFRX_1M : 14;
};

/* 670 */
struct __ADPLL_FIF_CTRL2_REG
{
  unsigned __int32 BITFLD_FIFRX_OFFSET : 14;
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_FIFTX : 14;
};

/* 671 */
struct __ADPLL_KDCO_CAL_CTRL1_REG
{
  unsigned __int32 BITFLD_KDCOHFIC_1M : 8;
  unsigned __int32 BITFLD_KDCOLF_IN_1M : 8;
};

/* 672 */
struct __ADPLL_KDCO_CAL_CTRL2_REG
{
  unsigned __int32 BITFLD_KMOD_ALPHA_1M : 5;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 _anon_1 : 2;
  unsigned __int32 _anon_2 : 8;
  unsigned __int32 BITFLD_KDCOCN_IC : 7;
  unsigned __int32 _anon_3 : 1;
  unsigned __int32 BITFLD_TKDCOCAL : 3;
  unsigned __int32 BITFLD_KDCOLFCALEN : 1;
  unsigned __int32 BITFLD_KDCOCALRX : 1;
  unsigned __int32 BITFLD_KDCOCALTX : 1;
  unsigned __int32 BITFLD_KDCOESTDEV : 2;
};

/* 673 */
struct __ADPLL_KDTCTDC_CAL_CTRL1_REG
{
  unsigned __int32 BITFLD_KDTC_ALPHA : 6;
  unsigned __int32 BITFLD_KTDC_IN : 9;
  unsigned __int32 BITFLD_KDTC_PIPELINE_BYPASS : 1;
  unsigned __int32 BITFLD_KDTCCN_IC : 7;
  unsigned __int32 BITFLD_KDTCIC : 9;
};

/* 674 */
struct __ADPLL_KDTCTDC_CAL_CTRL2_REG
{
  unsigned __int32 BITFLD_KDTCCALEN : 1;
  unsigned __int32 BITFLD_KDTCCALMOD : 1;
  unsigned __int32 BITFLD_KDTCCALMOD1P : 1;
  unsigned __int32 BITFLD_KDTCCAL_INV : 1;
  unsigned __int32 BITFLD_KDTCCALLG : 3;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_KTDCCALEN : 1;
  unsigned __int32 BITFLD_PHRDLY : 2;
  unsigned __int32 BITFLD_TKDTCCAL : 4;
  unsigned __int32 BITFLD_PHRDLY_EXTRA : 1;
};

/* 675 */
struct __ADPLL_DCOAMP_CAL_CTRL_REG
{
  unsigned __int32 BITFLD_KCOARSE : 3;
  unsigned __int32 BITFLD_KMEDIUM : 3;
  unsigned __int32 BITFLD_AMPCALEN : 1;
  unsigned __int32 BITFLD_DCOAMPTM : 1;
  unsigned __int32 _anon_0 : 8;
  unsigned __int32 BITFLD_DCOAMPIC_HP_RX : 4;
  unsigned __int32 BITFLD_DCOAMPIC_HP_TX : 4;
  unsigned __int32 BITFLD_DCOAMPIC_LP_RX : 4;
  unsigned __int32 BITFLD_DCOAMPIC_LP_TX : 4;
};

/* 676 */
struct __ADPLL_TXMOD_CTRL_REG
{
  unsigned __int32 BITFLD_BT_SEL : 1;
  unsigned __int32 BITFLD_TX_DATA_INV : 1;
  unsigned __int32 BITFLD_MOD_INDEX : 2;
  unsigned __int32 BITFLD_EO_PACKET_DIS : 1;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_TX_MODE : 2;
  unsigned __int32 BITFLD_INV_CKMODEXT : 1;
};

/* 677 */
struct __ADPLL_SDMOD_CTRL_REG
{
  unsigned __int32 BITFLD_SDMMODERX : 3;
  unsigned __int32 BITFLD_SDMMODETX : 3;
};

/* 678 */
struct __ADPLL_LF_CTRL1_REG
{
  unsigned __int32 BITFLD_FINETAU : 5;
  unsigned __int32 BITFLD_FINEK : 5;
  unsigned __int32 BITFLD_FINEKZ : 6;
};

/* 679 */
struct __ADPLL_LF_CTRL2_REG
{
  unsigned __int32 BITFLD_MODTAU_TUNE : 6;
  unsigned __int32 BITFLD_MODK_TUNE : 6;
  unsigned __int32 BITFLD_MODTAU : 6;
  unsigned __int32 BITFLD_MODK : 6;
  unsigned __int32 BITFLD_MODKZ : 6;
  unsigned __int32 BITFLD_RST_TAU_EN : 1;
};

/* 680 */
struct __ADPLL_ANA_CTRL_REG
{
  unsigned __int32 BITFLD_TDC_DTCIN_EN : 1;
  unsigned __int32 BITFLD_TDC_CKVIN_EN : 1;
  unsigned __int32 BITFLD_TDC_INV : 1;
  unsigned __int32 BITFLD_INV_CKTDC : 1;
  unsigned __int32 BITFLD_INV_CKPHV : 1;
  unsigned __int32 BITFLD_INV_CKDCOMOD : 1;
  unsigned __int32 BITFLD_EN_CKDCOMOD : 1;
  unsigned __int32 BITFLD_TGLDETEN : 1;
  unsigned __int32 BITFLD_DTCOFFSET : 7;
  unsigned __int32 BITFLD_DTC_EN : 1;
  unsigned __int32 BITFLD_TDC_OFFSET : 6;
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_VPASETTLE : 2;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_DTC_LDO_DMY : 2;
};

/* 681 */
struct __ADPLL_DIV_CTRL_REG
{
  unsigned __int32 BITFLD_FBDIV_EN : 1;
  unsigned __int32 BITFLD_RXDIV_FB_EN_RX : 1;
  unsigned __int32 BITFLD_RXDIV_FB_EN_TX : 1;
  unsigned __int32 _anon_0 : 5;
  unsigned __int32 BITFLD_RXDIV_TRIM : 9;
  unsigned __int32 BITFLD_TXDIV_TRIM : 9;
};

/* 682 */
struct __ADPLL_INIT_CTRL_REG
{
  unsigned __int32 BITFLD_DCOCOARSEIC : 4;
  unsigned __int32 BITFLD_DCOMEDIUMIC : 3;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_DCOFINEIC : 6;
  unsigned __int32 _anon_1 : 2;
  unsigned __int32 BITFLD_DCOMODIC : 13;
};

/* 683 */
struct __ADPLL_FSM_CTRL_REG
{
  unsigned __int32 BITFLD_TCOARSE : 4;
  unsigned __int32 BITFLD_TMEDIUM : 4;
  unsigned __int32 BITFLD_TFINE : 4;
  unsigned __int32 BITFLD_TMOD : 4;
  unsigned __int32 BITFLD_TPASETTLE : 4;
  unsigned __int32 BITFLD_TSETTLE : 4;
  unsigned __int32 BITFLD_TVPASETTLE : 6;
};

/* 684 */
struct __ADPLL_MON_CTRL_REG
{
  unsigned __int32 BITFLD_TFREQMEAS : 5;
  unsigned __int32 BITFLD_TMREN : 1;
  unsigned __int32 BITFLD_ENRFMEAS : 1;
  unsigned __int32 BITFLD_RFMEAS_MODE : 1;
  unsigned __int32 BITFLD_HOLD_STATE : 4;
  unsigned __int32 _anon_0 : 4;
  unsigned __int32 BITFLD_QUALMONMOD : 2;
  unsigned __int32 BITFLD_QUALMONWND : 6;
  unsigned __int32 BITFLD_QUALMONTRHLD : 6;
  unsigned __int32 BITFLD_QUALMONFRCEN : 1;
};

/* 685 */
struct __ADPLL_MISC_CTRL_REG
{
  unsigned __int32 BITFLD_DLYFCWDT : 2;
  unsigned __int32 BITFLD_RESDLY : 2;
  unsigned __int32 BITFLD_MODDLY : 2;
  unsigned __int32 BITFLD_ENRESIDUE : 1;
  unsigned __int32 BITFLD_ENFCWMOD : 1;
  unsigned __int32 BITFLD_PHR_FRAC_PRESET_VAL : 16;
};

/* 686 */
struct __ADPLL_OVERRULE_CTRL1_REG
{
  unsigned __int32 BITFLD_OVR_ACTIVE_SEL : 1;
  unsigned __int32 BITFLD_OVR_ACTIVE_WR : 1;
  unsigned __int32 BITFLD_OVR_RXBIT_SEL : 1;
  unsigned __int32 BITFLD_OVR_RXBIT_WR : 1;
  unsigned __int32 BITFLD_OVR_ENPAIN_SEL : 1;
  unsigned __int32 BITFLD_OVR_ENPAIN_WR : 1;
  unsigned __int32 BITFLD_OVR_SRESETN_SEL : 1;
  unsigned __int32 BITFLD_OVR_SRESETN_WR : 1;
  unsigned __int32 BITFLD_OVR_VPAEN_SEL : 1;
  unsigned __int32 BITFLD_OVR_VPAEN_WR : 1;
  unsigned __int32 BITFLD_OVR_RDYFORDIV_SEL : 1;
  unsigned __int32 BITFLD_OVR_RDYFORDIV_WR : 1;
  unsigned __int32 BITFLD_OVR_DCOAMPHOLD_SEL : 1;
  unsigned __int32 BITFLD_OVR_DCOAMPHOLD_WR : 1;
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_OVR_DCOAMP_SEL : 1;
  unsigned __int32 BITFLD_OVR_DCOAMP_WR : 4;
  unsigned __int32 _anon_1 : 3;
  unsigned __int32 BITFLD_OVR_DTC_OH_SEL : 1;
  unsigned __int32 BITFLD_OVR_DTC_OH_WR : 7;
};

/* 687 */
struct __ADPLL_OVERRULE_CTRL2_REG
{
  unsigned __int32 BITFLD_OVR_DCOCOARSE_SEL : 1;
  unsigned __int32 BITFLD_OVR_DCOCOARSE_WR : 4;
  unsigned __int32 _anon_0 : 3;
  unsigned __int32 BITFLD_OVR_DCOMEDIUM_SEL : 1;
  unsigned __int32 BITFLD_OVR_DCOMEDIUM_WR : 3;
  unsigned __int32 _anon_1 : 4;
  unsigned __int32 BITFLD_OVR_DCOFINE_SEL : 1;
  unsigned __int32 BITFLD_OVR_DCOFINE_WR : 6;
  unsigned __int32 BITFLD_OVR_DCOMOD_SEL : 1;
  unsigned __int32 BITFLD_OVR_DCOMOD_WR : 8;
};

/* 688 */
struct __ADPLL_OVERRULE_CTRL3_REG
{
  unsigned __int32 BITFLD_OVR_RXDIV_EN_SEL : 1;
  unsigned __int32 BITFLD_OVR_RXDIV_EN_WR : 1;
  unsigned __int32 BITFLD_OVR_TXDIV_EN_SEL : 1;
  unsigned __int32 BITFLD_OVR_TXDIV_EN_WR : 1;
  unsigned __int32 BITFLD_OVR_FBDIV_EN_SEL : 1;
  unsigned __int32 BITFLD_OVR_FBDIV_EN_WR : 1;
  unsigned __int32 BITFLD_OVR_RXDIV_FB_EN_SEL : 1;
  unsigned __int32 BITFLD_OVR_RXDIV_FB_EN_WR : 1;
};

/* 689 */
struct __ADPLL_RFPT_CTRL_REG
{
  unsigned __int32 BITFLD_RFPT_MUX : 4;
  unsigned __int32 BITFLD_INV_CKRFPT : 1;
  unsigned __int32 BITFLD_RFPT_RATE : 1;
  unsigned __int32 _anon_0 : 1;
};

/* 690 */
struct __ADPLL_ANATST_CTRL_REG
{
  unsigned __int32 BITFLD_ANATSTEN : 16;
  unsigned __int32 BITFLD_ANATSTSPARE : 16;
};

/* 691 */
struct __ADPLL_ACC_CTRL_REG
{
  unsigned __int32 BITFLD_CLIP_MOD_TUNE_0_RX : 13;
  unsigned __int32 _anon_0 : 3;
  unsigned __int32 BITFLD_CLIP_MOD_TUNE_0_TX : 13;
  unsigned __int32 _anon_1 : 2;
  unsigned __int32 BITFLD_EN_CMF_AVG : 1;
};

/* 692 */
struct __ADPLL_FREQMEAS_RD_REG
{
  unsigned __int32 BITFLD_FREQDIFF : 23;
  unsigned __int32 BITFLD_PHVSA1 : 1;
  unsigned __int32 BITFLD_PHVSA0 : 1;
  unsigned __int32 BITFLD_TDCBUB : 1;
  unsigned __int32 BITFLD_QUALMONDET : 1;
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_MEASDONE_OUT : 1;
};

/* 693 */
struct __ADPLL_DCO_RD_REG
{
  unsigned __int32 BITFLD_DCOCOARSE : 4;
  unsigned __int32 BITFLD_DCOMEDIUM : 3;
  unsigned __int32 BITFLD_DCOFINE : 6;
  unsigned __int32 BITFLD_DCOMOD : 13;
  unsigned __int32 BITFLD_DCOAMP : 4;
};

/* 694 */
struct __ADPLL_KDCO_RD_REG
{
  unsigned __int32 BITFLD_KDCO_HF_INT : 8;
  unsigned __int32 BITFLD_KDCO_HF_OUT : 8;
  unsigned __int32 BITFLD_KDCOCN : 7;
  unsigned __int32 BITFLD_CAL_KDCOCAL : 1;
};

/* 695 */
struct __ADPLL_KDTC_RD_REG
{
  unsigned __int32 BITFLD_KDTC_OUT : 9;
  unsigned __int32 BITFLD_KDTCCN : 7;
  unsigned __int32 BITFLD_KDTC_ALPHA_COMP : 9;
  unsigned __int32 BITFLD_CAL_KDTCCAL : 1;
};

/* 696 */
struct __ADPLL_TUNESTATE_RD_REG
{
  unsigned __int32 BITFLD_TUNE_STATE : 4;
  unsigned __int32 BITFLD_TMRVAL : 10;
};

/* 697 */
struct __ADPLL_PLLFCWDT_RD_REG
{
  unsigned __int32 BITFLD_PLLFCWDT : 23;
};

/* 698 */
struct __ADPLL_ANATST_RD_REG
{
  unsigned __int32 BITFLD_ANATSTSPARE_IN : 16;
};

/* 699 */
struct __PATCH_VALID_REG
{
  unsigned __int32 BITFLD_PATCH_VALID : 22;
};

/* 700 */
struct __PATCH_ADDR0_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 701 */
struct __PATCH_ADDR1_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 702 */
struct __PATCH_ADDR2_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 703 */
struct __PATCH_ADDR3_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 704 */
struct __PATCH_ADDR4_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 705 */
struct __PATCH_ADDR5_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 706 */
struct __PATCH_ADDR6_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 707 */
struct __PATCH_ADDR7_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 708 */
struct __PATCH_ADDR8_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 709 */
struct __PATCH_ADDR9_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 710 */
struct __PATCH_ADDR10_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 711 */
struct __PATCH_ADDR11_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 712 */
struct __PATCH_ADDR12_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 713 */
struct __PATCH_ADDR13_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 714 */
struct __PATCH_ADDR14_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 715 */
struct __PATCH_ADDR15_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 716 */
struct __PATCH_ADDR16_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 717 */
struct __PATCH_ADDR17_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 718 */
struct __PATCH_ADDR18_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 719 */
struct __PATCH_ADDR19_REG
{
  unsigned __int32 _anon_0 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_C : 17;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 720 */
struct __PATCH_ADDR20_REG
{
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_PATCH_ADDR_D : 16;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 721 */
struct __PATCH_DATA20_REG
{
  unsigned __int32 BITFLD_PATCH_DATA : 32;
};

/* 722 */
struct __PATCH_ADDR21_REG
{
  unsigned __int32 _anon_0 : 2;
  unsigned __int32 BITFLD_PATCH_ADDR_D : 16;
  unsigned __int32 _anon_1 : 1;
  unsigned __int32 BITFLD_PATCH_ADDR_19 : 1;
};

/* 723 */
struct __PATCH_DATA21_REG
{
  unsigned __int32 BITFLD_PATCH_DATA : 32;
};

/* 724 */
struct __CLK_XTAL32K_REG
{
  unsigned __int16 BITFLD_XTAL32K_ENABLE : 1;
  unsigned __int16 BITFLD_XTAL32K_RBIAS : 2;
  unsigned __int16 BITFLD_XTAL32K_CUR : 4;
  unsigned __int16 BITFLD_XTAL32K_DISABLE_AMPREG : 1;
  unsigned __int16 BITFLD_XTAL32K_XTAL1_BIAS_DISABLE : 1;
};

/* 725 */
struct __ANA_STATUS_REG
{
  unsigned __int16 BITFLD_LDO_CORE_OK : 1;
  unsigned __int16 BITFLD_LDO_LOW_OK : 1;
  unsigned __int16 BITFLD_DCDC_OK : 1;
  unsigned __int16 BITFLD_COMP_VBAT_HIGH_OK : 1;
  unsigned __int16 BITFLD_COMP_VBAT_HIGH_NOK : 1;
  unsigned __int16 BITFLD_BANDGAP_OK : 1;
  unsigned __int16 BITFLD_POR_VBAT_LOW : 1;
  unsigned __int16 BITFLD_POR_VBAT_HIGH : 1;
  unsigned __int16 BITFLD_BOOST_SELECTED : 1;
  unsigned __int16 BITFLD_LDO_XTAL_OK : 1;
  unsigned __int16 BITFLD_LDO_GPADC_OK : 1;
  unsigned __int16 BITFLD_FORCE_RUNNING : 1;
  unsigned __int16 BITFLD_CLKLESS_WAKEUP_STAT : 1;
};

/* 726 */
struct __XTALRDY_STAT_REG
{
  unsigned __int16 BITFLD_XTALRDY_STAT : 8;
};

/* 727 */
struct __XTAL32M_CTRL0_REG
{
  unsigned __int16 BITFLD_DCBLOCK_ENABLE : 1;
  unsigned __int16 BITFLD_CORE_AMPL_REG_NULLBIAS : 1;
  unsigned __int16 BITFLD_CORE_CUR_SET : 3;
  unsigned __int16 BITFLD_CORE_AMPL_TRIM : 3;
  unsigned __int16 BITFLD_XTAL32M_SPARE : 2;
};

/* 728 */
struct __POWER_LEVEL_REG
{
  unsigned __int16 BITFLD_LDO_CORE_LEVEL : 1;
  unsigned __int16 BITFLD_LDO_LOW_TRIM : 3;
  unsigned __int16 BITFLD_LDO_XTAL_TRIM : 3;
  unsigned __int16 BITFLD_LDO_CORE_RET_CUR_TRIM : 2;
  unsigned __int16 BITFLD_DCDC_LEVEL : 2;
  unsigned __int16 BITFLD_DCDC_TRIM : 3;
};

/* 729 */
struct __DCDC_TEST1_REG
{
  unsigned __int16 BITFLD_DCDC_FORCE_IDLE : 1;
  unsigned __int16 BITFLD_DCDC_FORCE_TRIG : 1;
  unsigned __int16 BITFLD_DCDC_SW_TST : 2;
  unsigned __int16 BITFLD_DCDC_FORCE_COMP_CLK : 1;
  unsigned __int16 BITFLD_DCDC_FORCE_COMP_TRIM : 1;
  unsigned __int16 BITFLD_DCDC_FORCE_ILIM : 1;
  unsigned __int16 BITFLD_DCDC_COMP_CLK_VAL : 1;
  unsigned __int16 BITFLD_DCDC_ILIM_VAL : 4;
  unsigned __int16 BITFLD_DCDC_DIG_TST_SEL : 3;
};

/* 730 */
struct __DCDC_TEST2_REG
{
  unsigned __int16 BITFLD_DCDC_COMP_TRIM_VAL : 6;
};

/* 731 */
struct __DCDC_STATUS1_REG
{
  unsigned __int16 BITFLD_DCDC_VDCDC_OK : 1;
  unsigned __int16 BITFLD_DCDC_ENABLED : 1;
  unsigned __int16 BITFLD_DCDC_STARTUP_COMPLETE : 1;
  unsigned __int16 BITFLD_DCDC_BOOST_MODE : 1;
  unsigned __int16 BITFLD_DCDC_ILIM : 4;
  unsigned __int16 BITFLD_DCDC_VOUT_OK : 1;
  unsigned __int16 BITFLD_DCDC_VOUT_NOK : 1;
  unsigned __int16 BITFLD_DCDC_SW_STATE : 2;
  unsigned __int16 BITFLD_DCDC_FSM_STATE : 4;
};

/* 732 */
struct __DCDC_STATUS2_REG
{
  unsigned __int16 BITFLD_DCDC_COMP_N_CONT : 1;
  unsigned __int16 BITFLD_DCDC_COMP_N_DYN_N : 1;
  unsigned __int16 BITFLD_DCDC_COMP_N_DYN_P : 1;
  unsigned __int16 BITFLD_DCDC_COMP_P_CONT : 1;
  unsigned __int16 BITFLD_DCDC_COMP_P_DYN_N : 1;
  unsigned __int16 BITFLD_DCDC_COMP_P_DYN_P : 1;
  unsigned __int16 BITFLD_DCDC_TIMEOUT_NSW : 1;
  unsigned __int16 BITFLD_DCDC_TIMEOUT_PSW : 1;
  unsigned __int16 BITFLD_DCDC_COMP_TRIM : 6;
};

/* 733 */
struct __POWER_AON_CTRL_REG
{
  unsigned __int16 BITFLD_VBAT_HL_CONNECT_RES_CTRL : 2;
  unsigned __int16 BITFLD_POR_VBAT_LOW_RST_MASK : 1;
  unsigned __int16 BITFLD_POR_VBAT_HIGH_RST_MASK : 1;
  unsigned __int16 BITFLD_RC32K_HIGH_SPEED_FORCE : 1;
  unsigned __int16 BITFLD_RC32K_LOW_SPEED_FORCE : 1;
  unsigned __int16 BITFLD_CHARGE_VBAT_DISABLE : 1;
  unsigned __int16 BITFLD_BOOST_MODE_FORCE : 2;
  unsigned __int16 BITFLD_CMP_VCONT_SLP_DISABLE : 1;
  unsigned __int16 BITFLD_LDO_RET_TRIM : 4;
  unsigned __int16 BITFLD_FORCE_RUNNING_COMP_DIS : 1;
};

/* 734 */
struct __GP_DATA_REG
{
  unsigned __int16 BITFLD_SW_GP_DATA : 4;
  unsigned __int16 BITFLD_DISABLE_CLAMP_OVERRULE : 1;
  unsigned __int16 BITFLD_FORCE_RCX_VREF : 1;
  unsigned __int16 BITFLD_FORCE_RCX_VDD : 1;
  unsigned __int16 BITFLD_P03_P04_FILT_DIS : 1;
};

/* 735 */
struct __TEST_VDD_REG
{
  unsigned __int16 BITFLD_TEST_VDD : 1;
  unsigned __int16 BITFLD_LDOS_DISABLE : 1;
};

/* 736 */
struct __GP_ADC_CTRL_REG
{
  unsigned __int16 BITFLD_GP_ADC_EN : 1;
  unsigned __int16 BITFLD_GP_ADC_START : 1;
  unsigned __int16 BITFLD_GP_ADC_CONT : 1;
  unsigned __int16 BITFLD_GP_ADC_DMA_EN : 1;
  unsigned __int16 BITFLD_GP_ADC_INT : 1;
  unsigned __int16 BITFLD_GP_ADC_MINT : 1;
  unsigned __int16 BITFLD_GP_ADC_SE : 1;
  unsigned __int16 BITFLD_GP_ADC_MUTE : 1;
  unsigned __int16 BITFLD_GP_ADC_SIGN : 1;
  unsigned __int16 BITFLD_GP_ADC_CHOP : 1;
  unsigned __int16 BITFLD_GP_ADC_LDO_HOLD : 1;
  unsigned __int16 BITFLD_GP_ADC_OFFS_SH_GAIN_SEL : 1;
  unsigned __int16 BITFLD_DIE_TEMP_EN : 1;
};

/* 737 */
struct __GP_ADC_SEL_REG
{
  unsigned __int16 BITFLD_GP_ADC_SEL_N : 3;
  unsigned __int16 BITFLD_GP_ADC_SEL_N_TST : 1;
  unsigned __int16 BITFLD_GP_ADC_SEL_P : 3;
  unsigned __int16 BITFLD_GP_ADC_SEL_P_TST : 1;
};

/* 738 */
struct __SCAN_OBSERVE_REG
{
  unsigned __int16 BITFLD_SCAN_FEEDBACK_MUX : 16;
};

/* 739 */
struct __TEST_CTRL_REG
{
  unsigned __int16 BITFLD_SHOW_CLOCKS : 1;
  unsigned __int16 BITFLD_SHOW_POWER : 1;
  unsigned __int16 BITFLD_SHOW_DCDC : 1;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 BITFLD_XTAL32M_CAP_TEST_EN : 1;
  unsigned __int16 BITFLD_LDO_CORE_CAP_BYPASS : 1;
  unsigned __int16 BITFLD_LDO_CORE_DUMMY_LOAD_ENABLE : 1;
  unsigned __int16 _anon_1 : 2;
  unsigned __int16 BITFLD_CP_CAP_BIAS_TRIM : 2;
  unsigned __int16 BITFLD_ADPLL_SCAN_TEST_EN : 1;
  unsigned __int16 BITFLD_ADPLL_SCAN_COMP_EN : 1;
};

/* 740 */
struct __TEST_CTRL2_REG
{
  unsigned __int16 BITFLD_ANA_TEST_OUT_SEL : 10;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 BITFLD_ANA_TEST_OUT_TO_PIN : 1;
  unsigned __int16 BITFLD_ANA_TEST_OUT_PARAM : 4;
};

/* 741 */
struct __TEST_CTRL3_REG
{
  unsigned __int16 BITFLD_RF_TEST_OUT_SEL : 6;
  unsigned __int16 BITFLD_ENABLE_RFPT : 1;
  unsigned __int16 BITFLD_RF_TEST_OUT_PARAM : 6;
  unsigned __int16 BITFLD_RF_TEST_OUT_TO_PIN : 1;
};

/* 742 */
struct __TEST_CTRL4_REG
{
  unsigned __int16 BITFLD_RF_TEST_IN_SEL : 4;
  unsigned __int16 _anon_0 : 4;
  unsigned __int16 BITFLD_RF_TEST_IN_PARAM : 5;
  unsigned __int16 BITFLD_RF_TEST_IN_TO_PIN : 1;
};

/* 743 */
struct __XTAL32M_TESTCTRL0_REG
{
  unsigned __int16 BITFLD_SPIKE_FLT_DISABLE : 1;
  unsigned __int16 BITFLD_OSC_TRIM_OPEN_DISABLE : 1;
  unsigned __int16 BITFLD_DIFFBUF_BYPASS : 1;
  unsigned __int16 BITFLD_DCBLOCK_LV_MODE : 1;
  unsigned __int16 BITFLD_CORE_XTAL_DISCHARGE : 1;
  unsigned __int16 BITFLD_CORE_MAX_CURRENT : 1;
  unsigned __int16 BITFLD_CORE_I2V_TO_TESTBUS_10X : 1;
  unsigned __int16 BITFLD_CORE_I2V_TO_TESTBUS : 1;
  unsigned __int16 BITFLD_CORE_HOLD_AMP_REG_OVERRIDE : 2;
  unsigned __int16 BITFLD_CORE_GM_CURRENT : 1;
  unsigned __int16 BITFLD_CORE_FREQ_TRIM_SW2_AMP : 3;
  unsigned __int16 BITFLD_BIAS_SAH_HOLD_OVERRIDE : 2;
};

/* 744 */
struct __XTAL32M_TESTCTRL1_REG
{
  unsigned __int16 BITFLD_DISABLE_TM_CLK : 1;
  unsigned __int16 BITFLD_LDO_VREF_HOLD_OVERRIDE : 1;
  unsigned __int16 BITFLD_VARICAP_TEST_ENABLE : 1;
  unsigned __int16 BITFLD_VARICAP_TEST_SEL_XTAL : 1;
  unsigned __int16 BITFLD_PROG_VREF_SEL : 1;
  unsigned __int16 BITFLD_RFCLK_ADPLL_TO_GPIO : 1;
  unsigned __int16 BITFLD_RFCLK_ADC_TO_GPIO : 1;
  unsigned __int16 BITFLD_RFCLK_SEL_ADPLL_ADC_TO_GPIO : 1;
  unsigned __int16 BITFLD_OSC_TRIM_CAP_BIAS : 1;
};

/* 745 */
struct __BIST_CTRL_REG
{
  unsigned __int16 BITFLD_RAM_BIST_CONFIG : 2;
  unsigned __int16 BITFLD_ROMBIST_ENABLE : 1;
  unsigned __int16 BITFLD_SYSRAM12_BIST_ENABLE : 1;
  unsigned __int16 _anon_0 : 1;
  unsigned __int16 BITFLD_ROM_BIST_BUSY : 1;
  unsigned __int16 _anon_1 : 1;
  unsigned __int16 BITFLD_SYSRAM3_BIST_FAIL : 1;
  unsigned __int16 BITFLD_SYSRAM3_BIST_BUSY : 1;
  unsigned __int16 _anon_2 : 1;
  unsigned __int16 BITFLD_SYSRAM12_BIST_FAIL : 1;
  unsigned __int16 BITFLD_SYSRAM12_BIST_BUSY : 1;
  unsigned __int16 BITFLD_RAM_BIST_PATTERN : 2;
  unsigned __int16 BITFLD_SYSRAM3_BIST_ENABLE : 1;
};

/* 746 */
struct __ROMBIST_RESULTL_REG
{
  unsigned __int16 BITFLD_ROMBIST_RESULTL : 16;
};

/* 747 */
struct __ROMBIST_RESULTH_REG
{
  unsigned __int16 BITFLD_ROMBIST_RESULTH : 16;
};

/* 748 */
struct __MEM_CTRL_REG
{
  unsigned __int16 BITFLD_ROM_MARGIN_CTRL : 4;
  unsigned __int16 BITFLD_ROM_MARGIN_EN : 1;
  unsigned __int16 BITFLD_RAM_DST : 1;
  unsigned __int16 BITFLD_RAM_MARGIN : 2;
  unsigned __int16 BITFLD_ARB1_AHB_WR_BUFF : 1;
  unsigned __int16 BITFLD_ARB1_AHB2_WR_BUFF : 1;
  unsigned __int16 BITFLD_ARB2_AHB_WR_BUFF : 1;
  unsigned __int16 BITFLD_ARB2_AHB2_WR_BUFF : 1;
};

/* 749 */
struct __RFMON_CTRL_REG
{
  unsigned __int16 BITFLD_RFMON_PACK_EN : 1;
  unsigned __int16 BITFLD_RFMON_CIRC_EN : 1;
};

/* 750 */
struct __RFMON_ADDR_REG
{
  unsigned __int16 _anon_0 : 2;
  unsigned __int16 BITFLD_RFMON_ADDR : 14;
};

/* 751 */
struct __RFMON_LEN_REG
{
  unsigned __int16 BITFLD_RFMON_LEN : 14;
};

/* 752 */
struct __RFMON_STAT_REG
{
  unsigned __int16 BITFLD_RFMON_ACTIVE : 1;
  unsigned __int16 BITFLD_RFMON_OFLOW_STK : 1;
};

/* 753 */
struct __RFMON_CRV_ADDR_REG
{
  unsigned __int16 _anon_0 : 2;
  unsigned __int16 BITFLD_RFMON_CRV_ADDR : 14;
};

/* 754 */
struct __RFMON_CRV_LEN_REG
{
  unsigned __int16 BITFLD_RFMON_CRV_LEN : 14;
};

/* 755 */
struct __CLK_RTCDIV_REG
{
  unsigned __int32 BITFLD_RTC_DIV_FRAC : 10;
  unsigned __int32 BITFLD_RTC_DIV_INT : 9;
  unsigned __int32 BITFLD_RTC_DIV_DENOM : 1;
  unsigned __int32 BITFLD_RTC_DIV_ENABLE : 1;
  unsigned __int32 BITFLD_RTC_RESET_REQ : 1;
};

/* 756 */
struct hci_change_uart_pins_action_dialog_cmd
{
  uint8_t tx_port;
  uint8_t tx_pin;
  uint8_t rx_port;
  uint8_t rx_pin;
};

/* 757 */
struct hci_change_uart_pins_action_dialog_cmd_cmp_evt
{
  uint16_t status;
};

/* 758 */
struct hci_register_rw_dialog_cmd
{
  uint8_t operation;
  uint32_t addr;
  uint32_t data;
};

/* 759 */
struct hci_register_rw_dialog_cmd_cmp_evt
{
  uint8_t operation;
  uint8_t reserved;
  uint32_t data;
};

/* 760 */
enum $466636C3164ED2AA712617FD837800E9 : __int8
{
  CMD__REGISTER_RW_OP_READ_REG32 = 0x0,
  CMD__REGISTER_RW_OP_WRITE_REG32 = 0x1,
  CMD__REGISTER_RW_OP_READ_REG16 = 0x2,
  CMD__REGISTER_RW_OP_WRITE_REG16 = 0x3,
};

/* 761 */
struct hci_tx_start_continue_test_dialog_cmd
{
  uint8_t frequency;
  uint8_t payload_type;
};

/* 762 */
struct hci_otp_rw_dialog_cmd
{
  uint8_t operation;
  uint8_t data[6];
};

/* 763 */
struct hci_otp_rw_dialog_cmd_cmp_evt
{
  uint8_t operation;
  uint8_t data[6];
};

/* 764 */
enum $B80D95A80997F9506D6F7AD09FCD7140 : __int8
{
  CMD__OTP_OP_RD_XTRIM = 0x0,
  CMD__OTP_OP_WR_XTRIM = 0x1,
  CMD__OTP_OP_RD_BDADDR = 0x2,
  CMD__OTP_OP_WR_BDADDR = 0x3,
  CMD__OTP_OP_RE_XTRIM = 0x4,
  CMD__OTP_OP_WE_XTRIM = 0x5,
};

/* 765 */
struct hci_xtal_trim_dialog_cmd
{
  uint8_t operation;
  uint8_t trim_LSB;
  uint8_t trim_MSB;
};

/* 766 */
struct hci_xtal_trim_dialog_cmd_cmp_evt
{
  uint16_t trim_value;
};

/* 767 */
enum $D577D9937A394EBE5F6C00D7EE4E620B : __int8
{
  CMD__XTRIM_OP_RD = 0x0,
  CMD__XTRIM_OP_WR = 0x1,
  CMD__XTRIM_OP_EN = 0x2,
  CMD__XTRIM_OP_INC = 0x3,
  CMD__XTRIM_OP_DEC = 0x4,
  CMD__XTRIM_OP_DIS = 0x5,
  CMD__XTRIM_OP_CALTEST = 0x6,
  CMD__XTRIM_OP_CAL = 0x7,
};

/* 768 */
struct hci_start_prod_rx_dialog_cmd
{
  uint8_t frequency;
};

/* 769 */
struct hci_end_prod_rx_dialog_cmd_cmp_evt
{
  uint16_t rp;
  uint16_t rp_SYNC_error;
  uint16_t rp_CRC_error;
  uint16_t RSSI;
};

/* 770 */
struct hci_unmodulated_on_dialog_cmd
{
  uint8_t operation;
  uint8_t frequency;
};

/* 771 */
enum $2008E1676ACC4C579779B87F1EB090C9 : __int8
{
  UNMODULATED_CMD_MODE_OFF = 0x4F,
  UNMODULATED_CMD_MODE_TX = 0x54,
  UNMODULATED_CMD_MODE_RX = 0x52,
};

/* 772 */
struct hci_tx_test_dialog_cmd
{
  uint8_t frequency;
  uint8_t data_length;
  uint8_t payload_type;
  uint8_t NpacketsLSB;
  uint8_t NpacketsMSB;
};

/* 773 */
struct hci_sleep_test_dialog_cmd
{
  uint8_t sleep_mode;
  uint8_t mins_to_sleep;
  uint8_t seconds_to_sleep;
};

/* 774 */
enum $B2D324AACB570A0167DEB3BB0E7735A9 : __int8
{
  CMD__SLEEP_MODE_ACTIVE = 0x0,
  CMD__SLEEP_MODE_EXTENDED = 0x1,
  CMD__SLEEP_MODE_DEEP = 0x2,
};

/* 775 */
struct hci_rdtest_dialog_cmd
{
  uint8_t operation;
  uint16_t data;
};

/* 776 */
enum $F0B99D9267E12F8A7553B01C2ED1CF76 : __int8
{
  RDTESTER_INIT = 0x0,
  RDTESTER_UART_CONNECT = 0x1,
  RDTESTER_UART_LOOPBACK = 0x2,
  RDTESTER_VBAT_CNTRL = 0x3,
  RDTESTER_VPP_CNTRL = 0x4,
  RDTESTER_RST_PULSE = 0x5,
  RDTESTER_UART_PULSE = 0x6,
  RDTESTER_XTAL_PULSE = 0x7,
  RDTESTER_PULSE_WIDTH = 0x8,
};

/* 777 */
struct __attribute__((aligned(2))) hci_otp_read_dialog_cmd
{
  uint16_t address;
  uint8_t num_of_words;
};

/* 778 */
struct hci_otp_read_dialog_cmd_cmp_evt
{
  uint8_t status;
  uint8_t num_of_words;
  uint8_t wordbyte[240];
};

/* 779 */
struct __attribute__((aligned(2))) hci_otp_write_dialog_cmd
{
  uint16_t start_addr;
  uint8_t num_of_words;
  uint8_t wordbyte[240];
};

/* 780 */
struct hci_otp_write_dialog_cmd_cmp_evt
{
  uint8_t status;
  uint8_t num_of_words;
};

/* 781 */
struct hci_sensor_test_dialog_cmd
{
  uint8_t interface;
  uint8_t rw;
  uint8_t spi_clk_or_i2c_port;
  uint8_t spi_clk_or_i2c_pin;
  uint8_t spi_di_or_i2c_sda_port;
  uint8_t spi_di_or_i2c_sda_pin;
  uint8_t spi_do_port;
  uint8_t spi_do_pin;
  uint8_t spi_cs_port;
  uint8_t spi_cs_pin;
  uint8_t register_address;
  uint8_t register_data_write;
  uint8_t i2c_slave_address;
  uint8_t int_gpio_check;
  uint8_t int_port;
  uint8_t int_pin;
  uint8_t pins_voltage_level;
};

/* 782 */
struct hci_sensor_test_dialog_cmd_cmp_evt
{
  uint16_t data;
};

/* 783 */
struct hci_gpio_set_dialog_cmd
{
  uint8_t gpio_pad;
  uint8_t mode;
  uint8_t gpio_lvl;
  uint8_t val;
  uint8_t pwm;
  uint8_t duty_cycle;
};

/* 784 */
struct hci_gpio_set_dialog_cmd_cmp_evt
{
  uint8_t error;
};

/* 785 */
struct hci_gpio_read_dialog_cmd
{
  uint8_t gpio_pad;
};

/* 786 */
struct hci_gpio_read_dialog_cmd_cmp_evt
{
  uint8_t data;
};

/* 787 */
struct hci_uart_loop_dialog_cmd
{
  uint8_t data[100];
};

/* 788 */
struct hci_uart_loop_dialog_cmd_cmp_evt
{
  uint8_t data[100];
};

/* 789 */
struct hci_uart_baud_dialog_cmd
{
  uint8_t data;
};

/* 790 */
struct hci_uart_baud_dialog_cmd_cmp_evt
{
  uint8_t error;
};

/* 791 */
struct hci_gpio_wd_dialog_cmd
{
  uint8_t gpio_pad;
  uint8_t gpio_lvl;
};

/* 792 */
struct hci_gpio_wd_dialog_cmd_cmp_evt
{
  uint8_t error;
};

/* 793 */
struct hci_ext32khz_test_dialog_cmd_cmp_evt
{
  uint8_t error;
};

/* 794 */
struct hci_sleep_clk_sel_dialog_cmd
{
  uint8_t sleep_clk;
};

/* 795 */
struct hci_sleep_clk_sel_dialog_cmd_cmp_evt
{
  uint8_t error;
};

/* 796 */
struct hci_platform_reset_cmd_cmp_evt
{
  uint8_t error;
};

/* 797 */
struct hci_set_tx_power_dialog_cmd
{
  uint8_t data;
};

/* 798 */
struct hci_set_tx_power_dialog_cmd_cmp_evt
{
  uint8_t error;
};

/* 799 */
struct hci_configure_test_mode_dialog_cmd
{
  uint8_t data;
};

/* 800 */
struct hci_configure_test_mode_dialog_cmd_cmp_evt
{
  uint8_t error;
};

/* 801 */
struct hci_set_reset_mode_dialog_cmd
{
  uint8_t reset_mode;
};

/* 802 */
struct hci_set_reset_mode_dialog_cmd_cmp_evt
{
  uint8_t error;
};

/* 803 */
enum $63ACFEF8C523619207440F8E6DB55571 : __int16
{
  HCI_CUSTOM_ACTION_CMD_OPCODE = 0xFE00,
  HCI_SLEEP_TEST_CMD_OPCODE = 0xFE01,
  HCI_XTAL_TRIM_CMD_OPCODE = 0xFE02,
  HCI_OTP_RW_CMD_OPCODE = 0xFE03,
  HCI_OTP_READ_CMD_OPCODE = 0xFE04,
  HCI_OTP_WRITE_CMD_OPCODE = 0xFE05,
  HCI_REGISTER_RW_CMD_OPCODE = 0xFE06,
  HCI_AUDIO_TEST_CMD_OPCODE = 0xFE07,
  HCI_FIRMWARE_VERSION_GET_CMD_OPCODE = 0xFE08,
  HCI_CHANGE_UART_PINS_ACTION_CMD_OPCODE = 0xFE09,
  HCI_RDTESTER_CMD_OPCODE = 0xFE0A,
  HCI_TX_TEST_CMD_OPCODE = 0xFE0B,
  HCI_START_PROD_RX_TEST_CMD_OPCODE = 0xFE0C,
  HCI_END_PROD_RX_TEST_CMD_OPCODE = 0xFE0D,
  HCI_UNMODULATED_ON_CMD_OPCODE = 0xFE0E,
  HCI_TX_START_CONTINUE_TEST_CMD_OPCODE = 0xFE0F,
  HCI_TX_END_CONTINUE_TEST_CMD_OPCODE = 0xFE10,
  HCI_SENSOR_TEST_CMD_OPCODE = 0xFE11,
  HCI_GPIO_SET_CMD_OPCODE = 0xFE12,
  HCI_GPIO_READ_CMD_OPCODE = 0xFE13,
  HCI_UART_LOOP_CMD_OPCODE = 0xFE14,
  HCI_UART_BAUD_CMD_OPCODE = 0xFE15,
  HCI_EXT32KHz_TEST_CMD_OPCODE = 0xFE16,
  HCI_GPIO_WD_CMD_OPCODE = 0xFE17,
  HCI_SLEEP_CLK_SEL_CMD_OPCODE = 0xFE18,
  HCI_RANGE_EXT_EN_CMD_OPCODE = 0xFE19,
  HCI_ADC_VBAT_CMD_OPCODE = 0xFE1A,
  HCI_SET_TX_POWER_CMD_OPCODE = 0xFE1B,
  HCI_CONFIGURE_TEST_MODE_CMD_OPCODE = 0xFE1C,
  HCI_PLATFORM_RESET_CMD_OPCODE = 0xFE1D,
  HCI_RESET_MODE_CMD_OPCODE = 0xFE1E,
  HCI_VS_LAST_DIALOG_CMD_OPCODE = 0xFE1F,
};

/* 804 */
struct hci_adc_vbat_dialog_cmd
{
  uint8_t vbat_type;
};

/* 805 */
struct hci_adc_vbat_dialog_cmd_cmp_evt
{
  uint16_t vbat_lvl;
};

/* 806 */
struct hci_custom_action_dialog_cmd
{
  uint8_t inputData;
};

/* 807 */
struct hci_custom_action_dialog_cmd_cmp_evt
{
  uint32_t returnData;
};

/* 808 */
struct hci_firmware_version_get_dialog_cmd_cmp_evt
{
  uint8_t ble_ver_len;
  uint8_t app_ver_len;
  unsigned __int8 ble_ver[32];
  unsigned __int8 app_ver[32];
};

/* 809 */
enum $0EF2724D3535E567100C7FF35643E526 : __int8
{
  LK_CNTL_OGF = 0x1,
  LK_POL_OGF = 0x2,
  CNTLR_BB_OGF = 0x3,
  INFO_PAR_OGF = 0x4,
  STAT_PAR_OGF = 0x5,
  TEST_OGF = 0x6,
  LE_CNTLR_OGF = 0x8,
  VS_OGF = 0x3F,
  MAX_OGF = 0x40,
};

/* 810 */
enum hci_evt_mask_page : __int8
{
  HCI_PAGE_0 = 0x0,
  HCI_PAGE_1 = 0x1,
  HCI_PAGE_2 = 0x2,
  HCI_PAGE_DFT = 0x3,
};

/* 811 */
struct __attribute__((aligned(2))) hci_acl_data_rx
{
  uint16_t conhdl;
  uint8_t pb_bc_flag;
  uint16_t length;
  uint8_t rx_hdl;
};

/* 812 */
struct __attribute__((aligned(2))) hci_acl_data_tx
{
  uint16_t conhdl;
  uint8_t pb_bc_flag;
  uint16_t length;
  co_buf_tx_node *desc;
  uint8_t *buffer;
  uint16_t index;
  uint8_t desc_cnt;
};

/* 813 */
struct hci_basic_conhdl_cmd
{
  uint16_t conhdl;
};

/* 814 */
struct hci_basic_bd_addr_cmd
{
  bd_addr bd_addr;
};

/* 815 */
struct hci_accept_con_req_cmd
{
  bd_addr bd_addr;
  uint8_t role;
};

/* 816 */
struct hci_accept_sync_con_req_cmd
{
  bd_addr bd_addr;
  uint32_t tx_bw;
  uint32_t rx_bw;
  uint16_t max_lat;
  uint16_t vx_set;
  uint8_t retx_eff;
  uint16_t pkt_type;
};

/* 817 */
struct __attribute__((aligned(2))) hci_enh_accept_sync_con_cmd
{
  bd_addr bd_addr;
  uint32_t tx_bw;
  uint32_t rx_bw;
  uint8_t tx_cod_fmt[5];
  uint8_t rx_cod_fmt[5];
  uint16_t tx_cod_fr_sz;
  uint16_t rx_cod_fr_sz;
  uint32_t in_bw;
  uint32_t out_bw;
  uint8_t in_cod_fmt[5];
  uint8_t out_cod_fmt[5];
  uint16_t in_cod_data_sz;
  uint16_t out_cod_data_sz;
  uint8_t in_data_fmt;
  uint8_t out_data_fmt;
  uint8_t in_msb_pos;
  uint8_t out_msb_pos;
  uint8_t in_data_path;
  uint8_t out_data_path;
  uint8_t in_tr_unit_sz;
  uint8_t out_tr_unit_sz;
  uint16_t max_lat;
  uint16_t packet_type;
  uint8_t retx_eff;
};

/* 818 */
struct hci_reject_con_req_cmd
{
  bd_addr bd_addr;
  uint8_t reason;
};

/* 819 */
struct hci_reject_sync_con_req_cmd
{
  bd_addr bd_addr;
  uint8_t reason;
};

/* 820 */
struct hci_lk_req_reply_cmd
{
  bd_addr bd_addr;
  ltk key;
};

/* 821 */
struct hci_pin_code_req_reply_cmd
{
  bd_addr bd_addr;
  uint8_t pin_len;
  pin_code pin;
};

/* 822 */
struct hci_switch_role_cmd
{
  bd_addr bd_addr;
  uint8_t role;
};

/* 823 */
struct hci_flow_spec_cmd
{
  uint16_t conhdl;
  uint8_t flags;
  uint8_t flow_dir;
  uint8_t serv_type;
  uint32_t tk_rate;
  uint32_t tk_buf_sz;
  uint32_t pk_bw;
  uint32_t acc_lat;
};

/* 824 */
struct __attribute__((aligned(2))) hci_enh_flush_cmd
{
  uint16_t conhdl;
  uint8_t pkt_type;
};

/* 825 */
struct hci_rd_auto_flush_to_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint16_t flush_to;
};

/* 826 */
struct hci_wr_auto_flush_to_cmd
{
  uint16_t conhdl;
  uint16_t flush_to;
};

/* 827 */
struct hci_chg_con_pkt_type_cmd
{
  uint16_t conhdl;
  uint16_t pkt_type;
};

/* 828 */
struct hci_rd_link_pol_stg_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint16_t lnk_policy;
};

/* 829 */
struct hci_wr_link_pol_stg_cmd
{
  uint16_t conhdl;
  uint16_t lnk_policy;
};

/* 830 */
struct hci_sniff_mode_cmd
{
  uint16_t conhdl;
  uint16_t max_int;
  uint16_t min_int;
  uint16_t attempt;
  uint16_t timeout;
};

/* 831 */
struct hci_sniff_sub_cmd
{
  uint16_t conhdl;
  uint16_t max_lat;
  uint16_t min_rem_to;
  uint16_t min_loc_to;
};

/* 832 */
struct __attribute__((aligned(2))) hci_role_discovery_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t role;
};

/* 833 */
struct hci_rd_fail_contact_cnt_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint16_t fail_cnt;
};

/* 834 */
struct __attribute__((aligned(2))) hci_rd_link_qual_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t quality;
};

/* 835 */
struct __attribute__((aligned(2))) hci_rd_afh_ch_map_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t afh_stat;
  chnl_map afh_map;
};

/* 836 */
struct hci_rd_lmp_hdl_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t lmp_hdl;
  uint32_t rsvd;
};

/* 837 */
struct __attribute__((aligned(2))) hci_rd_rem_ext_feats_cmd
{
  uint16_t conhdl;
  uint8_t pg_nb;
};

/* 838 */
struct __attribute__((aligned(2))) hci_rd_enc_key_size_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t key_sz;
};

/* 839 */
struct __attribute__((aligned(2))) hci_rd_enh_tx_pwr_lvl_cmd
{
  uint16_t conhdl;
  uint8_t type;
};

/* 840 */
struct __attribute__((aligned(2))) hci_rd_enh_tx_pwr_lvl_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t pw_gfsk;
  uint8_t pw_dqpsk;
  uint8_t pw_8dpsk;
};

/* 841 */
struct hci_inq_cmd
{
  lap lap;
  uint8_t inq_len;
  uint8_t nb_rsp;
};

/* 842 */
struct __attribute__((aligned(2))) hci_per_inq_mode_cmd
{
  uint16_t max_per_len;
  uint16_t min_per_len;
  lap lap;
  uint8_t inq_len;
  uint8_t nb_rsp;
};

/* 843 */
struct __attribute__((aligned(2))) hci_create_con_cmd
{
  bd_addr bd_addr;
  uint16_t pkt_type;
  uint8_t page_scan_rep_mode;
  uint8_t rsvd;
  uint16_t clk_off;
  uint8_t switch_en;
};

/* 844 */
struct __attribute__((aligned(2))) hci_disconnect_cmd
{
  uint16_t conhdl;
  uint8_t reason;
};

/* 845 */
struct hci_master_lk_cmd
{
  uint8_t key_flag;
};

/* 846 */
struct __attribute__((aligned(2))) hci_set_con_enc_cmd
{
  uint16_t conhdl;
  uint8_t enc_en;
};

/* 847 */
struct hci_rem_name_req_cmd
{
  bd_addr bd_addr;
  uint8_t page_scan_rep_mode;
  uint8_t rsvd;
  uint16_t clk_off;
};

/* 848 */
struct hci_rem_name_req_cmp_evt
{
  uint8_t status;
  bd_addr bd_addr;
  device_name name;
};

/* 849 */
struct hci_setup_sync_con_cmd
{
  uint16_t conhdl;
  uint32_t tx_bw;
  uint32_t rx_bw;
  uint16_t max_lat;
  uint16_t vx_set;
  uint8_t retx_eff;
  uint16_t pkt_type;
};

/* 850 */
struct __attribute__((aligned(2))) hci_enh_setup_sync_con_cmd
{
  uint16_t conhdl;
  uint32_t tx_bw;
  uint32_t rx_bw;
  uint8_t tx_cod_fmt[5];
  uint8_t rx_cod_fmt[5];
  uint16_t tx_cod_fr_sz;
  uint16_t rx_cod_fr_sz;
  uint32_t in_bw;
  uint32_t out_bw;
  uint8_t in_cod_fmt[5];
  uint8_t out_cod_fmt[5];
  uint16_t in_cod_data_sz;
  uint16_t out_cod_data_sz;
  uint8_t in_data_fmt;
  uint8_t out_data_fmt;
  uint8_t in_msb_pos;
  uint8_t out_msb_pos;
  uint8_t in_data_path;
  uint8_t out_data_path;
  uint8_t in_tr_unit_sz;
  uint8_t out_tr_unit_sz;
  uint16_t max_lat;
  uint16_t packet_type;
  uint8_t retx_eff;
};

/* 851 */
struct hci_io_cap_req_reply_cmd
{
  bd_addr bd_addr;
  uint8_t io_capa;
  uint8_t oob_data_pres;
  uint8_t auth_req;
};

/* 852 */
struct hci_io_cap_req_neg_reply_cmd
{
  bd_addr bd_addr;
  uint8_t reason;
};

/* 853 */
struct hci_user_passkey_req_reply_cmd
{
  bd_addr bd_addr;
  uint32_t num_val;
};

/* 854 */
struct hci_rem_oob_data_req_reply_cmd
{
  bd_addr bd_addr;
  hash oob_c;
  randomizer oob_r;
};

/* 855 */
struct hci_send_keypress_notif_cmd
{
  bd_addr bd_addr;
  uint8_t notif_type;
};

/* 856 */
struct hci_qos_setup_cmd
{
  uint16_t conhdl;
  uint8_t flags;
  uint8_t serv_type;
  uint32_t tok_rate;
  uint32_t pk_bw;
  uint32_t lat;
  uint32_t del_var;
};

/* 857 */
struct hci_rd_dft_link_pol_stg_cmd_cmp_evt
{
  uint8_t status;
  uint16_t link_pol_stg;
};

/* 858 */
struct hci_wr_dft_link_pol_stg_cmd
{
  uint16_t link_pol_stg;
};

/* 859 */
struct hci_set_evt_mask_cmd
{
  evt_mask event_mask;
};

/* 860 */
struct inq_res_filter_cond_1
{
  devclass class_of_dev;
  devclass class_of_dev_msk;
};

/* 861 */
struct inq_res_filter_cond_2
{
  bd_addr bd_addr;
};

/* 862 */
union hci_inq_filter_cond
{
  uint8_t cond_0_reserved;
  inq_res_filter_cond_1 cond_1;
  inq_res_filter_cond_2 cond_2;
};

/* 863 */
struct inq_res_filter
{
  uint8_t cond_type;
  hci_inq_filter_cond cond;
};

/* 864 */
struct con_set_filter_cond_0
{
  uint8_t auto_accept;
};

/* 865 */
struct con_set_filter_cond_1
{
  devclass class_of_dev;
  devclass class_of_dev_msk;
  uint8_t auto_accept;
};

/* 866 */
struct con_set_filter_cond_2
{
  bd_addr bd_addr;
  uint8_t auto_accept;
};

/* 867 */
union hci_con_filter_cond
{
  con_set_filter_cond_0 cond_0;
  con_set_filter_cond_1 cond_1;
  con_set_filter_cond_2 cond_2;
};

/* 868 */
struct con_set_filter
{
  uint8_t cond_type;
  hci_con_filter_cond cond;
};

/* 869 */
union hci_filter
{
  uint8_t clear_all_filter_reserved;
  inq_res_filter inq_res;
  con_set_filter con_set;
};

/* 870 */
struct hci_set_evt_filter_cmd
{
  uint8_t filter_type;
  hci_filter filter;
};

/* 871 */
struct hci_flush_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
};

/* 872 */
struct hci_rd_pin_type_cmd_cmp_evt
{
  uint8_t status;
  uint8_t pin_type;
};

/* 873 */
struct hci_wr_pin_type_cmd
{
  uint8_t pin_type;
};

/* 874 */
struct hci_rd_stored_lk_cmd
{
  bd_addr bd_addr;
  uint8_t rd_all_flag;
};

/* 875 */
struct hci_rd_stored_lk_cmd_cmp_evt
{
  uint8_t status;
  uint16_t num_key_max;
  uint16_t num_key_rd;
};

/* 876 */
struct hci_wr_stored_lk_cmd_cmp_evt
{
  uint8_t status;
  uint8_t num_key_wr;
};

/* 877 */
struct hci_del_stored_lk_cmd
{
  bd_addr bd_addr;
  uint8_t del_all_flag;
};

/* 878 */
struct hci_del_stored_lk_cmd_cmp_evt
{
  uint8_t status;
  uint16_t num_key_del;
};

/* 879 */
struct hci_wr_local_name_cmd
{
  device_name name;
};

/* 880 */
struct hci_rd_local_name_cmd_cmp_evt
{
  uint8_t status;
  uint8_t name[248];
};

/* 881 */
struct hci_rd_con_accept_to_cmd_cmp_evt
{
  uint8_t status;
  uint16_t con_acc_to;
};

/* 882 */
struct hci_wr_con_accept_to_cmd
{
  uint16_t con_acc_to;
};

/* 883 */
struct hci_rd_page_to_cmd_cmp_evt
{
  uint8_t status;
  uint16_t page_to;
};

/* 884 */
struct hci_wr_page_to_cmd
{
  uint16_t page_to;
};

/* 885 */
struct hci_rd_scan_en_cmd_cmp_evt
{
  uint8_t status;
  uint8_t scan_en;
};

/* 886 */
struct hci_wr_scan_en_cmd
{
  uint8_t scan_en;
};

/* 887 */
struct hci_rd_page_scan_act_cmd_cmp_evt
{
  uint8_t status;
  uint16_t page_scan_intv;
  uint16_t page_scan_win;
};

/* 888 */
struct hci_wr_page_scan_act_cmd
{
  uint16_t page_scan_intv;
  uint16_t page_scan_win;
};

/* 889 */
struct hci_rd_inq_scan_act_cmd_cmp_evt
{
  uint8_t status;
  uint16_t inq_scan_intv;
  uint16_t inq_scan_win;
};

/* 890 */
struct hci_wr_inq_scan_act_cmd
{
  uint16_t inq_scan_intv;
  uint16_t inq_scan_win;
};

/* 891 */
struct hci_rd_auth_en_cmd_cmp_evt
{
  uint8_t status;
  uint8_t auth_en;
};

/* 892 */
struct hci_wr_auth_en_cmd
{
  uint8_t auth_en;
};

/* 893 */
struct hci_rd_class_of_dev_cmd_cmp_evt
{
  uint8_t status;
  devclass class_of_dev;
};

/* 894 */
struct hci_wr_class_of_dev_cmd
{
  devclass class_of_dev;
};

/* 895 */
struct hci_rd_voice_stg_cmd_cmp_evt
{
  uint8_t status;
  uint16_t voice_stg;
};

/* 896 */
struct hci_wr_voice_stg_cmd
{
  uint16_t voice_stg;
};

/* 897 */
struct hci_rd_nb_bdcst_retx_cmd_cmp_evt
{
  uint8_t status;
  uint8_t num_bcst_ret;
};

/* 898 */
struct hci_wr_nb_bdcst_retx_cmd
{
  uint8_t num_bcst_ret;
};

/* 899 */
struct hci_rd_sync_flow_cntl_en_cmd_cmp_evt
{
  uint8_t status;
  uint8_t sync_flow;
};

/* 900 */
struct hci_wr_sync_flow_cntl_en_cmd
{
  uint8_t cntl_en;
};

/* 901 */
struct hci_set_ctrl_to_host_flow_ctrl_cmd
{
  uint8_t flow_cntl;
};

/* 902 */
struct hci_host_buf_size_cmd
{
  uint16_t acl_pkt_len;
  uint8_t sync_pkt_len;
  uint16_t nb_acl_pkts;
  uint16_t nb_sync_pkts;
};

/* 903 */
struct hci_host_nb_cmp_pkts_cmd
{
  uint8_t nb_of_hdl;
  uint16_t con_hdl[3];
  uint16_t nb_comp_pkt[3];
};

/* 904 */
struct hci_rd_link_supv_to_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint16_t lsto_val;
};

/* 905 */
struct hci_wr_link_supv_to_cmd
{
  uint16_t conhdl;
  uint16_t lsto_val;
};

/* 906 */
struct hci_rd_nb_supp_iac_cmd_cmp_evt
{
  uint8_t status;
  uint8_t nb_iac;
};

/* 907 */
struct hci_rd_curr_iac_lap_cmd_cmp_evt
{
  uint8_t status;
  uint8_t nb_curr_iac;
  lap iac_lap;
};

/* 908 */
struct hci_wr_curr_iac_lap_cmd
{
  uint8_t nb_curr_iac;
  lap iac_lap[84];
};

/* 909 */
struct hci_set_afh_host_ch_class_cmd
{
  chnl_map afh_ch;
};

/* 910 */
struct hci_rd_inq_scan_type_cmd_cmp_evt
{
  uint8_t status;
  uint8_t inq_scan_type;
};

/* 911 */
struct hci_wr_inq_scan_type_cmd
{
  uint8_t inq_scan_type;
};

/* 912 */
struct hci_rd_inq_mode_cmd_cmp_evt
{
  uint8_t status;
  uint8_t inq_mode;
};

/* 913 */
struct hci_wr_inq_mode_cmd
{
  uint8_t inq_mode;
};

/* 914 */
struct hci_rd_page_scan_type_cmd_cmp_evt
{
  uint8_t status;
  uint8_t page_scan_type;
};

/* 915 */
struct hci_wr_page_scan_type_cmd
{
  uint8_t page_scan_type;
};

/* 916 */
struct hci_rd_afh_ch_assess_mode_cmd_cmp_evt
{
  uint8_t status;
  uint8_t afh_ch_ass_mode;
};

/* 917 */
struct hci_wr_afh_ch_assess_mode_cmd
{
  uint8_t afh_ch_ass_mode;
};

/* 918 */
struct hci_rd_ext_inq_rsp_cmd_cmp_evt
{
  uint8_t status;
  uint8_t fec_req;
  eir eir;
};

/* 919 */
struct hci_wr_ext_inq_rsp_cmd
{
  uint8_t fec_req;
  eir eir;
};

/* 920 */
struct hci_rd_sp_mode_cmd_cmp_evt
{
  uint8_t status;
  uint8_t sp_mode;
};

/* 921 */
struct hci_wr_sp_mode_cmd
{
  uint8_t sp_mode;
};

/* 922 */
struct hci_rd_loc_oob_data_cmd_cmp_evt
{
  uint8_t status;
  hash oob_c;
  randomizer oob_r;
};

/* 923 */
struct hci_rd_inq_rsp_tx_pwr_lvl_cmd_cmp_evt
{
  uint8_t status;
  uint8_t tx_pwr;
};

/* 924 */
struct hci_wr_inq_tx_pwr_lvl_cmd
{
  int8_t tx_pwr;
};

/* 925 */
struct hci_rd_dft_err_data_rep_cmd_cmp_evt
{
  uint8_t status;
  uint8_t data;
};

/* 926 */
struct hci_wr_dft_err_data_rep_cmd
{
  uint8_t data;
};

/* 927 */
struct hci_rd_le_host_supp_cmd_cmp_evt
{
  uint8_t status;
  uint8_t le_supported_host;
  uint8_t simultaneous_le_host;
};

/* 928 */
struct hci_wr_le_host_supp_cmd
{
  uint8_t le_supported_host;
  uint8_t simultaneous_le_host;
};

/* 929 */
struct hci_rd_auth_payl_to_cmd
{
  uint16_t conhdl;
};

/* 930 */
struct hci_rd_auth_payl_to_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint16_t auth_payl_to;
};

/* 931 */
struct hci_rd_ext_page_to_cmd_cmp_evt
{
  uint8_t status;
  uint16_t ext_page_to;
};

/* 932 */
struct hci_wr_ext_page_to_cmd
{
  uint16_t ext_page_to;
};

/* 933 */
struct hci_rd_ext_inq_len_cmd_cmp_evt
{
  uint8_t status;
  uint16_t ext_inq_len;
};

/* 934 */
struct hci_wr_ext_inq_len_cmd
{
  uint16_t ext_inq_len;
};

/* 935 */
struct hci_rd_local_ver_info_cmd_cmp_evt
{
  uint8_t status;
  uint8_t hci_ver;
  uint16_t hci_rev;
  uint8_t lmp_ver;
  uint16_t manuf_name;
  uint16_t lmp_subver;
};

/* 936 */
struct hci_rd_local_supp_cmds_cmd_cmp_evt
{
  uint8_t status;
  supp_cmds local_cmds;
};

/* 937 */
struct hci_rd_local_supp_feats_cmd_cmp_evt
{
  uint8_t status;
  features feats;
};

/* 938 */
struct hci_rd_local_ext_feats_cmd
{
  uint8_t page_nb;
};

/* 939 */
struct hci_rd_local_ext_feats_cmd_cmp_evt
{
  uint8_t status;
  uint8_t page_nb;
  uint8_t page_nb_max;
  features ext_feats;
};

/* 940 */
struct hci_rd_buff_size_cmd_cmp_evt
{
  uint8_t status;
  uint16_t hc_data_pk_len;
  uint8_t hc_sync_pk_len;
  uint16_t hc_tot_nb_data_pkts;
  uint16_t hc_tot_nb_sync_pkts;
};

/* 941 */
struct hci_rd_bd_addr_cmd_cmp_evt
{
  uint8_t status;
  bd_addr local_addr;
};

/* 942 */
struct hci_rd_local_supp_codecs_cmd_cmp_evt
{
  uint8_t status;
};

/* 943 */
struct __attribute__((aligned(2))) hci_rd_rssi_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t rssi;
};

/* 944 */
struct __attribute__((aligned(2))) hci_rd_clk_cmd
{
  uint16_t conhdl;
  uint8_t clk_type;
};

/* 945 */
struct __attribute__((aligned(4))) hci_rd_clk_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint32_t clk;
  uint16_t clk_acc;
};

/* 946 */
struct hci_rd_loop_back_mode_cmd_cmp_evt
{
  uint8_t status;
  uint8_t lb_mode;
};

/* 947 */
struct hci_wr_loop_back_mode_cmd
{
  uint8_t lb_mode;
};

/* 948 */
struct hci_wr_sp_dbg_mode_cmd
{
  uint8_t sp_mode;
};

/* 949 */
struct hci_le_set_evt_mask_cmd
{
  evt_mask le_mask;
};

/* 950 */
struct hci_le_set_rand_addr_cmd
{
  bd_addr rand_addr;
};

/* 951 */
struct __attribute__((aligned(2))) hci_le_set_adv_param_cmd
{
  uint16_t adv_intv_min;
  uint16_t adv_intv_max;
  uint8_t adv_type;
  uint8_t own_addr_type;
  uint8_t direct_addr_type;
  bd_addr direct_addr;
  uint8_t adv_chnl_map;
  uint8_t adv_filt_policy;
};

/* 952 */
struct hci_le_set_adv_data_cmd
{
  uint8_t adv_data_len;
  adv_data data;
};

/* 953 */
struct hci_le_set_scan_rsp_data_cmd
{
  uint8_t scan_rsp_data_len;
  scan_rsp_data data;
};

/* 954 */
struct hci_le_set_adv_en_cmd
{
  uint8_t adv_en;
};

/* 955 */
struct hci_le_set_scan_param_cmd
{
  uint8_t scan_type;
  uint16_t scan_intv;
  uint16_t scan_window;
  uint8_t own_addr_type;
  uint8_t scan_filt_policy;
};

/* 956 */
struct hci_le_set_scan_en_cmd
{
  uint8_t scan_en;
  uint8_t filter_duplic_en;
};

/* 957 */
struct hci_le_create_con_cmd
{
  uint16_t scan_intv;
  uint16_t scan_window;
  uint8_t init_filt_policy;
  uint8_t peer_addr_type;
  bd_addr peer_addr;
  uint8_t own_addr_type;
  uint16_t con_intv_min;
  uint16_t con_intv_max;
  uint16_t con_latency;
  uint16_t superv_to;
  uint16_t ce_len_min;
  uint16_t ce_len_max;
};

/* 958 */
struct hci_le_add_dev_to_wlst_cmd
{
  uint8_t dev_addr_type;
  bd_addr dev_addr;
};

/* 959 */
struct hci_le_rmv_dev_from_wlst_cmd
{
  uint8_t dev_addr_type;
  bd_addr dev_addr;
};

/* 960 */
struct hci_le_set_host_ch_class_cmd
{
  le_chnl_map chmap;
};

/* 961 */
struct hci_le_rx_test_cmd
{
  uint8_t rx_freq;
};

/* 962 */
struct hci_le_tx_test_cmd
{
  uint8_t tx_freq;
  uint8_t test_data_len;
  uint8_t pk_payload_type;
};

/* 963 */
struct hci_le_enc_cmd
{
  ltk key;
  uint8_t plain_data[16];
};

/* 964 */
struct hci_le_con_update_cmd
{
  uint16_t conhdl;
  uint16_t con_intv_min;
  uint16_t con_intv_max;
  uint16_t con_latency;
  uint16_t superv_to;
  uint16_t ce_len_min;
  uint16_t ce_len_max;
};

/* 965 */
struct hci_le_start_enc_cmd
{
  uint16_t conhdl;
  rand_nb nb;
  uint16_t enc_div;
  ltk ltk;
};

/* 966 */
struct hci_le_ltk_req_reply_cmd
{
  uint16_t conhdl;
  ltk ltk;
};

/* 967 */
struct hci_le_rem_con_param_req_reply_cmd
{
  uint16_t conhdl;
  uint16_t interval_min;
  uint16_t interval_max;
  uint16_t latency;
  uint16_t timeout;
  uint16_t min_ce_len;
  uint16_t max_ce_len;
};

/* 968 */
struct __attribute__((aligned(2))) hci_le_rem_con_param_req_neg_reply_cmd
{
  uint16_t conhdl;
  uint8_t reason;
};

/* 969 */
struct hci_le_set_data_length_cmd
{
  uint16_t conhdl;
  uint16_t tx_octets;
  uint16_t tx_time;
};

/* 970 */
struct hci_le_write_suggested_default_data_length_cmd
{
  uint16_t suggested_tx_octets;
  uint16_t suggested_tx_time;
};

/* 971 */
struct hci_le_add_dev_to_rslv_list_cmd
{
  uint8_t identity_address_type;
  uint8_t identity_address[6];
  uint8_t peer_irk[16];
  uint8_t local_irk[16];
};

/* 972 */
struct hci_le_dev_from_rslv_list_cmd
{
  uint8_t identity_address_type;
  uint8_t identity_address[6];
};

/* 973 */
struct hci_le_set_addr_resol_en_cmd
{
  uint8_t address_resolution_enable;
};

/* 974 */
struct hci_le_set_rslv_priv_addr_to_cmd
{
  uint16_t rpa_timeout;
};

/* 975 */
struct hci_le_set_privacy_mode_cmd
{
  uint8_t identity_address_type;
  uint8_t identity_address[6];
  uint8_t privacy_mode;
};

/* 976 */
struct hci_inq_cmp_evt
{
  uint8_t status;
};

/* 977 */
struct hci_inq_res_evt
{
  uint8_t nb_rsp;
  bd_addr bd_addr;
  uint8_t page_scan_rep_mode;
  uint8_t reserved1;
  uint8_t reserved2;
  devclass class_of_dev;
  uint16_t clk_off;
};

/* 978 */
struct __attribute__((aligned(2))) hci_inq_res_with_rssi_evt
{
  uint8_t nb_rsp;
  bd_addr bd_addr;
  uint8_t page_scan_rep_mode;
  uint8_t reserved1;
  devclass class_of_dev;
  uint16_t clk_off;
  uint8_t rssi;
};

/* 979 */
struct __attribute__((aligned(2))) hci_ext_inq_res_evt
{
  uint8_t nb_rsp;
  bd_addr bd_addr;
  uint8_t page_scan_rep_mode;
  uint8_t reserved1;
  devclass class_of_dev;
  uint16_t clk_off;
  uint8_t rssi;
  eir eir;
};

/* 980 */
struct __attribute__((aligned(2))) hci_disc_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t reason;
};

/* 981 */
struct hci_basic_cmd_cmp_evt
{
  uint8_t status;
};

/* 982 */
struct hci_basic_conhdl_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
};

/* 983 */
struct hci_basic_bd_addr_cmd_cmp_evt
{
  uint8_t status;
  bd_addr bd_addr;
};

/* 984 */
struct hci_basic_conhdl_evt
{
  uint16_t conhdl;
};

/* 985 */
struct hci_cmd_stat_event
{
  uint8_t status;
};

/* 986 */
struct hci_nb_cmp_pkts_evt
{
  uint8_t nb_of_hdl;
  uint16_t conhdl[1];
  uint16_t nb_comp_pkt[1];
};

/* 987 */
struct hci_data_buf_ovflw_evt
{
  uint8_t link_type;
};

/* 988 */
struct hci_hw_err_evt
{
  uint8_t hw_code;
};

/* 989 */
struct __attribute__((aligned(2))) hci_enc_change_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t enc_stat;
};

/* 990 */
struct hci_enc_key_ref_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
};

/* 991 */
struct hci_auth_payl_to_exp_evt
{
  uint16_t conhdl;
};

/* 992 */
struct hci_con_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  bd_addr bd_addr;
  uint8_t link_type;
  uint8_t enc_en;
};

/* 993 */
struct hci_qos_setup_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t flags;
  uint8_t serv_type;
  uint32_t tok_rate;
  uint32_t pk_bw;
  uint32_t lat;
  uint32_t del_var;
};

/* 994 */
struct hci_flow_spec_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t flags;
  uint8_t flow_dir;
  uint8_t serv_type;
  uint32_t tk_rate;
  uint32_t tk_buf_sz;
  uint32_t pk_bw;
  uint32_t acc_lat;
};

/* 995 */
struct hci_role_chg_evt
{
  uint8_t status;
  bd_addr bd_addr;
  uint8_t new_role;
};

/* 996 */
struct hci_rd_clk_off_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint16_t clk_off_val;
};

/* 997 */
struct hci_flush_occurred_evt
{
  uint16_t conhdl;
};

/* 998 */
struct __attribute__((aligned(2))) hci_max_slot_chg_evt
{
  uint16_t conhdl;
  uint8_t max_slot;
};

/* 999 */
struct hci_sniff_sub_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint16_t max_lat_tx;
  uint16_t max_lat_rx;
  uint16_t min_rem_to;
  uint16_t min_loc_to;
};

/* 1000 */
struct hci_rd_rem_ext_feats_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t pg_nb;
  uint8_t pg_nb_max;
  features ext_feats;
};

/* 1001 */
struct hci_rem_host_supp_feats_notif_evt
{
  bd_addr bd_addr;
  features ext_feats;
};

/* 1002 */
struct hci_rd_rem_supp_feats_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  features rem_feats;
};

/* 1003 */
struct hci_rd_rem_ver_info_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t vers;
  uint16_t compid;
  uint16_t subvers;
};

/* 1004 */
struct __attribute__((aligned(2))) hci_enc_chg_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t enc_stat;
};

/* 1005 */
struct hci_mode_chg_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t cur_mode;
  uint16_t interv;
};

/* 1006 */
struct hci_sp_cmp_evt
{
  uint8_t status;
  bd_addr bd_addr;
};

/* 1007 */
struct hci_auth_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
};

/* 1008 */
struct hci_chg_con_lk_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
};

/* 1009 */
struct hci_enc_key_refresh_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
};

/* 1010 */
struct __attribute__((aligned(2))) hci_master_lk_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t key_flag;
};

/* 1011 */
struct __attribute__((aligned(2))) hci_sync_con_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  bd_addr bd_addr;
  uint8_t lk_type;
  uint8_t tx_int;
  uint8_t ret_win;
  uint16_t rx_pkt_len;
  uint16_t tx_pkt_len;
  uint8_t air_mode;
};

/* 1012 */
struct hci_sync_con_chg_evt
{
  uint8_t status;
  uint16_t sync_conhdl;
  uint8_t tx_int;
  uint8_t ret_win;
  uint16_t rx_pkt_len;
  uint16_t tx_pkt_len;
};

/* 1013 */
struct hci_con_pkt_type_chg_evt
{
  uint8_t status;
  uint16_t sync_conhdl;
  uint16_t pkt_type;
};

/* 1014 */
struct hci_link_supv_to_chg_evt
{
  uint16_t conhdl;
  uint16_t lsto_val;
};

/* 1015 */
struct hci_lk_req_evt
{
  bd_addr bd_addr;
};

/* 1016 */
struct hci_enc_key_refresh_evt
{
  uint8_t status;
  uint16_t conhdl;
};

/* 1017 */
struct hci_con_req_evt
{
  bd_addr bd_addr;
  devclass classofdev;
  uint8_t lk_type;
};

/* 1018 */
struct hci_qos_viol_evt
{
  uint16_t conhdl;
};

/* 1019 */
struct hci_io_cap_rsp_evt
{
  bd_addr bd_addr;
  uint8_t io_capa;
  uint8_t oob_data_pres;
  uint8_t auth_req;
};

/* 1020 */
struct hci_io_cap_req_evt
{
  bd_addr bd_addr;
};

/* 1021 */
struct hci_return_link_keys_evt
{
  uint8_t num_keys;
  bd_addr bd_addr;
  ltk key;
};

/* 1022 */
struct hci_pin_code_req_evt
{
  bd_addr bd_addr;
};

/* 1023 */
struct hci_user_passkey_req_evt
{
  bd_addr bd_addr;
};

/* 1024 */
struct hci_user_passkey_notif_evt
{
  bd_addr bd_addr;
  uint32_t passkey;
};

/* 1025 */
struct hci_rem_oob_data_req_evt
{
  bd_addr bd_addr;
};

/* 1026 */
struct hci_user_cfm_req_evt
{
  bd_addr bd_addr;
  uint32_t passkey;
};

/* 1027 */
struct hci_keypress_notif_evt
{
  bd_addr bd_addr;
  uint8_t type;
};

/* 1028 */
struct hci_lk_notif_evt
{
  bd_addr bd_addr;
  ltk key;
  uint8_t key_type;
};

/* 1029 */
struct hci_le_rd_local_supp_feats_cmd_cmp_evt
{
  uint8_t status;
  le_features feats;
};

/* 1030 */
struct hci_rd_adv_chnl_tx_pw_cmd_cmp_evt
{
  uint8_t status;
  int8_t adv_tx_pw_lvl;
};

/* 1031 */
struct hci_rd_wlst_size_cmd_cmp_evt
{
  uint8_t status;
  uint8_t wlst_size;
};

/* 1032 */
struct __attribute__((aligned(2))) hci_le_rd_buff_size_cmd_cmp_evt
{
  uint8_t status;
  uint16_t hc_data_pk_len;
  uint8_t hc_tot_nb_data_pkts;
};

/* 1033 */
struct hci_le_rand_cmd_cmp_evt
{
  uint8_t status;
  rand_nb nb;
};

/* 1034 */
struct hci_rd_supp_states_cmd_cmp_evt
{
  uint8_t status;
  le_states states;
};

/* 1035 */
struct hci_test_end_cmd_cmp_evt
{
  uint8_t status;
  uint16_t nb_packet_received;
};

/* 1036 */
struct hci_le_enc_cmd_cmp_evt
{
  uint8_t status;
  uint8_t encrypted_data[16];
};

/* 1037 */
struct hci_le_adv_report_evt
{
  uint8_t subcode;
  uint8_t nb_reports;
  adv_report adv_rep[1];
};

/* 1038 */
struct hci_le_direct_adv_report_evt
{
  uint8_t subcode;
  uint8_t nb_reports;
  direct_adv_report adv_rep[1];
};

/* 1039 */
struct __attribute__((aligned(2))) hci_le_rd_chnl_map_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  le_chnl_map ch_map;
};

/* 1040 */
struct hci_le_ltk_req_reply_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
};

/* 1041 */
struct hci_le_ltk_req_neg_reply_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
};

/* 1042 */
struct hci_wr_auth_payl_to_cmd
{
  uint16_t conhdl;
  uint16_t auth_payl_to;
};

/* 1043 */
struct hci_wr_auth_payl_to_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
};

/* 1044 */
struct hci_le_con_update_cmp_evt
{
  uint8_t subcode;
  uint8_t status;
  uint16_t conhdl;
  uint16_t con_interval;
  uint16_t con_latency;
  uint16_t sup_to;
};

/* 1045 */
struct __attribute__((aligned(2))) hci_le_con_cmp_evt
{
  uint8_t subcode;
  uint8_t status;
  uint16_t conhdl;
  uint8_t role;
  uint8_t peer_addr_type;
  bd_addr peer_addr;
  uint16_t con_interval;
  uint16_t con_latency;
  uint16_t sup_to;
  uint8_t clk_accuracy;
};

/* 1046 */
struct hci_le_rd_rem_used_feats_cmd
{
  uint16_t conhdl;
};

/* 1047 */
struct hci_le_rd_rem_used_feats_cmd_cmp_evt
{
  uint8_t subcode;
  uint8_t status;
  uint16_t conhdl;
  le_features feats_used;
};

/* 1048 */
struct __attribute__((aligned(2))) hci_rd_tx_pwr_lvl_cmd
{
  uint16_t conhdl;
  uint8_t type;
};

/* 1049 */
struct __attribute__((aligned(2))) hci_rd_tx_pwr_lvl_cmd_cmp_evt
{
  uint8_t status;
  uint16_t conhdl;
  uint8_t tx_pow_lvl;
};

/* 1050 */
struct hci_rd_rem_ver_info_cmd
{
  uint16_t conhdl;
};

/* 1051 */
struct hci_le_rem_con_param_req_evt
{
  uint8_t subcode;
  uint16_t conhdl;
  uint16_t interval_min;
  uint16_t interval_max;
  uint16_t latency;
  uint16_t timeout;
};

/* 1052 */
struct hci_le_ltk_request_evt
{
  uint8_t subcode;
  uint16_t conhdl;
  rand_nb rand;
  uint16_t ediv;
};

/* 1053 */
struct hci_le_data_length_change_evt
{
  uint8_t subcode;
  uint16_t conhdl;
  uint16_t max_txoctets;
  uint16_t max_txtime;
  uint16_t max_rxoctets;
  uint16_t max_rxtime;
};

/* 1054 */
struct __attribute__((aligned(2))) hci_le_enh_con_cmp_evt
{
  uint8_t subcode;
  uint8_t status;
  uint16_t conhdl;
  uint8_t role;
  uint8_t peer_addr_type;
  bd_addr peer_addr;
  bd_addr local_rpa_addr;
  bd_addr peer_rpa_addr;
  uint16_t con_interval;
  uint16_t con_latency;
  uint16_t sup_to;
  uint8_t clk_accuracy;
};

/* 1055 */
struct hci_le_read_suggested_default_data_length_cmd_cmp_evt
{
  uint8_t status;
  uint16_t suggested_tx_octets;
  uint16_t suggested_tx_time;
};

/* 1056 */
struct hci_le_read_max_data_length_cmd_cmp_evt
{
  uint8_t status;
  uint16_t max_tx_octets;
  uint16_t max_tx_time;
  uint16_t max_rx_octets;
  uint16_t max_rx_time;
};

/* 1057 */
struct hci_le_dev_from_rslv_list_cmd_cmp_evt
{
  uint8_t status;
  uint8_t address[6];
};

/* 1058 */
struct hci_le_rd_rslv_list_size_cmd_cmp_evt
{
  uint8_t status;
  uint8_t resolving_list_size;
};

/* 1059 */
struct buffer_tag
{
  uint8_t length;
  uint8_t data[128];
};

/* 1060 */
struct hci_dbg_basic_rd_data_cmd_cmp_evt
{
  uint8_t status;
  buffer_tag buf;
};

/* 1061 */
struct __attribute__((aligned(4))) hci_dbg_rd_mem_cmd
{
  uint32_t start_addr;
  uint8_t type;
  uint8_t length;
};

/* 1062 */
struct __attribute__((aligned(4))) hci_dbg_wr_mem_cmd
{
  uint32_t start_addr;
  uint8_t type;
  buffer_tag buf;
};

/* 1063 */
struct hci_dbg_del_param_cmd
{
  uint16_t param_tag;
};

/* 1064 */
struct hci_dbg_er_flash_cmd
{
  uint8_t flashtype;
  uint32_t startoffset;
  uint32_t size;
};

/* 1065 */
struct __attribute__((aligned(4))) hci_dbg_wr_flash_cmd
{
  uint8_t flashtype;
  uint32_t startoffset;
  buffer_tag buf;
};

/* 1066 */
struct __attribute__((aligned(4))) hci_dbg_rd_flash_cmd
{
  uint8_t flashtype;
  uint32_t startoffset;
  uint8_t size;
};

/* 1067 */
struct hci_dbg_rd_par_cmd
{
  uint16_t param_tag;
};

/* 1068 */
struct __attribute__((aligned(2))) hci_dbg_wr_par_cmd
{
  uint16_t param_tag;
  buffer_tag buf;
};

/* 1069 */
struct hci_dbg_rd_ke_stats_cmd_cmp_evt
{
  uint8_t status;
  uint8_t max_msg_sent;
  uint8_t max_msg_saved;
  uint8_t max_timer_used;
  uint16_t max_heap_used;
  uint16_t max_stack_used;
};

/* 1070 */
struct hci_dbg_rd_mem_info_cmd_cmp_evt
{
  uint8_t status;
  uint16_t mem_used[4];
  uint32_t max_mem_used;
};

/* 1071 */
struct hci_dbg_id_flash_cmd_cmp_evt
{
  uint8_t status;
  uint8_t flash_id;
};

/* 1072 */
struct hci_dbg_rf_reg_rd_cmd
{
  uint16_t addr;
};

/* 1073 */
struct hci_dbg_rf_reg_rd_cmd_cmp_evt
{
  uint8_t status;
  uint16_t addr;
  uint32_t value;
};

/* 1074 */
struct hci_dbg_rf_reg_wr_cmd
{
  uint16_t addr;
  uint32_t value;
};

/* 1075 */
struct hci_dbg_rf_reg_wr_cmd_cmp_evt
{
  uint8_t status;
  uint16_t addr;
};

/* 1076 */
struct hci_dbg_plf_reset_cmd
{
  uint8_t reason;
};

/* 1077 */
struct hci_dbg_hw_reg_rd_cmd
{
  uint16_t reg_addr;
};

/* 1078 */
struct hci_dbg_hw_reg_wr_cmd
{
  uint16_t reg_addr;
  uint16_t reserved;
  uint32_t reg_value;
};

/* 1079 */
struct hci_dbg_hw_reg_rd_cmd_cmp_evt
{
  uint8_t status;
  uint16_t reg_addr;
  uint32_t reg_value;
};

/* 1080 */
struct hci_dbg_hw_reg_wr_cmd_cmp_evt
{
  uint8_t status;
  uint16_t reg_addr;
};

/* 1081 */
struct hci_dbg_set_bd_addr_cmd
{
  bd_addr addr;
};

/* 1082 */
struct __attribute__((aligned(2))) hci_dbg_set_crc_cmd
{
  uint16_t conhdl;
  crc_init crc;
};

/* 1083 */
struct __attribute__((aligned(2))) hci_dbg_llcp_discard_cmd
{
  uint16_t conhdl;
  uint8_t enable;
};

/* 1084 */
struct hci_dbg_reset_rx_cnt_cmd
{
  uint16_t conhdl;
};

/* 1085 */
struct hci_dbg_reset_tx_cnt_cmd
{
  uint16_t conhdl;
};

/* 1086 */
struct __attribute__((aligned(2))) hci_dbg_set_tx_pw_cmd
{
  uint16_t conhdl;
  uint8_t pw_lvl;
};

/* 1087 */
struct hci_dbg_wr_dle_dft_value_cmd
{
  uint16_t supported_tx_octets;
  uint16_t supported_tx_time;
  uint16_t supported_rx_octets;
  uint16_t supported_rx_time;
};

/* 1088 */
struct hci_dbg_wr_dle_dft_value_cmd_cmp_evt
{
  uint8_t status;
};

/* 1089 */
struct hci_dbg_wr_rl_size_cmd
{
  uint8_t rl_size;
};

/* 1090 */
struct hci_dbg_wr_rl_size_cmd_cmp_evt
{
  uint8_t status;
};

/* 1091 */
struct hci_dbg_wr_filt_dup_size_cmd
{
  uint8_t filt_dup_size;
};

/* 1092 */
struct hci_dbg_wr_filt_dup_size_cmd_cmp_evt
{
  uint8_t status;
};

/* 1093 */
struct hci_le_generate_dhkey_cmd
{
  uint8_t public_key[64];
};

/* 1094 */
struct hci_le_generate_dhkey_v2_cmd
{
  uint8_t public_key[64];
  uint8_t key_type;
};

/* 1095 */
struct hci_rd_p256_public_key_cmd_cmp_evt
{
  uint8_t subcode;
  uint8_t status;
  uint8_t public_key[64];
};

/* 1096 */
struct hci_generate_dhkey_cmd_cmp_evt
{
  uint8_t subcode;
  uint8_t status;
  uint8_t dhkey[32];
};

/* 1098 */
typedef prf_env prf_env_t;

/* 1097 */
struct prf_task_env
{
  ke_task_desc desc;
  prf_env_t *env;
  ke_task_id_t task;
  ke_task_id_t id;
};

/* 1099 */
struct prf_env
{
  ke_task_id_t app_task;
  ke_task_id_t prf_task;
};

/* 1100 */
typedef uint8_t (*prf_init_fnct)(prf_task_env *, uint16_t *, uint16_t, uint8_t, void *);

/* 1101 */
typedef void (*prf_destroy_fnct)(prf_task_env *);

/* 1102 */
typedef void (*prf_create_fnct)(prf_task_env *, uint8_t);

/* 1103 */
typedef void (*prf_cleanup_fnct)(prf_task_env *, uint8_t, uint8_t);

/* 1104 */
struct prf_task_cbs
{
  prf_init_fnct init;
  prf_destroy_fnct destroy;
  prf_create_fnct create;
  prf_cleanup_fnct cleanup;
};

/* 1105 */
typedef const prf_task_cbs *(*prfif_func_t)(void);

/* 1106 */
struct profile_interface
{
  uint8_t id;
  prfif_func_t func;
};

/* 1107 */
struct prf_env_tag;

/* 1108 */
struct __attribute__((aligned(4))) rom_prf_cfg_t
{
  const profile_interface *profile_if;
  prf_env_tag *prf_env;
  uint8_t num_of_profiles;
};

/* 1109 */
enum prf_perm_mask : __int16
{
  PERM_MASK_PRF_TASK = 0x7FFF,
  PERM_POS_PRF_TASK = 0x0,
  PERM_MASK_PRF_MI = 0x8000,
  PERM_POS_PRF_MI = 0xF,
};

/* 1110 */
enum sleep_state_t : __int8
{
  ARCH_SLEEP_OFF = 0x0,
  ARCH_EXT_SLEEP_ON = 0x1,
  ARCH_EXT_SLEEP_OTP_COPY_ON = 0x2,
};

/* 1111 */
struct arch_sleep_env_tag
{
  sleep_state_t slp_state;
};

/* 1112 */
enum pd_sys_down_ram_t : __int8
{
  PD_SYS_DOWN_RAM_ON = 0x0,
  PD_SYS_DOWN_RAM_OFF = 0x1,
};

/* 1113 */
enum remap_addr0_t : __int8
{
  REMAP_ADDR0_TO_ROM = 0x0,
  REMAP_ADDR0_TO_OTP = 0x1,
  REMAP_ADDR0_TO_RAM1 = 0x2,
  REMAP_ADDR0_TO_RAM3 = 0x3,
};

/* 1114 */
enum stateful_hibern_remap_addr0_t : __int8
{
  STATEFUL_HIBERN_REMAP_ADDR0_TO_RAM1 = 0x2,
  STATEFUL_HIBERN_REMAP_ADDR0_TO_RAM3 = 0x3,
};

/* 1115 */
enum last_ble_evt : __int8
{
  BLE_EVT_SLP = 0x0,
  BLE_EVT_CSCNT = 0x1,
  BLE_EVT_RX = 0x2,
  BLE_EVT_TX = 0x3,
  BLE_EVT_END = 0x4,
};

/* 1116 */
enum arch_main_loop_callback_ret_t : __int8
{
  GOTO_SLEEP = 0x0,
  KEEP_POWERED = 0x1,
};

/* 1117 */
struct arch_main_loop_callbacks
{
  void (*app_on_init)(void);
  arch_main_loop_callback_ret_t (*app_on_ble_powered)(void);
  arch_main_loop_callback_ret_t (*app_on_system_powered)(void);
  void (*app_before_sleep)(void);
  sleep_mode_t (*app_validate_sleep)(sleep_mode_t);
  void (*app_going_to_sleep)(sleep_mode_t);
  void (*app_resume_from_sleep)(void);
};

/* 1118 */
struct __attribute__((aligned(4))) arch_ble_metrics_t
{
  uint32_t rx_pkt;
  uint32_t rx_err;
  uint32_t rx_err_crc;
  uint32_t rx_err_sync;
  uint16_t rx_rssi;
};

/* 1119 */
enum lld_evt_mode : __int8
{
  LLD_EVT_ADV_MODE = 0x0,
  LLD_EVT_SCAN_MODE = 0x1,
  LLD_EVT_TEST_MODE = 0x2,
  LLD_EVT_MST_MODE = 0x3,
  LLD_EVT_SLV_MODE = 0x4,
  LLD_EVT_MODE_MAX = 0x5,
};

/* 1120 */
enum lld_evt_instant_action : __int8
{
  LLD_EVT_NO_ACTION = 0x0,
  LLD_EVT_PARAM_UPDATE = 0x1,
  LLD_EVT_CHMAP_UPDATE = 0x2,
};

/* 1121 */
enum lld_evt_cs_format : __int8
{
  LLD_MASTER_CONNECTED = 0x2,
  LLD_SLAVE_CONNECTED = 0x3,
  LLD_LD_ADVERTISER = 0x4,
  LLD_HD_ADVERTISER = 0x5,
  LLD_PASSIVE_SCANNING = 0x8,
  LLD_ACTIVE_SCANNING = 0x9,
  LLD_INITIATING = 0xF,
  LLD_TXTEST_MODE = 0x1C,
  LLD_RXTEST_MODE = 0x1D,
  LLD_TXRXTEST_MODE = 0x1E,
};

/* 1122 */
struct lld_evt_anchor
{
  uint32_t basetime_cnt;
  uint16_t finetime_cnt;
  uint16_t evt_cnt;
};

/* 1123 */
struct lld_evt_tag
{
  co_list_hdr hdr;
  lld_evt_anchor anchor_point;
  co_list tx_prog;
  co_list tx_rdy;
  ea_interval_tag *interval_elt;
  uint32_t sync_win_size;
  uint32_t sca_drift;
  uint32_t evt_end_ts;
  uint16_t conhdl;
  uint16_t cs_ptr;
  uint16_t interval;
  uint16_t instant;
  uint16_t new_instant;
  uint16_t latency;
  uint16_t counter;
  uint16_t missed_cnt;
  uint16_t duration_dft;
  uint16_t update_offset;
  uint16_t slot;
  uint8_t update_size;
  uint8_t rx_cnt;
  uint8_t mode;
  uint8_t instant_action;
  uint8_t new_instant_action;
  uint8_t tx_pwr;
  uint8_t tx_cnt;
  uint8_t mst_sca;
  uint8_t evt_flag;
  uint8_t last_md_rx;
};

/* 1124 */
struct __attribute__((aligned(2))) lld_evt_update_tag
{
  uint16_t win_offset;
  uint16_t instant;
  uint8_t win_size;
};

/* 1125 */
struct __attribute__((aligned(4))) lld_evt_int_tag
{
  co_list_hdr hdr;
  lld_evt_tag *evt;
  uint32_t freeslot;
  uint16_t int_base;
};

/* 1126 */
struct __attribute__((aligned(4))) lld_evt_env_tag
{
  co_list elt_prog;
  co_list elt_deferred;
  uint8_t sca;
};

/* 1127 */
struct __attribute__((aligned(4))) lld_evt_deferred_tag
{
  co_list_hdr hdr;
  ea_elt_tag *elt_ptr;
  uint8_t type;
  uint8_t rx_desc_cnt;
};

/* 1128 */
enum prevent_sleep : __int8
{
  RW_WAKE_UP_ONGOING = 0x1,
  RW_TL_TX_ONGOING = 0x2,
  RW_TL_RX_ONGOING = 0x4,
  RW_GTL_TIMEOUT = 0x8,
  RW_CRYPT_ONGOING = 0x10,
  RW_DELETE_ELT_ONGOING = 0x20,
  RW_P256_ONGOING = 0x40,
};

/* 1129 */
enum rwip_eif_types : __int8
{
  RWIP_EIF_HCIC = 0x0,
  RWIP_EIF_HCIH = 0x1,
  RWIP_EIF_AHI = 0x2,
};

/* 1130 */
enum rwip_eif_status : __int8
{
  RWIP_EIF_STATUS_OK = 0x0,
  RWIP_EIF_STATUS_ERROR = 0x1,
};

/* 1131 */
enum rwip_rf_mod : __int8
{
  MOD_GFSK = 0x1,
  MOD_DQPSK = 0x2,
  MOD_8DPSK = 0x3,
};

/* 1132 */
struct __attribute__((aligned(4))) rwip_rf_api
{
  void (*reset)(void);
  void (*force_agc_enable)(bool);
  bool (*txpwr_inc)(uint8_t);
  bool (*txpwr_dec)(uint8_t);
  uint8_t (*txpwr_epc_req)(uint8_t, uint8_t);
  uint8_t (*txpwr_dbm_get)(uint8_t, uint8_t);
  uint8_t (*txpwr_cs_get)(int8_t);
  uint8_t (*rssi_convert)(uint8_t);
  void (*isr)(void);
  uint32_t (*reg_rd)(uint16_t);
  void (*reg_wr)(uint16_t, uint32_t);
  void (*sleep)(void);
  uint8_t txpwr_max;
  uint8_t rssi_high_thr;
  uint8_t rssi_low_thr;
  uint8_t rssi_interf_thr;
  uint8_t wakeup_delay;
};

/* 1133 */
typedef void (*rwip_eif_callback)(uint8_t);

/* 1134 */
struct rwip_eif_api
{
  void (*read)(uint8_t *, uint32_t, rwip_eif_callback);
  void (*write)(uint8_t *, uint32_t, rwip_eif_callback);
  void (*flow_on)(void);
  bool (*flow_off)(void);
};

/* 1135 */
struct __attribute__((aligned(2))) rwip_env_tag
{
  uint16_t prevent_sleep;
  uint8_t wakeup_delay;
  bool sleep_enable;
  uint8_t ext_wakeup_enable;
};

/* 1136 */
enum rf_tx_pwr_lvl_t : __int8
{
  RF_TX_PWR_LVL_MINUS_19d5 = 0x1,
  RF_TX_PWR_LVL_MINUS_13d5 = 0x2,
  RF_TX_PWR_LVL_MINUS_10d0 = 0x3,
  RF_TX_PWR_LVL_MINUS_7d0 = 0x4,
  RF_TX_PWR_LVL_MINUS_5d0 = 0x5,
  RF_TX_PWR_LVL_MINUS_3d5 = 0x6,
  RF_TX_PWR_LVL_MINUS_2d0 = 0x7,
  RF_TX_PWR_LVL_MINUS_1d0 = 0x8,
  RF_TX_PWR_LVL_0d0 = 0x9,
  RF_TX_PWR_LVL_PLUS_1d0 = 0xA,
  RF_TX_PWR_LVL_PLUS_1d5 = 0xB,
  RF_TX_PWR_LVL_PLUS_2d5 = 0xC,
  RF_TX_PWR_LVL_TOTAL_VALUES = 0xC,
};

/* 1137 */
struct rf_calibration_result
{
  uint8_t dcoff_result;
  uint8_t kdco_result[8];
  uint16_t kdtc_result[8];
  uint8_t tx_div2_result[8];
  uint8_t iq_div2_result[8];
};

/* 1138 */
enum tim2_clk_src_t : __int8
{
  TIM2_CLK_LP = 0x0,
  TIM2_CLK_SYS = 0x1,
};

/* 1139 */
enum tim2_hw_pause_t : __int8
{
  TIM2_HW_PAUSE_OFF = 0x0,
  TIM2_HW_PAUSE_ON = 0x1,
};

/* 1140 */
enum tim2_sw_pause_t : __int8
{
  TIM2_SW_PAUSE_OFF = 0x0,
  TIM2_SW_PAUSE_ON = 0x1,
};

/* 1141 */
enum tim2_t : __int8
{
  TIM2_OFF = 0x0,
  TIM2_ON = 0x1,
};

/* 1142 */
enum tim2_pwm_t : __int8
{
  TIM2_PWM_2 = 0x1,
  TIM2_PWM_3 = 0x2,
  TIM2_PWM_4 = 0x3,
  TIM2_PWM_5 = 0x4,
  TIM2_PWM_6 = 0x5,
  TIM2_PWM_7 = 0x6,
};

/* 1143 */
struct tim2_config_t
{
  tim2_clk_src_t clk_source;
  tim2_hw_pause_t hw_pause;
};

/* 1144 */
struct tim2_pwm_config_t
{
  tim2_pwm_t pwm_signal;
  uint8_t pwm_dc;
  uint8_t pwm_offset;
};

/* 1145 */
enum adc_input_mode_t : __int8
{
  ADC_INPUT_MODE_DIFFERENTIAL = 0x0,
  ADC_INPUT_MODE_SINGLE_ENDED = 0x1,
};

/* 1146 */
enum adc_input_se_t : __int8
{
  ADC_INPUT_SE_P0_1 = 0x0,
  ADC_INPUT_SE_P0_2 = 0x1,
  ADC_INPUT_SE_P0_6 = 0x2,
  ADC_INPUT_SE_P0_7 = 0x3,
  ADC_INPUT_SE_TEMP_SENS = 0x4,
  ADC_INPUT_SE_VBAT_HIGH = 0x5,
  ADC_INPUT_SE_VBAT_LOW = 0x6,
  ADC_INPUT_SE_VDD = 0x7,
};

/* 1147 */
enum adc_input_diff_t : __int8
{
  ADC_INPUT_DIFF_P0_1 = 0x0,
  ADC_INPUT_DIFF_P0_2 = 0x1,
  ADC_INPUT_DIFF_P0_6 = 0x2,
  ADC_INPUT_DIFF_P0_7 = 0x3,
};

/* 1148 */
enum adc_input_attn_t : __int8
{
  ADC_INPUT_ATTN_NO = 0x0,
  ADC_INPUT_ATTN_2X = 0x1,
  ADC_INPUT_ATTN_3X = 0x2,
  ADC_INPUT_ATTN_4X = 0x3,
};

/* 1149 */
enum adc_input_sh_gain_t : __int8
{
  ADC_INPUT_SH_GAIN_2X = 0x0,
  ADC_INPUT_SH_GAIN_2X25 = 0x1,
};

/* 1150 */
enum adc_input_sh_cm_t : __int8
{
  ADC_INPUT_SH_CM_1V25 = 0x0,
  ADC_INPUT_SH_CM_1V30 = 0x1,
  ADC_INPUT_SH_CM_1V35 = 0x2,
  ADC_INPUT_SH_CM_1V40 = 0x3,
};

/* 1151 */
typedef void (*adc_interrupt_cb_t)(void);

/* 1152 */
struct adc_config_t
{
  adc_input_mode_t input_mode;
  uint8_t input;
  uint8_t smpl_time_mult;
  bool continuous;
  uint8_t interval_mult;
  adc_input_attn_t input_attenuator;
  bool chopping;
  uint8_t oversampling;
};

/* 1153 */
struct spi_t
{
  volatile uint16_t SPI_CTRL_REGF;
  uint16_t RESERVED;
  volatile uint16_t SPI_CONFIG_REGF;
  uint16_t RESERVED1;
  volatile uint16_t SPI_CLOCK_REGF;
  uint16_t RESERVED2;
  volatile uint16_t SPI_FIFO_CONFIG_REGF;
  uint16_t RESERVED3;
  volatile uint16_t SPI_IRQ_MASK_REGF;
  uint16_t RESERVED4;
  volatile uint16_t SPI_STATUS_REGF;
  uint16_t RESERVED5;
  volatile uint16_t SPI_FIFO_STATUS_REGF;
  uint16_t RESERVED6;
  volatile uint16_t SPI_FIFO_READ_REGF;
  uint16_t RESERVED7;
  volatile uint16_t SPI_FIFO_WRITE_REGF;
  uint16_t RESERVED8;
  volatile uint16_t SPI_CS_CONFIG_REGF;
  uint16_t RESERVED9;
  volatile uint16_t SPI_FIFO_HIGH_REGF;
  uint16_t RESERVED10;
  volatile uint16_t SPI_TXBUFFER_FORCE_L_REGF;
  uint16_t RESERVED11;
  volatile uint16_t SPI_TXBUFFER_FORCE_H_REGF;
};

/* 1154 */
enum SPI_BIT_CFG : __int8
{
  SPI_BIT_DIS = 0x0,
  SPI_BIT_EN = 0x1,
};

/* 1155 */
enum SPI_MS_MODE_CFG : __int8
{
  SPI_MS_MODE_MASTER = 0x0,
};

/* 1156 */
enum SPI_CP_MODE_CFG : __int8
{
  SPI_CP_MODE_0 = 0x0,
  SPI_CP_MODE_1 = 0x1,
  SPI_CP_MODE_2 = 0x2,
  SPI_CP_MODE_3 = 0x3,
};

/* 1157 */
enum SPI_SPEED_MODE_CFG : __int16
{
  SPI_SPEED_MODE_2MHz = 0x7D0,
  SPI_SPEED_MODE_4MHz = 0xFA0,
  SPI_SPEED_MODE_8MHz = 0x1F40,
  SPI_SPEED_MODE_16MHz = 0x3E80,
  SPI_SPEED_MODE_32MHz = 0x7D00,
};

/* 1158 */
enum SPI_WSZ_MODE_CFG : __int8
{
  SPI_MODE_8BIT = 0x0,
  SPI_MODE_16BIT = 0x1,
  SPI_MODE_32BIT = 0x2,
};

/* 1159 */
enum SPI_CS_MODE_CFG : __int8
{
  SPI_CS_NONE = 0x0,
  SPI_CS_0 = 0x1,
  SPI_CS_1 = 0x2,
  SPI_CS_GPIO = 0x4,
};

/* 1160 */
enum SPI_IRQ_CFG : __int8
{
  SPI_IRQ_DISABLED = 0x0,
  SPI_IRQ_ENABLED = 0x1,
};

/* 1161 */
enum SPI_OP_CFG : __int8
{
  SPI_OP_BLOCKING = 0x0,
};

/* 1162 */
enum SPI_MASTER_EDGE_CAPTURE_CFG : __int8
{
  SPI_MASTER_EDGE_CAPTURE = 0x0,
  SPI_MASTER_EDGE_CAPTURE_NEXT = 0x1,
};

/* 1163 */
enum SPI_RX_FIFO_EMPTY_STATUS : __int8
{
  SPI_RX_FIFO_IS_NOT_EMPTY = 0x0,
  SPI_RX_FIFO_IS_EMPTY = 0x1,
};

/* 1164 */
enum SPI_RX_FIFO_FULL_STATUS : __int8
{
  SPI_RX_FIFO_IS_NOT_FULL = 0x0,
  SPI_RX_FIFO_IS_FULL = 0x1,
};

/* 1165 */
enum SPI_TX_FIFO_EMPTY_STATUS : __int8
{
  SPI_TX_FIFO_IS_NOT_EMPTY = 0x0,
  SPI_TX_FIFO_IS_EMPTY = 0x1,
};

/* 1166 */
enum SPI_TX_FIFO_FULL_STATUS : __int8
{
  SPI_TX_FIFO_IS_NOT_FULL = 0x0,
  SPI_TX_FIFO_IS_FULL = 0x1,
};

/* 1167 */
enum SPI_TRANSACTION_STATUS : __int8
{
  SPI_TRANSACTION_IS_INACTIVE = 0x0,
  SPI_TRANSACTION_IS_ACTIVE = 0x1,
};

/* 1168 */
struct SPI_Pad_t
{
  GPIO_PORT port;
  GPIO_PIN pin;
};

/* 1169 */
typedef void (*spi_cb_t)(uint16_t);

/* 1170 */
struct spi_cfg_t
{
  __int8 spi_ms : 1;
  __int8 spi_cp : 3;
  SPI_SPEED_MODE_CFG spi_speed;
  __int8 spi_wsz : 3;
  __int8 spi_cs : 3;
  __int8 spi_irq : 1;
  SPI_Pad_t cs_pad;
  __int8 spi_capture : 1;
};

/* 1171 */
struct i2c_t
{
  volatile uint16_t I2C_CON_REGF;
  uint16_t RESERVED;
  volatile uint16_t I2C_TAR_REGF;
  uint16_t RESERVED1;
  volatile uint16_t I2C_SAR_REGF;
  uint16_t RESERVED2[3];
  volatile uint16_t I2C_DATA_CMD_REGF;
  uint16_t RESERVED3;
  volatile uint16_t I2C_SS_SCL_HCNT_REGF;
  uint16_t RESERVED4;
  volatile uint16_t I2C_SS_SCL_LCNT_REGF;
  uint16_t RESERVED5;
  volatile uint16_t I2C_FS_SCL_HCNT_REGF;
  uint16_t RESERVED6;
  volatile uint16_t I2C_FS_SCL_LCNT_REGF;
  uint16_t RESERVED7[5];
  volatile uint16_t I2C_INTR_STAT_REGF;
  uint16_t RESERVED8;
  volatile uint16_t I2C_INTR_MASK_REGF;
  uint16_t RESERVED9;
  volatile uint16_t I2C_RAW_INTR_STAT_REGF;
  uint16_t RESERVED10;
  volatile uint16_t I2C_RX_TL_REGF;
  uint16_t RESERVED11;
  volatile uint16_t I2C_TX_TL_REGF;
  uint16_t RESERVED12;
  volatile uint16_t I2C_CLR_INTR_REGF;
  uint16_t RESERVED13;
  volatile uint16_t I2C_CLR_RX_UNDER_REGF;
  uint16_t RESERVED14;
  volatile uint16_t I2C_CLR_RX_OVER_REGF;
  uint16_t RESERVED15;
  volatile uint16_t I2C_CLR_TX_OVER_REGF;
  uint16_t RESERVED16;
  volatile uint16_t I2C_CLR_RD_REQ_REGF;
  uint16_t RESERVED17;
  volatile uint16_t I2C_CLR_TX_ABRT_REGF;
  uint16_t RESERVED18;
  volatile uint16_t I2C_CLR_RX_DONE_REGF;
  uint16_t RESERVED19;
  volatile uint16_t I2C_CLR_ACTIVITY_REGF;
  uint16_t RESERVED20;
  volatile uint16_t I2C_CLR_STOP_DET_REGF;
  uint16_t RESERVED21;
  volatile uint16_t I2C_CLR_START_DET_REGF;
  uint16_t RESERVED22;
  volatile uint16_t I2C_CLR_GEN_CALL_REGF;
  uint16_t RESERVED23;
  volatile uint16_t I2C_ENABLE_REGF;
  uint16_t RESERVED24;
  volatile uint16_t I2C_STATUS_REGF;
  uint16_t RESERVED25;
  volatile uint16_t I2C_TXFLR_REGF;
  uint16_t RESERVED26;
  volatile uint16_t I2C_RXFLR_REGF;
  uint16_t RESERVED27;
  volatile uint16_t I2C_SDA_HOLD_REGF;
  uint16_t RESERVED28;
  volatile uint16_t I2C_TX_ABRT_SOURCE_REGF;
  uint16_t RESERVED29[3];
  volatile uint16_t I2C_DMA_CR_REGF;
  uint16_t RESERVED30;
  volatile uint16_t I2C_DMA_TDLR_REGF;
  uint16_t RESERVED31;
  volatile uint16_t I2C_DMA_RDLR_REGF;
  uint16_t RESERVED32;
  volatile uint16_t I2C_SDA_SETUP_REGF;
  uint16_t RESERVED33;
  volatile uint16_t I2C_ACK_GENERAL_CALL_REGF;
  uint16_t RESERVED34;
  volatile uint16_t I2C_ENABLE_STATUS_REGF;
  uint16_t RESERVED35;
  volatile uint16_t I2C_IC_FS_SPKLEN_REGF;
  uint16_t RESERVED36[41];
  volatile uint16_t I2C_COMP_PARAM1_REGF;
  volatile uint16_t I2C_COMP_PARAM2_REGF;
  volatile uint16_t I2C_COMP_VERSION_REGF;
  volatile uint16_t I2C_COMP2_VERSIONF;
  volatile uint16_t I2C_COMP_TYPE_REGF;
  volatile uint16_t I2C_COMP_TYPE2_REGF;
};

/* 1172 */
enum i2c_clock_t : __int8
{
  I2C_CLOCK_DISABLE = 0x0,
  I2C_CLOCK_ENABLE = 0x1,
};

/* 1173 */
enum i2c_controller_t : __int8
{
  I2C_CONTROLLER_DISABLE = 0x0,
  I2C_CONTROLLER_ENABLE = 0x1,
};

/* 1174 */
enum i2c_mode_t : __int8
{
  I2C_MODE_SLAVE = 0x0,
  I2C_MODE_MASTER = 0x1,
};

/* 1175 */
enum i2c_restart_t : __int8
{
  I2C_RESTART_DISABLE = 0x0,
  I2C_RESTART_ENABLE = 0x1,
};

/* 1176 */
enum i2c_addressing_t : __int8
{
  I2C_ADDRESSING_7B = 0x0,
  I2C_ADDRESSING_10B = 0x1,
};

/* 1177 */
enum i2c_speed_t : __int8
{
  I2C_SPEED_STANDARD = 0x1,
  I2C_SPEED_FAST = 0x0,
};

/* 1178 */
enum i2c_abort_t : __int16
{
  I2C_ABORT_NONE = 0x0,
  I2C_ABORT_7B_ADDR_NO_ACK = 0x1,
  I2C_ABORT_10B_ADDR1_NO_ACK = 0x2,
  I2C_ABORT_10B_ADDR2_NO_ACK = 0x4,
  I2C_ABORT_TX_DATA_NO_ACK = 0x8,
  I2C_ABORT_GENERAL_CALL_NO_ACK = 0x10,
  I2C_ABORT_GENERAL_CALL_READ = 0x20,
  I2C_ABORT_HS_ACKDET = 0x40,
  I2C_ABORT_SBYTE_ACKDET = 0x80,
  I2C_ABORT_HS_NORSTRT = 0x100,
  I2C_ABORT_10B_READ_NO_RESTART = 0x400,
  I2C_ABORT_MASTER_DISABLED = 0x800,
  I2C_ABORT_ARBITRATION_LOST = 0x1000,
  I2C_ABORT_SLAVE_FLUSH_TX_FIFO = 0x2000,
  I2C_ABORT_SLAVE_ARBITRATION_LOST = 0x4000,
  I2C_ABORT_SLAVE_IN_TX = 0x8000,
  I2C_ABORT_SW_ERROR = 0x8001,
};

/* 1179 */
typedef void (*i2c_interrupt_cb_t)(uint16_t);

/* 1180 */
typedef void (*i2c_complete_cb_t)(void *, uint16_t, bool);

/* 1181 */
struct $EC076EA72A7F68F89B44F8E63CD8D392
{
  uint16_t ss_hcnt;
  uint16_t ss_lcnt;
  uint16_t fs_hcnt;
  uint16_t fs_lcnt;
};

/* 1182 */
struct i2c_cfg_t
{
  $EC076EA72A7F68F89B44F8E63CD8D392 clock_cfg;
  i2c_restart_t restart_en;
  i2c_speed_t speed;
  i2c_mode_t mode;
  i2c_addressing_t addr_mode;
  uint16_t address;
  uint8_t tx_fifo_level;
  uint8_t rx_fifo_level;
};

/* 1183 */
enum $F1CDEA35E468E13FE9619D2B3F26E9AF : __int8
{
  I2C_F_NONE = 0x0,
  I2C_F_WAIT_FOR_STOP = 0x1,
  I2C_F_ADD_STOP = 0x2,
};

/* 1184 */
enum $1C54ECF45D4BD2F0F8454918EF136624 : __int16
{
  I2C_INT_RX_UNDERFLOW = 0x1,
  I2C_INT_RX_OVERFLOW = 0x2,
  I2C_INT_RX_FULL = 0x4,
  I2C_INT_TX_OVERFLOW = 0x8,
  I2C_INT_TX_EMPTY = 0x10,
  I2C_INT_READ_REQUEST = 0x20,
  I2C_INT_TX_ABORT = 0x40,
  I2C_INT_RX_DONE = 0x80,
  I2C_INT_ACTIVITY = 0x100,
  I2C_INT_STOP_DETECTED = 0x200,
  I2C_INT_START_DETECTED = 0x400,
  I2C_INT_GENERAL_CALL = 0x800,
};

/* 1185 */
enum PWM_MODE_t : __int8
{
  PWM_MODE_ONE = 0x0,
  PWM_MODE_CLOCK_DIV_BY_TWO = 0x1,
};

/* 1186 */
enum TIM0_CLK_DIV_t : __int8
{
  TIM0_CLK_DIV_BY_10 = 0x0,
  TIM0_CLK_NO_DIV = 0x1,
};

/* 1187 */
enum TIM0_CLK_SEL_t : __int8
{
  TIM0_CLK_32K = 0x0,
  TIM0_CLK_FAST = 0x1,
};

/* 1188 */
enum TIM0_CTRL_t : __int8
{
  TIM0_CTRL_OFF_RESET = 0x0,
  TIM0_CTRL_RUNNING = 0x1,
};

/* 1189 */
typedef void timer0_handler_function_t(void);

/* 1190 */
enum hw_otpc_mode_t : __int8
{
  HW_OTPC_MODE_DSTBY = 0x0,
  HW_OTPC_MODE_STBY = 0x1,
  HW_OTPC_MODE_READ = 0x2,
  HW_OTPC_MODE_PROG = 0x3,
  HW_OTPC_MODE_PVFY = 0x4,
  HW_OTPC_MODE_RINI = 0x5,
  HW_OTPC_MODE_AREAD = 0x6,
};

/* 1191 */
enum hw_otpc_word_t : __int8
{
  HW_OTPC_WORD_LOW = 0x0,
  HW_OTPC_WORD_HIGH = 0x1,
};

/* 1192 */
enum hw_otpc_clk_freq_t : __int8
{
  HW_OTPC_CLK_FREQ_2MHz = 0x0,
  HW_OTPC_CLK_FREQ_4MHz = 0x1,
  HW_OTPC_CLK_FREQ_8MHz = 0x2,
  HW_OTPC_CLK_FREQ_16MHz = 0x3,
};

/* 1193 */
enum syscntl_dcdc_level_t : __int8
{
  SYSCNTL_DCDC_LEVEL_1V025 = 0x0,
  SYSCNTL_DCDC_LEVEL_1V05 = 0x1,
  SYSCNTL_DCDC_LEVEL_1V075 = 0x2,
  SYSCNTL_DCDC_LEVEL_1V1 = 0x3,
  SYSCNTL_DCDC_LEVEL_1V125 = 0x4,
  SYSCNTL_DCDC_LEVEL_1V150 = 0x5,
  SYSCNTL_DCDC_LEVEL_1V175 = 0x6,
  SYSCNTL_DCDC_LEVEL_1V2 = 0x7,
  SYSCNTL_DCDC_LEVEL_1V725 = 0x8,
  SYSCNTL_DCDC_LEVEL_1V75 = 0x9,
  SYSCNTL_DCDC_LEVEL_1V775 = 0xA,
  SYSCNTL_DCDC_LEVEL_1V8 = 0xB,
  SYSCNTL_DCDC_LEVEL_1V825 = 0xC,
  SYSCNTL_DCDC_LEVEL_1V850 = 0xD,
  SYSCNTL_DCDC_LEVEL_1V875 = 0xE,
  SYSCNTL_DCDC_LEVEL_1V9 = 0xF,
  SYSCNTL_DCDC_LEVEL_2V425 = 0x10,
  SYSCNTL_DCDC_LEVEL_2V45 = 0x11,
  SYSCNTL_DCDC_LEVEL_2V475 = 0x12,
  SYSCNTL_DCDC_LEVEL_2V5 = 0x13,
  SYSCNTL_DCDC_LEVEL_2V525 = 0x14,
  SYSCNTL_DCDC_LEVEL_2V550 = 0x15,
  SYSCNTL_DCDC_LEVEL_2V575 = 0x16,
  SYSCNTL_DCDC_LEVEL_2V6 = 0x17,
  SYSCNTL_DCDC_LEVEL_2V925 = 0x18,
  SYSCNTL_DCDC_LEVEL_2V95 = 0x19,
  SYSCNTL_DCDC_LEVEL_2V975 = 0x1A,
  SYSCNTL_DCDC_LEVEL_3V0 = 0x1B,
  SYSCNTL_DCDC_LEVEL_3V025 = 0x1C,
  SYSCNTL_DCDC_LEVEL_3V050 = 0x1D,
  SYSCNTL_DCDC_LEVEL_3V075 = 0x1E,
  SYSCNTL_DCDC_LEVEL_3V1 = 0x1F,
};

/* 1194 */
struct syscntl_dcdc_state_t
{
  syscntl_dcdc_level_t level;
  bool status;
};

/* 1195 */
enum xtal32m_amp_reg_t : __int8
{
  XTAL32M_AMP_REG_NORMAL = 0x0,
  XTAL32M_AMP_REG_TRACKING = 0x1,
  XTAL32M_AMP_REG_HOLD = 0x2,
};

/* 1196 */
enum por_vbat_mask_t : __int8
{
  POR_VBAT_MASK_OFF = 0x0,
  POR_VBAT_MASK_ON = 0x1,
};

/* 1197 */
enum $94A965D1309505F9B45E80FE0660B0EA : __int8
{
  SYSCNTL_DCDC_NOMINAL_LEVEL_1V1 = 0x0,
  SYSCNTL_DCDC_NOMINAL_LEVEL_1V8 = 0x1,
  SYSCNTL_DCDC_NOMINAL_LEVEL_2V5 = 0x2,
  SYSCNTL_DCDC_NOMINAL_LEVEL_3V0 = 0x3,
};

/* 1198 */
enum $0BE8C8E7CA73A089342EE2E7E8020136 : __int8
{
  SYSCNTL_DCDC_TRIM_N_75mV = 0x0,
  SYSCNTL_DCDC_TRIM_N_50mV = 0x1,
  SYSCNTL_DCDC_TRIM_N_25mV = 0x2,
  SYSCNTL_DCDC_TRIM_0mV = 0x3,
  SYSCNTL_DCDC_TRIM_P_25mV = 0x4,
  SYSCNTL_DCDC_TRIM_P_50mV = 0x5,
  SYSCNTL_DCDC_TRIM_P_75mV = 0x6,
  SYSCNTL_DCDC_TRIM_P_100mV = 0x7,
};

/* 1199 */
struct uart_t
{
  volatile uint16_t UART_RBR_THR_DLL_REGF;
  uint16_t RESERVED;
  volatile uint16_t UART_IER_DLH_REGF;
  uint16_t RESERVED1;
  volatile uint16_t UART_IIR_FCR_REGF;
  uint16_t RESERVED2;
  volatile uint16_t UART_LCR_REGF;
  uint16_t RESERVED3;
  volatile uint16_t UART_MCR_REGF;
  uint16_t RESERVED4;
  volatile uint16_t UART_LSR_REGF;
  uint16_t RESERVED5;
  volatile uint16_t UART_MSR_REGF;
  uint16_t RESERVED6;
  volatile uint16_t UART_SCR_REGF;
  uint16_t RESERVED7[9];
  volatile uint16_t UART_SRBR_STHR0_REGF;
  uint16_t RESERVED8;
  volatile uint16_t UART_SRBR_STHR1_REGF;
  uint16_t RESERVED9;
  volatile uint16_t UART_SRBR_STHR2_REGF;
  uint16_t RESERVED10;
  volatile uint16_t UART_SRBR_STHR3_REGF;
  uint16_t RESERVED11;
  volatile uint16_t UART_SRBR_STHR4_REGF;
  uint16_t RESERVED12;
  volatile uint16_t UART_SRBR_STHR5_REGF;
  uint16_t RESERVED13;
  volatile uint16_t UART_SRBR_STHR6_REGF;
  uint16_t RESERVED14;
  volatile uint16_t UART_SRBR_STHR7_REGF;
  uint16_t RESERVED15;
  volatile uint16_t UART_SRBR_STHR8_REGF;
  uint16_t RESERVED16;
  volatile uint16_t UART_SRBR_STHR9_REGF;
  uint16_t RESERVED17;
  volatile uint16_t UART_SRBR_STHR10_REGF;
  uint16_t RESERVED18;
  volatile uint16_t UART_SRBR_STHR11_REGF;
  uint16_t RESERVED19;
  volatile uint16_t UART_SRBR_STHR12_REGF;
  uint16_t RESERVED20;
  volatile uint16_t UART_SRBR_STHR13_REGF;
  uint16_t RESERVED21;
  volatile uint16_t UART_SRBR_STHR14_REGF;
  uint16_t RESERVED22;
  volatile uint16_t UART_SRBR_STHR15_REGF;
  uint16_t RESERVED23;
  volatile uint16_t UART_FAR_REGF;
  uint16_t RESERVED24[5];
  volatile uint16_t UART_USR_REGF;
  uint16_t RESERVED25;
  volatile uint16_t UART_TFL_REGF;
  uint16_t RESERVED26;
  volatile uint16_t UART_RFL_REGF;
  uint16_t RESERVED27;
  volatile uint16_t UART_SRR_REGF;
  uint16_t RESERVED28;
  volatile uint16_t UART_SRTS_REGF;
  uint16_t RESERVED29;
  volatile uint16_t UART_SBCR_REGF;
  uint16_t RESERVED30;
  volatile uint16_t UART_SDMAM_REGF;
  uint16_t RESERVED31;
  volatile uint16_t UART_SFE_REGF;
  uint16_t RESERVED32;
  volatile uint16_t UART_SRT_REGF;
  uint16_t RESERVED33;
  volatile uint16_t UART_STET_REGF;
  uint16_t RESERVED34;
  volatile uint16_t UART_HTX_REGF;
  uint16_t RESERVED35;
  volatile uint16_t UART_DMASA_REGF;
  uint16_t RESERVED36[11];
  volatile uint16_t UART_DLF_REGF;
  uint16_t RESERVED37[27];
  volatile uint16_t UART_UCV_REGF;
  volatile uint16_t UART_UCV_HIGH_REGF;
  volatile uint16_t UART_CTR_REGF;
  volatile uint16_t UART_CTR_HIGH_REGF;
};

/* 1200 */
enum UART_BIT_CFG : __int8
{
  UART_BIT_DIS = 0x0,
  UART_BIT_EN = 0x1,
};

/* 1201 */
enum UART_STATUS : __int8
{
  UART_ERR_NO_ERROR = 0x0,
  UART_ERR_BUSY_ERROR = 0x1,
  UART_ERR_OVERRUN_ERROR = 0x2,
  UART_ERR_PARITY_ERROR = 0x4,
  UART_ERR_FRAMING_ERROR = 0x8,
  UART_ERR_BREAK_ERROR = 0x10,
  UART_ERR_RX_FIFO_ERROR = 0x80,
};

/* 1202 */
enum UART_INT : __int8
{
  UART_INT_NO_INT_PEND = 0x1,
  UART_INT_THR_EMPTY = 0x2,
  UART_INT_RECEIVED_AVAILABLE = 0x4,
  UART_INT_RECEIVE_LINE_STAT = 0x6,
  UART_INT_BUSY_DETECTED = 0x7,
  UART_INT_TIMEOUT = 0xC,
};

/* 1203 */
enum UART_BAUDRATE : __int32
{
  UART_BAUDRATE_1000000 = 0x100,
  UART_BAUDRATE_921600 = 0x101,
  UART_BAUDRATE_500000 = 0x200,
  UART_BAUDRATE_460800 = 0x203,
  UART_BAUDRATE_230400 = 0x405,
  UART_BAUDRATE_115200 = 0x80B,
  UART_BAUDRATE_57600 = 0x1106,
  UART_BAUDRATE_38400 = 0x1A01,
  UART_BAUDRATE_28800 = 0x220C,
  UART_BAUDRATE_19200 = 0x3401,
  UART_BAUDRATE_14400 = 0x4507,
  UART_BAUDRATE_9600 = 0x6803,
  UART_BAUDRATE_4800 = 0xD005,
  UART_BAUDRATE_2400 = 0x1A00B,
};

/* 1204 */
enum UART_DATABITS : __int8
{
  UART_DATABITS_5 = 0x0,
  UART_DATABITS_6 = 0x1,
  UART_DATABITS_7 = 0x2,
  UART_DATABITS_8 = 0x3,
};

/* 1205 */
enum UART_PARITY : __int8
{
  UART_PARITY_NONE = 0x0,
  UART_PARITY_ODD = 0x1,
  UART_PARITY_EVEN = 0x3,
};

/* 1206 */
enum UART_STOPBITS : __int8
{
  UART_STOPBITS_1 = 0x0,
  UART_STOPBITS_2 = 0x1,
};

/* 1207 */
enum UART_AFCE_CFG : __int8
{
  UART_AFCE_DIS = 0x0,
  UART_AFCE_EN = 0x1,
};

/* 1208 */
enum UART_FIFO_CFG : __int8
{
  UART_FIFO_DIS = 0x0,
  UART_FIFO_EN = 0x1,
};

/* 1209 */
enum UART_RX_FIFO_LEVEL : __int8
{
  UART_RX_FIFO_LEVEL_0 = 0x0,
  UART_RX_FIFO_LEVEL_1 = 0x1,
  UART_RX_FIFO_LEVEL_2 = 0x2,
  UART_RX_FIFO_LEVEL_3 = 0x3,
};

/* 1210 */
enum UART_TX_FIFO_LEVEL : __int8
{
  UART_TX_FIFO_LEVEL_0 = 0x0,
  UART_TX_FIFO_LEVEL_1 = 0x1,
  UART_TX_FIFO_LEVEL_2 = 0x2,
  UART_TX_FIFO_LEVEL_3 = 0x3,
};

/* 1211 */
enum UART_OP_CFG : __int8
{
  UART_OP_BLOCKING = 0x0,
  UART_OP_INTR = 0x1,
};

/* 1212 */
typedef void (*uart_cb_t)(uint16_t);

/* 1213 */
typedef void (*uart_err_cb_t)(uart_t *, uint8_t);

/* 1214 */
struct uart_cfg_t
{
  __int32 baud_rate : 24;
  __int8 data_bits : 3;
  __int8 parity : 2;
  __int8 stop_bits : 1;
  __int8 auto_flow_control : 1;
  __int8 use_fifo : 1;
  __int8 tx_fifo_tr_lvl : 2;
  __int8 rx_fifo_tr_lvl : 2;
  uint32_t intr_priority;
  uart_err_cb_t uart_err_cb;
  uart_cb_t uart_tx_cb;
  uart_cb_t uart_rx_cb;
};

/* 1215 */
struct otp_cs_addr_value_t
{
  uint32_t addr;
  uint32_t val;
};

/* 1216 */
struct otp_cs_trim_value_t
{
  uint32_t lp_clk_set[1];
  int16_t gp_adc_single_ge;
  int16_t gp_adc_single_offset;
  int16_t gp_adc_diff_ge;
  int16_t gp_adc_diff_offset;
  uint16_t gp_adc_trim_reg;
  int16_t gp_adc_offsh_ge;
  int16_t gp_adc_offsh_offset;
  uint16_t adc_25_cal;
  uint16_t xtal_wait_trim;
  uint16_t xtal_trim_value;
};

/* 1217 */
struct __attribute__((aligned(4))) otp_cs_t
{
  otp_cs_addr_value_t pd_rad[2];
  otp_cs_addr_value_t pd_adpll[6];
  otp_cs_trim_value_t trim_values;
  uint8_t pd_rad_pairs;
  uint8_t pd_adpll_pairs;
};

/* 1218 */
struct otp_cs_booter_val_t
{
  uint16_t dbg_cfg;
  uint16_t bandgap_reg;
  uint16_t clk_rc32m_reg;
  uint16_t clk_rc32k_reg;
};

/* 1219 */
struct $7011C88ECC5BE84F30945B4766F6B9E2
{
  unsigned __int32 _reserved0 : 28;
  unsigned __int32 V : 1;
  unsigned __int32 C : 1;
  unsigned __int32 Z : 1;
  unsigned __int32 N : 1;
};

/* 1220 */
union APSR_Type
{
  $7011C88ECC5BE84F30945B4766F6B9E2 b;
  uint32_t w;
};

/* 1221 */
struct $1A3F4086B4B259A3A84849011510F78C
{
  unsigned __int32 ISR : 9;
  unsigned __int32 _reserved0 : 23;
};

/* 1222 */
union IPSR_Type
{
  $1A3F4086B4B259A3A84849011510F78C b;
  uint32_t w;
};

/* 1223 */
struct $404C6C53D680280832D08EA4B605F0B9
{
  unsigned __int32 ISR : 9;
  unsigned __int32 _reserved0 : 15;
  unsigned __int32 T : 1;
  unsigned __int32 _reserved1 : 3;
  unsigned __int32 V : 1;
  unsigned __int32 C : 1;
  unsigned __int32 Z : 1;
  unsigned __int32 N : 1;
};

/* 1224 */
union xPSR_Type
{
  $404C6C53D680280832D08EA4B605F0B9 b;
  uint32_t w;
};

/* 1225 */
struct $EA1059961599FCFC2BF0AB253B342E0B
{
  unsigned __int32 nPRIV : 1;
  unsigned __int32 SPSEL : 1;
  unsigned __int32 _reserved1 : 30;
};

/* 1226 */
union CONTROL_Type
{
  $EA1059961599FCFC2BF0AB253B342E0B b;
  uint32_t w;
};

/* 1227 */
struct NVIC_Type
{
  volatile uint32_t ISER[1];
  uint32_t RESERVED0[31];
  volatile uint32_t ICER[1];
  uint32_t RESERVED1[31];
  volatile uint32_t ISPR[1];
  uint32_t RESERVED2[31];
  volatile uint32_t ICPR[1];
  uint32_t RESERVED3[31];
  uint32_t RESERVED4[64];
  volatile uint32_t IP[8];
};

/* 1228 */
struct SCB_Type
{
  const volatile uint32_t CPUID;
  volatile uint32_t ICSR;
  uint32_t RESERVED0;
  volatile uint32_t AIRCR;
  volatile uint32_t SCR;
  volatile uint32_t CCR;
  uint32_t RESERVED1;
  volatile uint32_t SHP[2];
  volatile uint32_t SHCSR;
};

/* 1229 */
struct SysTick_Type
{
  volatile uint32_t CTRL;
  volatile uint32_t LOAD;
  volatile uint32_t VAL;
  const volatile uint32_t CALIB;
};

/* 1230 */
enum tim0_2_clk_div_t : __int8
{
  TIM0_2_CLK_DIV_1 = 0x0,
  TIM0_2_CLK_DIV_2 = 0x1,
  TIM0_2_CLK_DIV_4 = 0x2,
  TIM0_2_CLK_DIV_8 = 0x3,
};

/* 1231 */
enum tim0_2_clk_t : __int8
{
  TIM0_2_CLK_OFF = 0x0,
  TIM0_2_CLK_ON = 0x1,
};

/* 1232 */
struct tim0_2_clk_div_config_t
{
  tim0_2_clk_div_t clk_div;
};

/* 1233 */
enum $8E368D0586093EF6620FAFDDF92E6568 : __int8
{
  UART_CHARFORMAT_5 = 0x0,
  UART_CHARFORMAT_6 = 0x1,
  UART_CHARFORMAT_7 = 0x2,
  UART_CHARFORMAT_8 = 0x3,
};

/* 1234 */
struct __uart_sel_pins_t
{
  uint8_t uart_port_tx;
  uint8_t uart_tx_pin;
  uint8_t uart_port_rx;
  uint8_t uart_rx_pin;
};

/* 1235 */
typedef __uart_sel_pins_t _uart_sel_pins_t;

/* 1236 */
enum __reset_options : __int8
{
  ENABLE_HW_RESET = 0x0,
  ENABLE_POR_RESET = 0x1,
  DISABLE_RESET = 0x2,
  RESET_MAX_VAL = 0x3,
};

/* 1237 */
typedef __reset_options _reset_options;

/* 1238 */
enum $450A3D078ECB3EFF4DF30D2286429D26 : __int8
{
  P0_0_AND_P0_1_INITIALIZED_FROM_EXT_TOOL = 0x0,
  P0_2_AND_P0_3_INITIALIZED_FROM_EXT_TOOL = 0x2,
  P0_3_SINGLE_W_INITIALIZED_FROM_EXT_TOOL = 0x3,
  P0_4_AND_P0_5_INITIALIZED_FROM_EXT_TOOL = 0x4,
  P0_5_SINGLE_W_INITIALIZED_FROM_EXT_TOOL = 0x5,
  P0_6_AND_P0_7_INITIALIZED_FROM_EXT_TOOL = 0x6,
};

/* 1239 */
enum __xtal_sections : __int8
{
  XTAL_SEC_MIN = 0x0,
  XTAL_SEC_MAX = 0x1,
  XTAL_SEC_ENUM_MAX_VAL = 0x2,
};

/* 1240 */
typedef __xtal_sections _xtal_sections;

/* 1241 */
struct bf_t
{
  unsigned __int32 data : 16;
  unsigned __int32 addr : 14;
  unsigned __int32 data8or16n : 1;
  unsigned __int32 valid : 1;
};

/* 1242 */
union t_arp_reg
{
  uint32_t value;
  bf_t bf;
};

/* 1243 */
struct s_arp_table
{
  t_arp_reg arpt_pwr[1];
  uint32_t null1;
  uint16_t tx_tbase;
  uint16_t rx_tbase;
  t_arp_reg arpt_pref[9];
  uint32_t null2;
  t_arp_reg tx_en_delay;
  t_arp_reg arpt_tx[7];
  uint32_t null3;
  t_arp_reg rx_en_delay;
  t_arp_reg arpt_rx[8];
  uint32_t null4;
};

/* 1245 */
struct $31FDB377CBA239063A684C1E4A50254F
{
  unsigned __int32 data : 16;
  unsigned __int32 addr : 14;
  unsigned __int32 data8or16n : 1;
  unsigned __int32 valid : 1;
};

/* 1244 */
union t_arp_reg_0
{
  uint32_t value;
  $31FDB377CBA239063A684C1E4A50254F bf;
};

/* 1246 */
struct s_arp_table_0
{
  t_arp_reg_0 arpt_pwr[1];
  uint32_t null1;
  uint16_t tx_tbase;
  uint16_t rx_tbase;
  t_arp_reg_0 arpt_pref[14];
  uint32_t null2;
  t_arp_reg_0 tx_en_delay;
  t_arp_reg_0 arpt_tx[3];
  uint32_t null3;
  t_arp_reg_0 rx_en_delay;
  t_arp_reg_0 arpt_rx[3];
  uint32_t null4;
};

/* 1247 */
typedef void (*systick_callback_function_t)(void);

/* 1248 */
struct __attribute__((aligned(4))) spi_env_t
{
  __int8 spi_ms : 1;
  __int8 spi_wsz : 4;
  __int8 spi_cs : 3;
  spi_cb_t send_cb;
  spi_cb_t receive_cb;
  spi_cb_t transfer_cb;
  uint8_t incr;
};

/* 1249 */
struct tx_state_t
{
  const uint8_t *data;
  uint16_t len;
  uint16_t num;
  i2c_complete_cb_t cb;
  void *cb_data;
  uint32_t flags;
};

/* 1250 */
struct rx_state_t
{
  uint8_t *data;
  uint16_t len;
  uint16_t num;
  uint16_t rr;
  i2c_complete_cb_t cb;
  void *cb_data;
  uint32_t flags;
};

/* 1251 */
struct i2c_env_tag_t
{
  tx_state_t tx_state;
  rx_state_t rx_state;
  i2c_interrupt_cb_t intr_cb;
};

/* 1252 */
struct __attribute__((aligned(4))) uart_env_t
{
  const uint8_t *tx_buffer;
  uint16_t tx_total_length;
  uint16_t tx_index;
  uint8_t *rx_buffer;
  uint16_t rx_total_length;
  uint16_t rx_index;
  uart_err_cb_t err_cb;
  uart_cb_t tx_cb;
  uart_cb_t rx_cb;
  uint8_t intr_priority;
  UART_RX_FIFO_LEVEL rx_fifo_tr_lvl;
  bool one_wire_enabled;
  GPIO_PORT one_wire_port;
  GPIO_PIN one_wire_pin;
};

/* 1253 */
enum $B202F2CDB420F47DCAF6ACFD3FC9D62D : __int8
{
  WKUPCT_PIN_POLARITY_HIGH = 0x0,
  WKUPCT_PIN_POLARITY_LOW = 0x1,
};

/* 1254 */
enum wkupct_quadec_error_t : __int8
{
  WKUPCT_QUADEC_ERR_RESERVED = 0xFF,
  WKUPCT_QUADEC_ERR_OK = 0x0,
};

/* 1255 */
typedef void (*wakeup_handler_function_t)(void);

/* 1256 */
typedef void (*quad_encoder_handler_function_t)(int16_t, int16_t, int16_t);

/* 1257 */
enum CHX_PORT_SEL_t : __int8
{
  QUAD_DEC_CHXA_NONE_AND_CHXB_NONE = 0x0,
  QUAD_DEC_CHXA_P02_AND_CHXB_P05 = 0x1,
  QUAD_DEC_CHXA_P01_AND_CHXB_P04 = 0x2,
  QUAD_DEC_CHXA_P03_AND_CHXB_P10 = 0x3,
  QUAD_DEC_CHXA_P06_AND_CHXB_P07 = 0x4,
  QUAD_DEC_CHXA_P08_AND_CHXB_P09 = 0x5,
  QUAD_DEC_CHXA_P00_AND_CHXB_P11 = 0x6,
};

/* 1258 */
enum CHX_EVENT_MODE_t : __int16
{
  QUAD_DEC_CHX_NORMAL_COUNTING = 0x0,
  QUAD_DEC_CHX_EDGE_COUNTING = 0x200,
};

/* 1259 */
enum CHY_PORT_SEL_t : __int8
{
  QUAD_DEC_CHYA_NONE_AND_CHYB_NONE = 0x0,
  QUAD_DEC_CHYA_P02_AND_CHYB_P05 = 0x8,
  QUAD_DEC_CHYA_P01_AND_CHYB_P04 = 0x10,
  QUAD_DEC_CHYA_P03_AND_CHYB_P10 = 0x18,
  QUAD_DEC_CHYA_P06_AND_CHYB_P07 = 0x20,
  QUAD_DEC_CHYA_P08_AND_CHYB_P09 = 0x28,
  QUAD_DEC_CHYA_P00_AND_CHYB_P11 = 0x30,
};

/* 1260 */
enum CHY_EVENT_MODE_t : __int16
{
  QUAD_DEC_CHY_NORMAL_COUNTING = 0x0,
  QUAD_DEC_CHY_EDGE_COUNTING = 0x400,
};

/* 1261 */
enum CHZ_PORT_SEL_t : __int16
{
  QUAD_DEC_CHZA_NONE_AND_CHZB_NONE = 0x0,
  QUAD_DEC_CHZA_P02_AND_CHZB_P05 = 0x40,
  QUAD_DEC_CHZA_P01_AND_CHZB_P04 = 0x80,
  QUAD_DEC_CHZA_P03_AND_CHZB_P10 = 0xC0,
  QUAD_DEC_CHZA_P06_AND_CHZB_P07 = 0x100,
  QUAD_DEC_CHZA_P08_AND_CHZB_P09 = 0x140,
  QUAD_DEC_CHZA_P00_AND_CHZB_P11 = 0x180,
};

/* 1262 */
enum CHZ_EVENT_MODE_t : __int16
{
  QUAD_DEC_CHZ_NORMAL_COUNTING = 0x0,
  QUAD_DEC_CHZ_EDGE_COUNTING = 0x800,
};

/* 1263 */
struct __attribute__((aligned(2))) QUAD_DEC_INIT_PARAMS_t
{
  CHX_EVENT_MODE_t chx_event_mode;
  CHY_EVENT_MODE_t chy_event_mode;
  CHZ_EVENT_MODE_t chz_event_mode;
  CHX_PORT_SEL_t chx_port_sel;
  CHY_PORT_SEL_t chy_port_sel;
  CHZ_PORT_SEL_t chz_port_sel;
  uint16_t qdec_clockdiv;
  uint8_t qdec_events_count_to_trigger_interrupt;
};

/* 1264 */
struct lld_sleep_init_func::lld_sleep_env_tag
{
  uint32_t irq_mask;
};

/* 1265 */
struct lld_data_ind;

/* 1266 */
struct rf_reinit_func::LUT_CFG_struct
{
  int8_t HW_LUT_MODE;
  int8_t RX_HSI_ENABLED;
  int8_t PA_PULLING_OFFSET;
  int8_t NR_CCUPD_1ST;
  int8_t NR_CCUPD_REST;
  int8_t NR_CCUPD_OL;
  int8_t BLE_BAND_MARGIN;
  int8_t EST_HALF_OVERLAP;
  int8_t REQUIRED_CHAN_OVERLAP;
  uint8_t PLL_LOCK_VTUNE_NUMAVGPOW;
  int16_t PLL_LOCK_VTUNE_LIMIT_LO;
  int16_t PLL_LOCK_VTUNE_LIMIT_HI;
  int16_t PLL_LOCK_VTUNE_P2PVAR;
  int16_t PLL_LOCK_TIMING;
  uint16_t VCO_CALCNT_STARTVAL;
  uint16_t VCO_CALCNT_TIMEOUT;
};

/* 1267 */
union __attribute__((aligned(8))) __n64
{
  unsigned __int64 n64_u64[1];
  unsigned __int32 n64_u32[2];
  unsigned __int16 n64_u16[4];
  unsigned __int8 n64_u8[8];
  __int64 n64_i64[1];
  __int32 n64_i32[2];
  __int16 n64_i16[4];
  __int8 n64_i8[8];
  float n64_f32[2];
  double n64_f64[1];
};

/* 1268 */
union __attribute__((aligned(8))) __n128
{
  unsigned __int64 n128_u64[2];
  unsigned __int32 n128_u32[4];
  unsigned __int16 n128_u16[8];
  unsigned __int8 n128_u8[16];
  __int64 n128_i64[2];
  __int32 n128_i32[4];
  __int16 n128_i16[8];
  __int8 n128_i8[16];
  float n128_f32[4];
  double n128_f64[2];
};

/* 1269 */
typedef __n64 int8x8_t;

/* 1270 */
typedef __n64 uint8x8_t;

/* 1271 */
typedef __n64 int16x4_t;

/* 1272 */
typedef __n64 int32x2_t;

/* 1273 */
typedef __n64 uint16x4_t;

/* 1274 */
typedef __n64 uint32x2_t;

/* 1275 */
typedef __n128 int8x16_t;

/* 1276 */
typedef __n128 int16x8_t;

/* 1277 */
typedef __n128 int32x4_t;

/* 1278 */
typedef __n128 int64x2_t;

/* 1279 */
typedef __n128 uint8x16_t;

/* 1280 */
typedef __n128 uint16x8_t;

/* 1281 */
typedef __n128 uint32x4_t;

/* 1282 */
typedef __n128 uint64x2_t;

/* 1283 */
typedef __n64 poly8x8_t;

/* 1284 */
typedef __n64 poly16x4_t;

/* 1285 */
typedef __n128 poly16x8_t;

/* 1286 */
typedef __n128 poly8x16_t;

/* 1287 */
typedef __n64 float32x2_t;

/* 1288 */
typedef __n128 float32x4_t;

/* 1289 */
typedef __n128 float64x2_t;

/* 1290 */
typedef __n128 poly128_t;

/* 1291 */
typedef int (__fastcall *dummy_func)(char *);

/* 1292 */
struct rom_func_addr_table_struct
{
  dummy_func rf_init_func;
  dummy_func rf_reinit_func;
  dummy_func uart_init_func;
  dummy_func uart_flow_on_func;
  dummy_func uart_flow_off_func;
  dummy_func uart_finish_transfers_func;
  dummy_func uart_read_func;
  dummy_func one_wire_uart_write_func;
  dummy_func UART_Handler_func;
  dummy_func gtl_init_func;
  dummy_func gtl_eif_init_func;
  dummy_func gtl_eif_read_start_func;
  dummy_func gtl_eif_read_hdr_func;
  dummy_func gtl_eif_read_payl_func;
  dummy_func one_wire_uart_gtl_eif_tx_done_func;
  dummy_func gtl_eif_rx_done_func;
  dummy_func h4tl_init_func;
  dummy_func h4tl_read_start_func;
  dummy_func h4tl_read_hdr_func;
  dummy_func h4tl_read_payl_func;
  dummy_func h4tl_read_next_out_of_sync_func;
  dummy_func h4tl_out_of_sync_func;
  dummy_func one_wire_uart_h4tl_tx_done_func;
  dummy_func h4tl_rx_done_func;
  dummy_func ke_task_init_func;
  dummy_func ke_timer_init_func;
  dummy_func llm_encryption_done_func;
  dummy_func nvds_get_func;
  dummy_func nvds_put_func;
  dummy_func nvds_del_func;
  dummy_func nvds_init_func;
  dummy_func rwip_eif_get_func;
  dummy_func platform_reset_func;
  dummy_func lld_sleep_compensate_func;
  dummy_func lld_sleep_init_func;
  dummy_func lld_sleep_us_2_lpcycles_sel_func;
  dummy_func lld_sleep_lpcycles_2_us_sel_func;
  dummy_func lld_test_stop_func;
  dummy_func lld_test_mode_tx_func;
  dummy_func JT_lld_test_mode_rx_func;
  dummy_func smpc_check_param_func;
  dummy_func smpc_pdu_recv_func;
  dummy_func prf_init_func;
  dummy_func prf_add_profile_func;
  dummy_func prf_create_func;
  dummy_func prf_cleanup_func;
  dummy_func prf_get_id_from_task_func;
  dummy_func prf_get_task_from_id_func;
  dummy_func SetSystemVars_func;
  dummy_func dbg_init_func_empty;
  dummy_func dbg_platform_reset_complete_func_empty;
  dummy_func hci_rd_local_supp_feats_cmd_handler_func;
  dummy_func l2cc_pdu_pack_func;
  dummy_func JT_l2cc_pdu_unpack_func;
  dummy_func l2c_send_lecb_message_func;
  dummy_func l2c_process_sdu_func;
  dummy_func JT_l2cc_pdu_recv_ind_handler_func;
  dummy_func gapc_lecb_connect_cfm_handler_func;
  dummy_func atts_l2cc_pdu_recv_handler_func;
  dummy_func attc_l2cc_pdu_recv_handler_func;
  dummy_func crypto_init_func;
  dummy_func llm_le_adv_report_ind_func;
  dummy_func PK_PointMult_func;
  dummy_func llm_p256_start_func;
  dummy_func llm_create_p256_key_func;
  dummy_func llm_p256_req_handler_func;
  dummy_func llc_le_length_effective_func;
  dummy_func llc_le_length_conn_init_func;
  dummy_func lld_data_tx_prog_func;
  dummy_func lld_data_tx_check_func;
  dummy_func llc_pdu_send_func;
  dummy_func llc_data_notif_func;
  dummy_func dia_rand_func;
  dummy_func dia_srand_func;
  dummy_func ba431_get_rand_func;
  dummy_func smpc_public_key_exchange_start_func;
  dummy_func smpc_dhkey_calc_ind_func;
  dummy_func smpm_ecdh_key_create_func;
  dummy_func ble_init_arp_func;
  dummy_func unk_func_1;
  dummy_func unk_func_2;
  dummy_func unk_func_3;
  dummy_func unk_func_4;
  dummy_func unk_func_5;
  dummy_func unk_func_6;
  dummy_func unk_func_7;
  dummy_func unk_func_8;
  dummy_func unk_func_9;
  dummy_func unk_func_a;
  dummy_func unk_func_b;
  dummy_func unk_func_c;
  dummy_func unk_func_d;
  dummy_func unk_func_e;
  dummy_func unk_func_f;
  dummy_func unk_func_g;
};

